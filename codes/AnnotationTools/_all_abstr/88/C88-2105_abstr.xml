<?xml version="1.0" standalone="yes"?>

<Paper uid="C88-2105">
<Title>LIST. AUTOMATA WITH SYNTAC'\]\[&amp;quot; I CAL LY STRUCTURED OU~ PU~ ~</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
Abstract:
</SectionTitle>
<Paragraph position="0"> A new type of abstract automaton is introduced, and both formal and linguistic implications are discussed, most importantly a new possibility of proving certain formal properties of (natural) languages and their grammars (such as context-freeness) and of refinement of the Chomsky hierarchy.</Paragraph>
<Paragraph position="1"> I. Introduction In this article we want to propose a new type of (abstract) nondeterministic automaton; its most distinguishing feature is that its input data is a l_!inear doubly, linked list and its output is a s~ntac!ic strncture , on condition that the computation was successful, i.e. the word represented by the input list was in the language defined by the automaton, all nondeterministic decisions of the automaton were correct (the automaton &amp;quot;guessed&amp;quot; what to do) and, hence, the computation finished in an accepting configuration.</Paragraph>
<Paragraph position="2"> Apart from other features, this automaton gives a uniform formal environment for the formulation of formal syntax of natural language(s), regardless of the intuitions standing behind the linguistic theory in Question; here, we have in mind first of all the dependency or immediate constituent approach to language description.</Paragraph>
<Paragraph position="3"> The intuition standing behind the de___ep_~D_T dencl approach is based on erasin~ words from the sentence and studying whether the resulting string is grammatical: by means of this, the relative mutual importance of words (i.e., d_~ependency, as the relation between the syntactically &amp;quot;more important&amp;quot; word, governor, and the &amp;quot;less important&amp;quot;, den__~%, word) can be stepwise determined and then expressed e.g. in a dependency tree of the sentence. Clearly, in more complex cases, it is impossible to subsume all these relations in a sentence purely by means of dependency, since there are also other relations to be found between words (such as coordination or apposition), as well as it is impossible to express all possible relations of dependency in the form of a tree, because in certain cases a single dependent word might have more than one governor (e.g., in cases of words depending on coordination of govern- Ors). On the other hand, the intuitions standing behind the imediate constituent approach is that of replacing certain groups of words by others, and, again, studying the grammatioality of the result By means of this process, the sentences can be stepwise splitted t 9 smaller and smaller parts from which they are built of, and the structure thus obtained cln be then expressed in an IC-tree.</Paragraph>
<Paragraph position="4">  In fact, we believe that both these intui-~ tions are extremely insightful and that it is a regretful misunderstanding that they are still felt as oppositions rather than complementations by many linguists; though there have been several attempts to merge them into a single theory (T-syntax is surely the most notable case), we are still convinced that the results do not suffice fully. The type of automaton (&amp;quot;accepter&amp;quot;) we propose is in fact able to simulate elegantly any of the two approaches during the process of computation and to reflect them also in the structure of its output. Thus, it makes no distinction between these two linguistic approaches and allows for formulations of theories based on one or the other approach or even on any their mixture.</Paragraph>
</Section>
</Paper>

