<?xml version="1.0" standalone="yes"?>

<Paper uid="C88-1060">
<Title>An Algorithm for Functional Uncertainty</Title>
<Section position="2" start_page="297" end_page="297" type="abstr">
<SectionTitle>
2. Verification
</SectionTitle>
<Paragraph position="0"> The verification problem is the problem of determining whether or not a given f-structure F satisfies a particular functional description for some assignment of elements of F to the variables in the description.</Paragraph>
<Paragraph position="1"> This question is important in lexical-functional theory because the proper evaluation of I,FG's constraint equations depends on it. It is easy to show that the verification problem for an f-description including an uncertainty such as (fa) = v is decidable ifF is a noncyc|ic f-structure. If F is noncyclic, it contains only a finite number of function-application sequences and thus only a finite number of strings that might satisfy the uncertainty equation. The membership problem for the regular sets is decidable and each of those strings can therefore he tested to see whether it belongs to the uncertainty language, and if so, whether the uncertainty equation holds when the uncertainty is instantiated to that string. Alternatively, the set of application strings can be treated as a (finite) regular language that can be intersected with the uncertainty language to determine the set of strings (if any) for which the equation must be evaluated.</Paragraph>
<Paragraph position="2"> This alternative approach easily generalizes to the more complex situation in which the given f-structure contains cycles of applications. A cyclic F contains at least one element g that satisfies an equation of the form (gy)=g for some stringy. It thus involves an infinite number of function-application sequences and hence an infinite number of strings any of which might satisfy an uncertainty.</Paragraph>
<Paragraph position="3"> But a finite-state machine can be constructed that accepts exactly the strings of attributes in these application sequences, for example, by using the Kasper/Rounds automaton model for f-structures (Kasper and Rounds, 1986). These strings thus form a regular language whose intersection with the uncertainty language is a regular set I containing all the strings for which the equation must be evaluated. If I is empty, the uncertainty is unsatisfiable. Otherwise, the set may be infinite, but ifF satisfies the uncertainty equation for any string at all, we can show the equation will be satisfied when the uncertainty is instantiated to one of a finite number of short strings in I. Let n be the number of states in a minimum-state deterministic finite-state acceptor for \[ and suppose that the uncertainty equation holds for a string w in I whose length Iwl is greater than n. From the Pumping Lemma for regular sets we know there are strings x, y, and z such that w=xyz, lYl &gt;- l, and for all m -&gt; 0 the string xymz is in L But these latter strings can be appfication-sequences in F only if y picks out a cyclic path, so that ((fx) y) = (fx). Thus we have</Paragraph>
<Paragraph position="5"> with xz shorter than w but still in I and hence in the uncertainty language a. lflxz I is greater then n, this argument can be reapplied to find yet a shorter string that satisfies the uncertainty. Since w was a finite string to begin with, this process will eventually terminate with a satisfying string whose length is less than or equal to n. We can therefore determine whether or not the uncertainty holds by examining only a finite number of strings, namely, the strings in \[ whose length is bounded by n.</Paragraph>
<Paragraph position="6"> This argument can be translated to an efficient, practical solution to the verification problem by interleaving the intersection and testing steps. We enumerate common paths from the start-state of a minimum-state acceptor for a and from the f-structure denoted by fin F. In this traversal we keep track of the pairs of states and subsidiary f-structures we have encountered and avoid retraversing paths from a state/f-structure pair we have already visited. We then test the uncertainty condition against the f-structure values we reach along with final states in the u acceptor.</Paragraph>
</Section>
</Paper>

