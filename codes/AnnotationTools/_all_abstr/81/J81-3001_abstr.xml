<?xml version="1.0" standalone="yes"?>

<Paper uid="J81-3001">
<Title>Roles, Co-Descriptors, and the Formal Representation of Quantified English Expressions</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> In representing the semantics of English sentences, it is traditional to distinguish &amp;quot;logical form&amp;quot; from semantic content. Chomsky \[2\], for instance, introduces LF (his version of logical form) as a linguistic level of representation between syntax (phrase structure) and semantics.</Paragraph>
<Paragraph position="1"> Representations of logical form, which are typically based on predicate calculus or lambda calculus, must be carefully chosen for empirical adequacy as well as computational convenience. There are at least three general ways in which predicate or lambda calculus might be carried over into representations of logical form:  (la) directly (as by a theorem prover); (lb) by replacing quantification with dynamically scoped iteration procedures (as in Woods \[30\]); or 1 This paper was substantially revised after Professor Martin's  death by a group of his colleagues to satisfy length constraints and to take advantage of the reviewers' extensive and thoughtful comments. We wish to thank the editor and reviewers for their cooperation under these unfortunate circumstances. Prof. Martin's original acknowledgment follows.</Paragraph>
<Paragraph position="2"> Ken Church, Lowell Hawkinson, Mitchell Marcus, Peter Szolovits, and Lucia Vaina read an earlier version of this manuscript and made many helpful comments. Ellen Lewis and Anne Schmitt did an excellent job of preparing the manuscript and figures. This research was supported by the Defense Advance Research Projects Agency and monitored by the Office of Naval Research under contracts N00014-75-C-0661 and N00014-80-C-0505.</Paragraph>
<Paragraph position="3"> (lc) by translating into a semantic network formalism (as in Hendrix \[10\]).</Paragraph>
<Paragraph position="4"> The second and third are more process-oriented; that is, they more closely relate elements of the representation and states in the interpretation process. In my view, a process orientation is needed if issues of efficiency are to be discussed at all. 2 One key to efficiency is the delaying of decisions as long as possible. This is easier to achieve when differences between alternative interpretations are minimized.</Paragraph>
<Paragraph position="5"> The two process-oriented approaches noted above differ in their treatment of scope dependencies. For example, we can model &amp;quot;each bottle&amp;quot; in (2) Each cork is fastened to each bottle by a small wire basket.</Paragraph>
<Paragraph position="6"> with a quantifier like (Y=x: bottle), and then translate that into an explicit FOR loop clause. Alternatively, we can employ Skolem functions, with &amp;quot;wire&amp;quot; and &amp;quot;basket&amp;quot; modeled as functions of a variable ranging over &amp;quot;bottle&amp;quot;. These functions and variables can then be represented in a semantic network, along the lines discussed in &amp;quot;What's in a Link?&amp;quot; \[29\].</Paragraph>
<Paragraph position="7"> I choose to adopt a particular semantic network approach wherein it is more appropriate to view meanings of nodes decompositionally (i.e., as dependent upon what they are constituents of) rather than compositionally (i.e., as fully determined by the meanings 2 It is unclear how to pose efficiency questions in a nonprocess-oriented framework, where even effectiveness may be rejected as a desideratum.</Paragraph>
<Paragraph position="8"> Copyright 1981 by the Association for Computational Linguistics. Permission to copy. without fee all or part of this material is granted provided that the copies are not made for direct commercial advantage and the Journal reference and this copyright notice are included on the first page. To copy otherwise, or to republish, requires a fee and/or specific permission.  of their constituents). More specifically, the meaning of a network node depends (decompositionally) on how it is related though &amp;quot;role-in links ''3 to nodes representing more aggregate entities. The decompositional view is preferable for explaining a number of linguistic phenomena. I will show, in this paper, that many important linguistic and philosophical distinctions can be analyzed as differences in role-in linkages. Among these are the intensional/extensional, referential/attributive, and distributive/collective distinctions. null My approach turns out to be more complex than some, but I will argue that it captures subtle cases in a more natural way and that it is superior for computational purposes. Indeed it has been my experience (as in the development of MACSYMA \[13\]) that a representational formalism with more constructs often permits more efficient processing than a formalism based on a smaller set of more primitive operators. I suspect that this experience will strike home with many readers familiar with the difficulties encountered by predicate-calculus-based theorem provers.</Paragraph>
</Section>
</Paper>

