<?xml version="1.0" standalone="yes"?>

<Paper uid="J81-2003">
<Title>The Meaning of OF and HAVE in the USL System</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> The User Specialty Languages (USL) System translates input in natural language German into expressions in the formal language of the data base system associated with USL, accesses the data base with these expressions and transmits the results to the user either directly or after performing additional operations on the output. The system was developed at the Heidelberg Scientific Center of IBM Germany by H. Lehmann, N. Ott, the students K. Horl~inder and W.</Paragraph>
<Paragraph position="1"> Sauermann, and the author.</Paragraph>
<Paragraph position="2"> USL was designed to provide data base access for user groups whose requirements are not satisfied by standard programs and for whom having special programs written or learning to program themselves would not be feasible.</Paragraph>
<Paragraph position="3"> The system was to be capable of dealing with natural language in a variety of different application contexts and not restricted to a particular field or world. This purpose determined the methods used and the corresponding limitations of the system. Within these limits, we have tried in the implementation to incorporate the syntactic constructions to be expected in the context of data base interaction and to provide the correct interpretations for them.</Paragraph>
<Paragraph position="4"> The data base management system is an implementation of the relational model, the Peterlee Relational Test Vehicle (PRTV, Todd, 1975) with its data base language ISBL. This is the target language of the translation process. The method of translation is a substantial extension of the methods used in the REL System (Rapidly Extensible Language, Thompson et al., 1969, Dostert et al., 1971). This system treats natural language much like a formal language in that syntactic constructions and function words are interpreted by the system according to the semantics of the language built into the system, but nouns, verbs, and adjectives are treated as variables of which only the data type -- the word class -- is known.</Paragraph>
<Paragraph position="5"> The underlying assumption is the following: The meanings of prepositions, dates, verbs like HAVE and BE and syntactic constructions, on the one hand, are independent of the subject matter; on the other hand, nouns, verbs, and adjectives and their meanings vary from application to application. In the context of a given data base, these words identify the names of relations; their meaning is restricted to the association between word and corresponding relation. Names and numbers identify values within tuples.</Paragraph>
<Paragraph position="6"> In USL, these words can be added to the system by the user to match the shape of the relations in his data base. A prompting routine guides the vocabulary definition and makes sure that all information needed by the system is entered.</Paragraph>
<Paragraph position="7"> The advantage of not providing the user with the vocabulary of his application already built into the system is that he is not restricted in his choice of words, and new words can be added easily. The dis-Copyright 1981 by the Association for Computational Linguistics. Permission to copy without fee all or part of this material is granted provided that the copies are not made for direct commercial advantage and the Journal reference and this copyright notice are included on the first page. To copy otherwise, or to republish, requires a fee and/or specific permission. 0362-613X/81/020109-11501.00 American Journal of Computational Linguistics, Volume 7, Number 2, April-June 1981 109 Magdatena Zoeppritz The Meaning of OF and HAVE in the USL-System advantage is that the system knows only what has been explicitly defined by the user, and common sense knowledge, e.g. that an employee is a person or that a salary does not own a house, is not reflected in the system and is not used in the interpretation process.</Paragraph>
<Paragraph position="8"> This also means that the interpretation can make only very restricted use of deep case relationships, because the information on deep cases would have to be obtained from the user. We see no way as yet to elicit this information reliably and consistently, without confusing or boring the user.</Paragraph>
<Paragraph position="9"> When used for an application, then, the system works with two vocabularies, one user-defined, containing the nouns, verbs, and adjectives referring to the data base of his application, the other systemdefined, containing prepositions, quantifiers, interrogatives, particles, names of days and months, nouns referring to operations like minimum, maximum, plus, minus, etc., the verbs BE and HAVE, and adjectives like GREATER, MORE, and LESS. The system-defined words and their meanings to the system are the same for all applications.</Paragraph>
<Paragraph position="10"> The purpose of this paper is to discuss and demonstrate the interpretation of one of these system-defined words: the verb HAVE when used as the main verb of a sentence. (HAVE as an auxiliary has not been implemented.) An overview of the system first establishes the framework in which this interpretation has its place. This is followed by a discussion of HAVE in general and possible representations of it in USL. The solution proposed here and implemented in USL uses the transformational relationship between HAVE-sentences and OF-phrases to represent and search data contained in HAVE-sentences in the relation addressed by the accusative of HAVE. This interpretation is applied to a list of representative queries and phrases against a small data base as a test of the interpretation and as an illustration of the interpretation process. In the concluding sections, the interpretation is extended to prepositional attributes with WITH and WITHOUT, and problems are discussed.</Paragraph>
</Section>
</Paper>

