<?xml version="1.0" standalone="yes"?>

<Paper uid="J89-4002">
<Title>NATURAL LANGUAGE GENERATION FROM PLANS</Title>
<Section position="1" start_page="0" end_page="0" type="abstr">
<SectionTitle>
NATURAL LANGUAGE GENERATION FROM PLANS
</SectionTitle>
<Paragraph position="0"> This paper addresses the problem of designing a system that accepts a plan structure of the sort generated by AI planning programs and produces natural language text explaining how to execute the plan. We describe a system that generates text from plans produced by the NONLIN planner (Tate 1976).</Paragraph>
<Paragraph position="1"> The results of our system are promising, but the texts still lack much of the smoothness of human-generated text. This is partly because, although the domain of plans seems a priori to provide rich structure that a natural language generator can use, in practice a plan that is generated without the production of explanations in mind rarely contains the kinds of information that would yield an interesting natural language account. For instance, the hierarchical organization assigned to a plan is liable to reflect more a programmer's approach to generating a class of plans efficiently than the way that a human would naturally &amp;quot;chunk&amp;quot; the relevant actions. Such problems are, of course, similar to those that Swartout (1983) encountered with expert systems. In addition, AI planners have a restricted view of the world that is hard to match up with the normal semantics of natural language expressions.</Paragraph>
<Paragraph position="2"> Thus constructs that are primitive to the planner may be only clumsily or misleadingly expressed in natural language, and the range of possible natural language constructs may be artificially limited by the shallowness of the planner's representations.</Paragraph>
</Section>
</Paper>

