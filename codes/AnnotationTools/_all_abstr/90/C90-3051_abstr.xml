<?xml version="1.0" standalone="yes"?>

<Paper uid="C90-3051">
<Title>Incremental Parsing and Reason Maintenance</Title>
<Section position="1" start_page="0" end_page="0" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> The purpose of this paper is to compare different ways of adopting reason-maintenance techniques in incremental parsing (and interpretation). A reason-maintenance system supports incremental tbrmation and revision of beliefs. By viewing the construction of partial analyses of a text as analogous to forming beliefs about the meanings of its parts, a relation between parsing and reason maintenance can be conceived. In line with this, reason maintenance can bc used for realizing a strong notion of incremental parsing, allowing for revisions of previous analyses.</Paragraph>
<Paragraph position="1"> Moreover, an assumption-based reason-maintenance system (ATMS) can be used to support eftieicnt comparisons of (competing) interpretations. The paper argues for an approach which is an extension of chart parsing, but which also can be seen as a system consisting of an inference engine (the parser proper) coupled with a simplified ATMS.</Paragraph>
<Paragraph position="2"> Background and Introduction This paper focuses on the problem of incremental parsing (and to some extent interpretation); in particular, how reason-maintenance techniques can be used to achieve a strong notion of incrementality allowing for piecemeal construction, revision, and comp;~rison of partial analyses.</Paragraph>
<Paragraph position="3"> Human language understanding is apparently incremental in the sense of proceeding in a piecemeal fashion, (ideally) carried out in small, grad= ual steps as each word is encountered (Tyler and Marslen-Wilson 1977, Marslen-Wilson and Tyler 1980). Work on incremental parsing and interpretation is typically motivated by a desire to model, or mimic, (aspects of) this behaviour, for example, Bobrow and Webber (1980), Ades and Steedman (1982), Mellish (1985), Pulman (1985), and Haddock (1987~ 1988~ 1990).</Paragraph>
<Paragraph position="4"> tlowever, there are also clear-cut computational reasons for trying to attain incrernentality. Sparked This research has been supported by the National Swedish Board for Technical Development.</Paragraph>
<Paragraph position="5"> off by the rapid development of increasingly powerful, distributed computer hardware, a paradigm of &amp;quot;immediate computation&amp;quot; is gaining popularity in interactive applications like WYSIWYG word processing, spreadsheet programs, and programming-language editors (Reps and Teitelbaum 1984, 1987). It is interesting to consider similar systems applied to interactive natural-language processing. The point is that incrementality is a prerequisite of the reactiw~, real~time-based behaviour of such systems.</Paragraph>
<Paragraph position="6"> Furthermore, systems that mix for example deictic and natural-language input require that linguistic status be given to sentence fragments, thus demanding incremental analysis (Kobsa et al. 1986).</Paragraph>
<Paragraph position="7"> One body of work which appears to be usefifl in incremental parsing and interpretation is re,on (or truth) maintenanceJ A reason-maintenance system (RMS) supports incremental formation and revision of beliefs. By viewing the construction of partial analyses of a text as analogous to forming beliefs about the meanings of its parts, a relation between parsing and reason maintenance can be conceived.</Paragraph>
<Paragraph position="8"> An RMS is coupled with an inference engine (for example, a parser) which makes inferences within the problem domain, and the overall, combined system can be seen as an inferential problem solver.</Paragraph>
<Paragraph position="9"> The RMS makes use of two data structures, nodes and justifications. A node represents a datum provided by the inference engine, such as an assumption or an inferred proposition. Whenever a datum is inferred from a conjunction of other data, the RMS records this dependency ms a justification which relates the respective nodes. The RMS thus keeps track of what data are believed and disbelieved, and why, given the inferences made so far.</Paragraph>
<Paragraph position="10"> The traditional approach, justification-based reason maintenance, JTMS (Doyle 1979), is to maintain a (global) belief by associating with each node a status of in (indicating belief in the corresponding datum) or out (indicating lack of belief in the datum) such that every justification is satisfied. 2 The entire set of (consistent) in data make up the cur- null rent context (belief, interpretation3). In case of a contradiction, dependency-directed backtracking is invoked to identify the inconsistent assumptions and enable retraction of some of them.</Paragraph>
<Paragraph position="11"> A more recent approach is assumption-based reason maintenance, ATMS (de Kleer 1986), which supports problem solving in multiple contexts simultaneously .... there is no need to keep the over-all database consistent as in the JTMS. Thus, the ATMS is oriented towards finding all solutions, whereas a JTMS is oriented towards finding only one solution. In this and other respects, an ATMS resembles chart parsing (Kay 1980, Thompson and Ritchie 1984), something which will be further dealt with below. Each ATMS node has a label with information about the minimal sets of assumptions on which it ultimately depends. Thus, rather than associating explicit in/out information with nodes, the status of a node with respect to a context can be determined by comparing the label of the node with the assumptions that underlie the context. There is no dependency-directed backtracking in an ATMS since contradictions do not pose any problem and the assumptions underlying a contradiction are directly identifiable.</Paragraph>
<Paragraph position="12"> The rest of this paper is organized as follows: Sections 2 and 3 review and compare various ways of adopting JTMS and ATMS techniques in parsing and interpretation. Section 4 carries on with discussing specifically how an ATMS-style system can be used in various applications of incremental parsing and interpretation, and, finally, section 5 smnmarizes the conclusions.</Paragraph>
</Section>
</Paper>

