<?xml version="1.0" standalone="yes"?>

<Paper uid="H90-1006">
<Title>The Use of Relative Duration in Syntactic Disambiguation</Title>
<Section position="1" start_page="0" end_page="29" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> We describe the modification of a grammar to take advantage of prosodic information automatically extracted from speech. The work includes (1) the development of an integer &amp;quot;break index&amp;quot; representation of prosodic phrase boundary information, (2) the automatic detection of prosodic phrase breaks using a hidden Markov model on relative duration of phonetic segments, and (3) the integration of the prosodic phrase break information in SRI's Spoken Language System to rule out alternative parses in otherwise syntactically ambiguous sentences. Initial experiments using ambiguous sentences read by radio announcers achieved good results in both detection and parsing. Automatically detected phrase break indices had a correlation greater than 0.86 with hand-labeled data for speaker-dependent models; and, in a subset of sentences with preposition ambiguities, the number of parses was reduced by 25% with a simple grammar modification.</Paragraph>
<Paragraph position="1"> Introduction &amp;quot;Prosody,&amp;quot; the suprasegmental information in speech, i.e., information that cannot be localized to a specific sound segment, can mark lexical stress, identify phrasing breaks and provide information useful for semantic interpretation. Although all of these aspects may be useful in spoken language systems, particularly important are prosodic phrase breaks which can provide cues to syntactic structure to help select among competing hypotheses, and thus help to disambiguate otherwise ambiguous sentences. In speech understanding applications, information such as prosody that aids disambiguation, is particularly important, since speech input, as opposed to text, introduces a vast increase in the amount of ambiguity a parser must face. For example, Harrington and Johnstone \[7\] found that even when all phonemes are correctly identified, the indeterminancy of phoneme sequences when word boundaries are unknown yields in excess of 1000 word string parses for many of their 4 to 10 word sentences. Moreover, these estimates rise dramatically as indeterminancy is introduced in the phoneme sequences: only 2% of the same sentences had fewer than 1,000 parses when phonetically similar phonemes were clustered together (e.g., voiced stops). This indeterminancy vastly increases the work for a parser.</Paragraph>
<Paragraph position="2"> The work reported here focuses on the use of relative duration of phonetic segments in the assignment of syntactic structure, assuming a known word sequence.</Paragraph>
<Paragraph position="3"> Specifically, relative duration of phonemes is estimated by a speech recognizer constrained to recognize the correct string of words. These duration values are then used to compute phrase break indices, which are in turn used to rule out alternative parses in otherwise syntactically ambiguous sentences. In this paper, we begin by providing some theoretical background on prosodic phrase breaks, and by describing a numerical representation of phrase breaks for use in speech understanding. Next we describe algorithms for automatic recognition of these break indices from speech for known text, and the modification of a grammar to use these indices in parsing.</Paragraph>
<Paragraph position="4"> Finally, we present experimental results based on ambiguous sentences from three speakers, showing that the use of prosodic information can significantly reduce the number of candidate syntactic parses by pruning mismatches between prosody and syntax.</Paragraph>
<Paragraph position="5">  In recent years, there have been significant advances in the phonology of prosodic phrases. While this work is not yet explicit enough to provide rules for automatically determining the prosodic phrase boundaries in speech, it is useful as a foundation for our computational models.</Paragraph>
<Paragraph position="6"> Several researchers in linguistics have proposed hierarchies of prosodic phrases \[9, 12, 10\]. Although not all levels of these hierarchies are universally accepted, our data appear to provide evidence for prosodic words as individual words or clitic groups, groupings of prosodic words, intermediate phrases, intonational phrases, groupings of intermediate phrases as in parenthetical phrases, and sentences. Since it is not clear how many of these levels will be useful in speech understanding, we have represented all seven possible types of boundaries, but focus initially on the information in the highest levels, sentences and intonational phrases.</Paragraph>
<Paragraph position="7"> In order to utilize this information in a parser, we developed a numerical representation of this hierarchy  using a sequence of break indices between each word. A break index encodes the degree of prosodic decoupling between neighboring words. For example, an index of 0 corresponds to cliticization, and an index of 6 represents a sentence boundary. 1 We found that these break indices codld be labeled with very high consistency within and across labelers. We anticipate that the strongest boundaries (highest level of the hierarchy) will be both easiest to detect and most useful in parsing, and will refer to these boundaries (4-6) as major phrase boundaries.</Paragraph>
<Paragraph position="8"> The acoustic cues to prosodic breaks vary according to the different levels of the hierarchy. For example, there are phonological rules that apply across some boundaries of the hierarchy but not others (e.g., \[12, 18\]). Intonation cues mark intermediate and intonational phrase boundaries \[15, 3\]. Pauses and/or breaths may also mark major phrase boundaries. Our initial data indicate that duration lengthening is a fairly reliable cue to phrase boundaries. Prepausal lengthening is observed in English and many, but not all, other languages (see \[16\] for a summary). Lengthening without a pause has been observed in English in clause-final position (e.g., \[5\]) and in phrase-final position, though lengthening of phones at the ends of words is disputed in the literature (see \[8\]). The typical representation of syntactic structure is not identical to prosodic phrase structure. 2 There is some work suggesting methods for predicting rhythmic structure from syntactic structure, but not vice versa \[13, 6\]. These results are complicated by the complex relationship between intonation and rhythm and the influence of semantics on intonation. Although people disagree on the precise relationship between prosody and syntax, it is generally agreed that there is some relationship. We have shown, for example, that prosody is used by listeners to choose the appropriate meaning of otherwise ambiguous sentences with an average accuracy of 86% \[11\].</Paragraph>
<Paragraph position="9"> Although listener performance varied as a function of the type of syntactic ambiguities, reliability was high for left vs. right attachment and particle/preposition ambiguities, both difficult problems in parsing. An example illustrates how the break indices resolve syntactic and word sequence ambiguities for two phonetically identicM sentences: * Marge 0 would 1 never 2 deal 0 in 2 any 0 guys 6 * Marge 1 would 0 never 0 deal 3 in 0 any 0 guise 6 Note that the break index between &amp;quot;deal&amp;quot; and &amp;quot;in&amp;quot; provides an indication of how tightly coupled the two words are. For &amp;quot;in&amp;quot; as a particle, we expect tighter connection to the preceding verb whose meaning is modified than to the following phrase which is the object of that verb. For &amp;quot;in&amp;quot; as a preposition, we expect a tighter con1 We have changed our scale from our previously reported six levels to the present seven levels to achieve a more natural mapping between our levels and those described in the linguistics literature. 2 Steedman, however, \[14\] had made some interesting arguments concerning the appropriateness of categorial grammar for reflecting prosodic structure.</Paragraph>
<Paragraph position="10"> nection to the following object of the preposition than to the preceding verb.</Paragraph>
<Paragraph position="11"> Use of Phrase Breaks in Parsing With the goal of using prosodic phrase breaks to reduce syntactic ambiguity in a parser, we have developed an algorithm for automatically computing break indices, and we have modified the structure of the grammar to incorporate this information. The current effort is focused on demonstrating the feasibility of this approach; therefore the problem is restricted in scope. The techniques we have developed are extensible to more general cases; the positive results encourage us to relax some of these restrictions. In the next section we describe the basic approach, which is based on the following simplifications.</Paragraph>
<Paragraph position="12"> * We assume knowledge of the orthographic word transcription of a sentence and the sentence boundary. Word boundary ambiguities complicate the integration architecture and were not considered in this study, although this is an important issue to address in future work.</Paragraph>
<Paragraph position="13"> * Only relative duration is currently used as a cue for detecting the break indices, though we expect to improve performance in later versions of the algorithm by utilizing other acoustic cues such as intonation.</Paragraph>
<Paragraph position="14"> * Only preposition ambiguities were investigated.</Paragraph>
<Paragraph position="15"> The focus on preposition ambiguities was motivated by the following facts:  1. Prepositions are very frequent: 80-90% of the sentences in our radio news database, in the resource management sentences, and in the.</Paragraph>
<Paragraph position="16"> ATIS database contain at least one prepositional phrase.</Paragraph>
<Paragraph position="17"> 2. Sentences with prepositions are usually syntactically ambiguous.</Paragraph>
<Paragraph position="18"> 3. Our perceptual experiments suggest that  prosody could be used effectively in many sentences with preposition ambiguities. We believe that the techniques developed can be adapted to more general attachment ambiguities. null * The sentences examined were read by professional FM radio announcers, so the prosody is somewhat more exaggerated and probably easier to recognize than it would be with nonprofessional speakers.</Paragraph>
<Paragraph position="19">  Using a known word sequence as a tightly constrained grammar, a speech recognizer can be used to provide time Mignments for the phone sequence of a sentence.</Paragraph>
<Paragraph position="20"> We have used the speaker-independent SRI DECIPHER system \[17\], which uses phonologicM rules to generate bushy pronunciation networks that provide a more accurate phonetic transcription and alignment.</Paragraph>
<Paragraph position="21">  In earlier work \[11\], each phone duration was normalized according to speaker- and phone-dependent means and variances. Raw break features were generated by averaging the normalized duration over the final syllable coda of each word and adding a pause factor. Lexically stressed and non-stressed vowels were separated in the computation of means and variances. Finally, these features were normalized (relative to the observed phone durations in the current sentence) to obtain integer break indices with a range of 0 to 5. These indices had a high correlation with hand-labeled data (0.85) and were successfully used in a parser to reduce the number of syntactic parses by 25% \[2\]. However, the normalization algorithm required knowledge of the raw break features for the entire sentence, which has the disadvantages that the algorithm is non-causal and may not reflect sentence-internal changes in speaking rate. In addition, the algorithm used the full scale of break indices, so every sentence was constrained to have at least one 0 break index.</Paragraph>
<Paragraph position="22"> A new algorithm, using a hidden Markov model (HMM), was investigated for computing the break indices from the raw break features described above. The algorithm is not strictly causal (in the same sense that the HMM recognizer is not causal - decisions are not made until sometime after a word has been observed), but does not require any ad hoc scaling. We anticipate the time delay associated with HMM prosody decoding to be similar to delays associated with a speech recognizer. In a slight variation from previous work, the raw break indices were computed from the rhyme (vowel nucleus + coda) of the final syllable instead of the coda alone. This change did not have an effect on the correlation with hand labels. A second, more important difference is that the phone duration means are adapted according to a local speaking rate. Local speaking rate is given by the average normalized durations over the last M phones, excluding pauses, where M -- 50 was determined experimentally. The mean duration for each phone is adjusted with each new observed phone according to fia m ~a / ar/N where r is the speaking rate, N is a feedback coefficient that is equal to 5000 at steady state, but varies at start-up for faster initial adaptation, g is the standard deviation of the phone's duration, unadapted, and ~ua represents the mean duration for phone a.</Paragraph>
<Paragraph position="23"> A fully connected seven-state HMM is used to recognize break indices, given the raw break feature. Each HMM state corresponds to a break index (state number = break index) and the output distribution in each state describes the raw indices observed while in that state.</Paragraph>
<Paragraph position="24"> In this work, we investigated the use of Gaussian output distributions of the scalar break feature, but joint use of several features in multivariate output distributions will best utilize the power of the tIMM approach. Viterbi decoding was used to obtain the state sequence for an utterance, corresponding to the break index sequence.</Paragraph>
<Paragraph position="25"> The parameters of the break HMM were estimated in two different ways, involving either supervised or unsupervised training. By supervised training, we mean that the hand-labeled break indices are given, so the state sequence is fully observable and simple maximum likelihood estimation (as opposed to the Estimate-Maximize, or forward-backward, algorithm) is used. In unsupervised training, no hand-labeled data is used. Mean output distributions of the states are initialized to values on a scale that increases with the corresponding break index, and the transition probabilities were initialized to be essentially uniform. The forward-backward algorithm was then run, effectively clustering the states, to estimate the final output distribution paramaters. A surprising and very encouraging result was that the unsupervised HMM correlated as well with the hand-labeled data as did the HMM with supervised parameter estimates. null Integration With a Parser The question of how best to incorporate prosodic information into a grammar/parser is a vast area of research. The methodology used here is a novel approach, involving automatic modification of the grammar rules to incorporate the break indices as a new grammatical category. We modified an existing, and reasonably large grammar, the grammar used in SRI's spoken language system. The parser used is the Core Language Engine developed at SRI in Cambridge.</Paragraph>
<Paragraph position="26"> Several steps are involved in the grammar modification. The first step is to systematically change all of the rules of the form A ~ B C to the form A ~ B Link C, where Link is a new grammatical category, that of the prosodic break indices. Similarly all rules with more than two right hand side elements need to have Link nodes interleaved at every juncture, e.g., a rule A B C D is changed into A ~ B Link1 C Link2 D.</Paragraph>
<Paragraph position="27"> Next, allowance must be made for empty nodes, denoted e. It is common practice to have rules of the form NP --~ e and PP --+ e in order to handle wh-movement and relative clauses. These rules necessitate the incorporation into the modified grammar of a rule Link ~ e; otherwise, the sentence will not parse, because an empty node introduced by the grammar will either not be preceded by a link, or not followed by one.</Paragraph>
<Paragraph position="28"> The introduction of empty links needs to be constrained to avoid the introduction of spurious parses. If the only place the empty NP or PP could go is at the end of the sentence, then the only place the empty Link could go is right before it and no extra ambiguity is introduced. However, if an empty wh-phrase could be posited at a place somewhere other than the end of the sentence, then there is ambiguity as to whether it is preceded or followed by the empty link.</Paragraph>
<Paragraph position="29"> For instance, for the sentence, &amp;quot;What did you see on Saturday?&amp;quot; the parser would find both of the following  Hence the grammar must be made to automatically rule out half of these possibilities. This can be done by constraining every empty link to be followed immediately by an empty wh-phrase, or a constituent containing an empty wh-phrase on its left branch. It is fairly straight-forward to incorporate this into the routine that automatically modifies the grammar. The rule that introduces empty links gives them a feature-value pair: empty-link = y. The rules that introduce other empty constituents are modified to add to the constituent the feature-value pair: trace-on-left-branch = y. The links 0 through 6 are given the feature-value pair empty-link = n. The default value for trace-on-left-branch is set to n so that all words in the lexicon have that value. Rules of the form Ao ~ At Link1 ... An are modified to insure that A0 and A1 have the same value for the feature trace-on-left-branch. Additionally, if Linkl has empty-link = y then Ai+l must have trace-on-left-branch = y. These modifications, incorporated into the grammar modifying routine, suffice to eliminate the spurious ambiguity.</Paragraph>
<Paragraph position="30"> Additional changes to the grammar were necessary to actually make use of the prosodic break indices. In this initial endeavor, a very conservative change was made after examining the break indices on a set of sentences with preposition ambiguities. The rule N ~ N Link PP was changed to require the value of the link to be between 0 and 2 inclusive for the rule to apply. A similar change was made to the rule VP ~ V Link PP, except that the link was required to have the value of either 0 or 1.</Paragraph>
<Section position="1" start_page="25" end_page="25" type="sub_section">
<SectionTitle>
Experimental Results
</SectionTitle>
<Paragraph position="0"> We have achieved encouraging results both in detection of break indices and in their use in parsing. The automatic detection algorithm yields break labels having a high correlation with hand-labeled data for the various algorithms described. In addition, when we chose a subset (14) of these sentences exhibiting prepositional phrase attachment ambiguities or preposition/particle ambiguities, we found that the incorporation of the prosodic information in the Sl:tI grammar resulted in a reduction of about 25% in the number of parses, without ruling out any correct parses. For sentences to which the prosodic constraints on the rules actually applied, the decrease in number of parses was about 50%. In many cases the use of prosodic information allowed the parser to correctly identify a unique parse. Below we describe the results in more detail.</Paragraph>
<Paragraph position="1"> Corpus The first corpus we examined consisted of a collection of phonetically ambiguous, structurally different pairs of sentences. The sentence pairs were read by three female professional radio announcers in disambiguating contexts. In order to discourage unnatural exaggerations  ing different methods of training. SD,SI = speaker(in)dependent; super. = supervised training with hand-labeled data; unsup. = unsupervised training.</Paragraph>
<Paragraph position="2"> of any differences between the sentences, the materials were recorded in different sessions with several days in between. In each session only one sentence of each pair occurred. Seven types of structural ambiguity were investigated: parentheticals, apposition, main-main versus main-subordinate clauses, tags, near versus far attachment, left versus right attachment, and particles versus prepositions. Each type of ambiguity was represented by five pairs of sentences.</Paragraph>
</Section>
<Section position="2" start_page="25" end_page="29" type="sub_section">
<SectionTitle>
Detection Algorithm
</SectionTitle>
<Paragraph position="0"> In finding break indices for the ambiguous sentence pairs, the seventy sentences were concatenated together as though the speaker read them as a paragraph. Concatenation allowed the algorithm to avoid initialization for every sentence, but since the speaking rate is then tracked across several sentences that were not actually read in connection, there was probably some error associated with estimating the speaking rate factor. The HMM was used to generate break indices, and the results were evaluated according to how highly correlated the automatically generated labels were with the hand-labeled data. The correlation reported here is the average of the sample correlation for each sentence. The experiments yielded good accuracy on the detected break labels, but also some important results on unsupervised training and speaker-independence.</Paragraph>
<Paragraph position="1"> In comparing the supervised and unsupervised parameter estimation approaches for the ttMM, we found that both yielded break indices with similar correlation to the hand labeled indices (Table 1). In addition, the indices obtained using the two training approaches were very highly correlated with each other (&gt; 0.92). This is a very important result, because it suggests that we may be able to automatically estimate models without requiring hand-labeled data. Results for speaker-dependent training on two speakers are summarized in Table 1.</Paragraph>
<Paragraph position="2"> For the moment, we are mainly interested in detecting major phrase breaks (4-6) and not the confusions between these levels, since the parser uses major breaks as constraints on grammar rules. Using supervised parameter estimation, the false rejection/false acceptance rates are 14%/3% for speaker F1A and 21%/6% for speaker F2B. The unsupervised parameter estimation algorithm has a bias towards more false rejections and  fewer false acceptances. The most important confusions were between minor phrase breaks (2,3) and intonational phrases (4). Since a boundary tone is an important cue to an intonational phrase, we expect performance to improve significantly when intonation is included as a feature. null In the experiments comparing supervised to unsupervised training, speaker-dependent phone means and variances were estimated from the same data used to train the HMM as well as to evaluate the correlation, because of the limited amount of speaker-dependent data available. Though the speaker-dependent experiments were optimistic in that they involved testing on the training data, the results are meaningful in the sense that other speaker-independent experiments showed the parameters were robust with respect to a change in speakers. Using unsupervised training with two speakers to estimate both HMM parameters and duration means and variances for normalization for a different speaker, the correlation of the resulting automatically detected break indices with the hand-labeled indices was close to the speaker-dependent case (Table 1). Also, the speaker-dependent predictions and speaker-independent predictions were highly correlated with each other (0.96). We conclude that, at least for these radio news announcers, the algorithm seems to be somewhat robust with respect to different speakers. Of course, the news announcers had similar reading styles, and the hand-labeled data for two speakers had a correlation of 0.94.</Paragraph>
<Paragraph position="3"> Overall, the HMM provided improvement over the previously reported algorithm, with a correlation of 0.90 compared to 0.86 for six levels. On the other hand, there was a small reduction in the correlation when using seven levels of breaks (0.87) compared to six levels (0.90).</Paragraph>
<Paragraph position="4"> Use in Parsing A subset of 14 sentences with preposition ambiguities was chosen for evaluating the integration of the break indices in the parser. We evaluated the results by comparing the number of parses obtained with and without the prosodic constraints on the grammar rules, and noted the differences in parse times. On average, the incorporation of prosody resulted in a reduction of about 25% in the number of parses found, with an average increase in parse times of 37%. The fact that parse times increase is due to the way in which prosodic information is incorporated. The parser does a certain amount of work for each word, and the effect of adding break indices to the sentence is essentially to double the number of words that the parser must process. It may be possible to optimize the parser to significantly reduce this overhead.</Paragraph>
<Paragraph position="5"> The sentences were divided into those to which the additional constraints would apply (type 'a') and those about which the constraints had nothing to say (type 'b'). Essentially the constraints block attachment if there is too large a break index between a noun and a following prepositional phrase or between a verb and</Paragraph>
</Section>
<Section position="3" start_page="29" end_page="29" type="sub_section">
<SectionTitle>
Sentence Humans
</SectionTitle>
<Paragraph position="0"> straints applied. Parse times are in seconds a following particle. Thus the 'a' sentences had more major prosodic breaks at the sites in question than did the 'b' sentences.</Paragraph>
<Paragraph position="1"> The results, shown in Tables 2 and 3, indicate that for the 'a' sentences the number of parses was reduced, in many cases to a unique parse. The 'b' sentences, as expected, showed no change in the number of parses. No correct parses were eliminated through the incorporation of prosodic information.</Paragraph>
<Paragraph position="2"> This corpus was also used in perceptual experiments to determine which types of syntactic structures humans could disambiguate using prosody. It is interesting to note that in many cases, sentences which were automatically disambiguated using the added constraints were also reliably disambiguated by humans. The fact that the perceptual results and parsing results are not more correlated than they are may be due to the fact that humans use other prosodic cues such as prominence, in addition to duration, for disambiguation.</Paragraph>
<Paragraph position="3">  We are encouraged by these initial results and believe that we have found a promising and novel approach for  straints did not apply. Parse times are in seconds.  incorporating prosodic information into a natural lan- \[7\] guage processing system. The break index representation of prosodic phrase levels is a useful formalism which can be fairly reliably detected and can be incorporated into a parser to rule out prosodically inconsistent syntactic hypotheses. \[8\] The results reported here represent only a small study of integrating prosody and parsing, and there are many directions in which we hope to extend the work. In de- \[9\] tection, integrating duration and intonation cues offers the potential for a significant decrease in the false rejection rate of major phrase boundaries, and previous work by Butzberger on boundary tone detection \[4\] pro- \[10\] vides a mechanism for incorporating intonation. As for integration with the parser, investigation of other types of structural ambiguity should lead to similar improvements in the reduction of the number of parses. Finally, \[11\] we hope to verify and extend these results by considering a larger database of speech and as well as the prosody of nonprofessional speakers. We are already evaluating the techniques on the ATIS database. \[12\]</Paragraph>
</Section>
</Section>
</Paper>

