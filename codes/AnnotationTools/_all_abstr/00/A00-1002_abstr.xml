<?xml version="1.0" standalone="yes"?>

<Paper uid="A00-1002">
<Title>Machine Translation of Very Close Languages</Title>
<Section position="1" start_page="0" end_page="0" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> Using examples of the transfer-based MT system between Czech and Russian RUSLAN and the word-for-word MT system with morphological disambiguation between Czech  and Slovak (~ESILKO we argue that for really close languages it is possible to obtain better translation quality by means of simpler methods. The problem of translation to a group of typologically similar languages using a pivot language is also discussed here.</Paragraph>
<Paragraph position="1"> demonstrate that this assumption holds only for really very closely related languages.</Paragraph>
<Paragraph position="2"> 1. Czech-to-Russian MT system RUSLAN 1.1 History</Paragraph>
<Section position="1" start_page="0" end_page="0" type="sub_section">
<SectionTitle>
Introduction
</SectionTitle>
<Paragraph position="0"> Although the field of machine translation has a very long history, the number of really successful systems is not very impressive. Most of the funds invested into the development of various MT systems have been wasted and have not stimulated a development of techniques which would allow to translate at least technical texts from a certain limited domain. There were, of course, exceptions, which demonstrated that under certain conditions it is possible to develop a system which will save money and efforts invested into human translation. The main reason why the field of MT has not met the expectations of sci-fi literature, but also the expectations of scientific community, is the complexity of the task itself. A successful automatic translation system requires an application of techniques from several areas of computational linguistics (morphology, syntax, semantics, discourse analysis etc.) as a necessary, but not a sufficient condition. The general opinion is that it is easier to create an MT system for a pair of related languages. In our contribution we would like to The first attempt to verify the hypothesis that related languages are easier to translate started in mid 80s at Charles University in Prague. The project was called RUSLAN and aimed at the translation of documentation in the domain of operating systems for mainframe computers. It was developed in cooperation with the Research Institute of Mathematical Machines in Prague. At that time in former COMECON countries it was obligatory to translate any kind of documentation to such systems into Russian. The work on the Czech-to-Russian MT system RUSLAN (cf. Oliva (1989)) started in 1985. It was terminated in 1990 (with COMECON gone) for the lack of funding.</Paragraph>
<Paragraph position="1"> System description The system was rule-based, implemented in Colmerauer's Q-systems. It contained a fullfledged morphological and syntactic analysis of Czech, a transfer and a syntactic and morphological generation of Russian. There was almost no transfer at the beginning of the project due to the assumption that both languages are similar to the extent that does not require any transfer phase at all. This assumption turned to be wrong and several phenomena were covered by the transfer in the later stage of the project (for example the translation of the Czech verb &amp;quot;b~&amp;quot; [to be] into one of the three possible Russian equivalents: empty form, the form &amp;quot;byt6&amp;quot; in future fitense and the verb &amp;quot;javljat6sja&amp;quot;; or the translation of verbal negation). At the time when the work was terminated in 1990, the system had a main translation dictionary of about 8000 words, accompanied by so called transducing dictionary covering another 2000 words. The transducing dictionary was based on the original idea described in Kirschner (1987). It aimed at the exploitation o f the fact that technical terms are based (in a majority o f European languages) on Greek or Latin stems, adopted according to the particular derivational rules o f the given languages. This fact allows for the &amp;quot;translation&amp;quot; o f technical terms by means of a direct transcription of productive endings and a slight (regular) adjustment o f the spelling of the stem. For example, the English words localization and discrimination can be transcribed into Czech as &amp;quot;lokalizace&amp;quot; and &amp;quot;diskriminace&amp;quot; with a productive ending -ation being transcribed to -ace. It was generally assumed that for the pair Czech/Russian the transducing dictionary would be able to profit from a substantially greater number o f productive rules. This hypothesis proved to be wrong, too (see B6mov~, Kubofi (1990)). The set o f productive endings for both pairs (English/Czech, as developed for an earlier MT system from English to Czech, and Czech/Russian) was very similar. The evaluation o f results o f RUSLAN showed that roughly 40% o f input sentences were translated correctly, about 40% with minor errors correctable by a human post-editor and about 20% of the input required substantial editing or re-translation. There were two main factors that caused a deterioration of the translation. The first factor was the incompleteness o f the main dictionary of the system. Even though the system contained a set of so-called fail-soft rules, whose task was to handle such situations, an unknown word typically caused a failure o f the module o f syntactic analysis, because the dictionary entries contained - besides the translation equivalents and morphological information - very important syntactic information. The second factor was the module of syntactic analysis o f Czech.</Paragraph>
<Paragraph position="2"> There were several reasons of parsing failures. Apart from the common inability of most rule-based formal grammars to cover a particular natural language to the finest detail o f its syntax there were other problems. One o f them was the existence of non-projective constructions, which are quite common in Czech even in relatively short sentences. Even though they account only for 1.7/'o of syntactic dependencies, every third Czech sentence contains at least one, and in a news corpus, we discovered as much as 15 non-projective dependencies; see also Haji6 et al. (1998). An example o f a non-projective construction is &amp;quot;Soubor se nepodafilo otev~it.&amp;quot; [lit.: File Refl. was_not._possible to_open. - It was not possible to open the file]. The formalism used for the implementation (Q-systems) was not meant to handle non-projective constructions. Another source of trouble was the use o f so-called semantic features. These features were based on lexical semantics o f individual words. Their main task was to support a semantically plausible analysis and to block the implausible ones. It turned out that the question o f implausible combinations o f semantic features is also more complex than it was supposed to be. The practical outcome o f the use o f semantic features was a higher ratio of parsing failures - semantic features often blocked a plausible analysis. For example, human lexicographers assigned the verb 'to run' a semantic feature stating that only a noun with semantic features o f a human or other living being may be assigned the role o f subject of this verb. The input text was however full o f sentences with 'programs' or 'systems' running etc. It was o f course very easy to correct the semantic feature in the dictionary, but the problem was that there were far too many corrections required. On the other hand, the fact that both languages allow a high degree o f word-order freedom accounted for a certain simplification o f the translation process. The grammar relied on the fact that there are only minor word-order differences between Czech and Russian. 1.3 Lessons learned from RUSLAN We have learned several lessons regarding the MT o f closely related languages: The transfer-based approach provides a similar quality o f translation both for closely related and typologically different languages Two main bottlenecks o f full-fledged transfer-based systems are: fi- complexity o f the syntactic dictionary - relative unreliability o f the syntactic analysis of the source language Even a relatively simple component (transducing dictionary) was equally complex for English-to-Czech and  Czech-to-Russian translation Limited text domains do not exist in real life, it is necessary to work with a high coverage dictionary at least for the source language.</Paragraph>
<Paragraph position="3"> 2. Translation and localization 2.1 A pivot language  Localization o f products and their documentation is a great problem for any company, which wants to strengthen its position on foreign language market, especially for companies producing various kinds o f software. The amounts o f texts being localized are huge and the localization costs are huge as well. It is quite clear that the localization from one source language to several target languages, which are typologically similar, but different from the source language, is a waste of money and effort. It is o f course much easier to translate texts from Czech to Polish or from Russian to Bulgarian than from English or German to any o f these languages. There are several reasons, why localization and translation is not being performed through some pivot language, representing a certain group o f closely related languages. Apart from political reasons the translation through a pivot language has several drawbacks. The most important one is the problem o f the loss o f translation quality. Each translation may to a certain extent shift the meaning o f the translated text and thus each subsequent translation provides results more and more different from the original. The second most important reason is the lack of translators from the pivot to the target language, while this is usually no problem for the translation from the source directly to the target language.</Paragraph>
<Paragraph position="4"> MAHT (Machine-aided human translation) systems. We have chosen the TRADOS Translator's Workbench as a representative system o f a class o f these products, which can be characterized as an example-based translation tools.</Paragraph>
<Paragraph position="5"> IBM's Translation Manager and other products also belong to this class. Such systems uses so-called translation memory, which contains pairs o f previously translated sentences from a source to a target language. When a human translator starts translating a new sentence, the system tries to match the source with sentences already stored in the translation memory. If it is successful, it suggests the translation and the human translator decides whether to use it, to modify it or to reject it. The segmentation o f a translation memory is a key feature for our system. The translation memory may be exported into a text file and thus allows easy manipulation with its content. Let us suppose that we have at our disposal two translation memories - one human made for the source/pivot language pair and the other created by an MT system for the pivot/target language pair. The substitution o f segments o f a pivot language by the segments of a target language is then only a routine procedure. The human translator translating from the source language to the target language then gets a translation memory for the required pair (source/target). The system o f penalties applied in TRADOS Translator's Workbench (or a similar system) guarantees that if there is already a human-made translation present, then it gets higher priority than the translation obtained as a result o f the automatic MT. This system solves both problems mentioned above the human translators from the pivot to the target language are not needed at all and the machinemade translation memory serves only as a resource supporting the direct human translation from the source to the target language.</Paragraph>
<Paragraph position="6">  3. M a c h i n e  In the group o f Slavic languages, there are more closely related languages than Czech and Russian. Apart from the pair o f Serbian and Croatian languages, which are almost identical and were Translation memory is the key The main goal of this paper is to suggest how to overcome these obstacles by means o f a combination of an MT system with commercial ficonsidered one language just a few years ago, the most closely related languages in this group are Czech and Slovak. This fact has led us to an experiment with automatic translation between Czech and Slovak. It was clear that application of a similar method to that one used in the system RUSLAN would lead to similar results. Due to the closeness of both languages we have decided to apply a simpler method. Our new system, (~ESILKO, aims at a maximal exploitation of the similarity of both languages. The system uses the method of direct word-for-word translation, justified by the similarity of syntactic constructions of both languages. Although the system is currently being tested on texts from the domain of documentation to corporate information systems, it is not limited to any specific domain. Its primary task is, however, to provide support for translation and localization of various technical texts. 3.1 System ( ~ E S i L K O and its governing noun. An alternative way to the solution of this problem was the application of a stochastically based morphological disambiguator (morphological tagger) for Czech whose success rate is close to 92/'0. Our system therefore consists of the following modules: 1. Import of the input from so-called 'empty' translation memory 2. Morphological analysis of Czech 3.</Paragraph>
<Paragraph position="7"> Morphological disambiguation 4. Domain-related bilingual glossaries (incl.</Paragraph>
<Paragraph position="8"> single- and multiword terminology) 5. General bilingual dictionary 6.</Paragraph>
<Paragraph position="9"> Morphological synthesis of Slovak 7. Export of the output to the original translation memory Letus now look in a more detail at the individual modules of the system: ad 1. The input text is extracted out of a translation memory previously exported into an ASCII file. The exported translation memory (of TRADOS) has a SGML-Iike notation with a relatively simple structure (cf. the following example): Example 1. - A sample of the exported translation memory</Paragraph>
</Section>
</Section>
</Paper>

