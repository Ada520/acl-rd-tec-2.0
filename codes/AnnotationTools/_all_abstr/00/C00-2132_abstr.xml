<?xml version="1.0" standalone="yes"?>

<Paper uid="C00-2132">
<Title>nformation</Title>
<Section position="2" start_page="0" end_page="915" type="abstr">
<SectionTitle>
2 Ol)timizing Algorithm Using De-
</SectionTitle>
<Paragraph position="0"> pendency Infornmtion We use a. nornml CFG lmrsing sysi;('m with one' (;xl;(;nsion that for (m.t'h ru\]c ( here, must he. o11c righl;h;md sid(' (or \]{ITS) t('rm I mark(,d as a h(,ad, and th('. informati(m (if a head term is trmlsJhrr('.(l Lo l;hc. lc.ft-hmM side (or HIS) tenn. In this lmtmr, a CIeG rule is (hmol;ed as follows:</Paragraph>
<Paragraph position="2"> In tim above, notation, X is dm left-lmnd side (or LHS) term, mM I5- are right-hand side (or llH$) terms, mM a RHS term followed by an asterisk '*' is a head term. The l;ypical usage of the head is that the LHS t(;nn shares many features of the head term in the RHS. For instmme, a matching word of the the LHS tcnn becomes the same as the one of the head term in the RHS.</Paragraph>
<Paragraph position="3"> For each rule, an arc is constructed over a word segment in a.n input sentence. An aa'c is d('alot(,d using terms of its base rule as follows: Ix-~ ~q ... E-. ~1+,* ... 5,\]  The LHS term of an arc nmans the LHS term of the base rule of the arc, and RHS terms of an arc means RHS terms of the base rule of the arc. In the above notation, a single dot indicates thai; RHS terms located to the left of a dot are inactive, that is, they already match the LHS term of some other arcs. Three dots are used to ret)resent zero or any number of terms. An arc whose RHS terms are all inactive is called an inactive arc, otherwise it is called an active arc. An arc covers a segment of input words; the start point of an arc is the index of the first word in the covering segment, and the end point of an arc is 1 plus the index of the last word in the covering segment.</Paragraph>
<Paragraph position="4"> Basically, a standard CFG parsing algorithm such as \[3, 6\] consists of the following three operations. Initialization: For each word, arcs are generated froln rules such that the leftmost RHS term matches it.</Paragraph>
<Paragraph position="5"> Operation A: For each inactive arc A, an arc is generated fl'om A and a rule R such that the leftmost RHS term of R ,natchcs the LHS term of A.</Paragraph>
<Paragraph position="6"> Operation B: For each inactive arc A, an arc is generated from A and another active arc B such that the leftinost active RHS term of B matches the LHS term of A and the end t)oint of B is the stone as tile start point of A.</Paragraph>
<Paragraph position="7"> We assume that some dependency information 1)etween words are given, and such det)endency information is denoted as follows: w.~w, The first of the above examples represents that a word I/V u modifies another word I~(~, attd W~, precedes 14~j, while the second one represents that a word Rq, modifies another word H~j and W,, precedes 1/1~/.</Paragraph>
<Paragraph position="8"> Given this kind of dependency information, the following conditions are imposed on Operation A and Operation B.</Paragraph>
<Paragraph position="9"> Conditions for Operation A: Condition A1 (when the leftmost RHS term of a rule is a head term): Given an inactive arc Arc1 denoted by \[A ~ ...\] and a rule which has two or more RHS terms and the leftmost RHS term is a head denoted by {X -+ A * B ...}, Operation A is executed only if there is dependency information 144, lYb where 1,14~ is a word matching the LHS term A of Arci and lVb is a word located anywhere to the right of the end  ure, a thick arc ret)resents an inactive arc, a line represents a matching to be tried in this ot)eration, a dotted line represents a matching betweeu a term in an arc and a word, and a dotted arrow represents dependency infbrmation. In this case, this type of rule implies that a word matching the LHS term of the arc to be matched with the leftmost term of the rule must be modified by any word which is located after the end t)oint of the arc, since the head term is the left;most term of the rule. Therefore, if the A1 condition does not hold, Operation A is not required to be executed.</Paragraph>
<Paragraph position="10"> Condition A2 (when the leftmost RHS term of a rule is not a head term): Given an inactive arc Arc1 denoted by \[A --+ ...\] and a rule which has two or more RHS terins and the leftmost I{HS term is not a head denoted by {X --+ A ... D* ...}, Operation A is executed only if there is a dependency information 14~ ~ 1Y=~ where 1/1~ is a word Inatching the LHS term A of Arc1 and Wv is a word located anywhere after the end point of Arc1.</Paragraph>
<Paragraph position="11"> Figure 2 shows the above condition. In this case, this type of rule ilnplies that a word matching tile LHS term of the arc to be matched with the left-most term of the rule Inust inodify any word which is located after the end point of the arc, since the head terin is not tile leftmost term of the rule. Conditions for Operation B: Condition B1 (when the leftmost active RHS term of an active arc is the head term): Given an active arc Area denoted by \[X --+ Ao ... A~ . B....\] and aninactive arc Arc1 denoted by \[B -+ ...\]  such that the end point of Area is the santo as the start point of Arc r, Ol)eration B is executed only if, for each l,lz,~ (0 &lt; i &lt; n) which is a word matching the RItS term A~ of AreA, there is dependency information I'Vai =&gt; I'Vb, where Wi, is a word matching the LHS term B of Arc,.</Paragraph>
<Paragraph position="13"> Figure 3 shows the above condition. Ill this figure, ~ dotted thick arc represellts an active m:c. hi this case, this type of active arc implies that words matching inactive terms before' the head term of the active art: must modify a. word matdfing tile LHS term of the inactive arc.</Paragraph>
<Paragraph position="14"> Condition B2 (when the head term is on the left side of the leftinost active RHS term of an active arc): Given an active mc AreA denoted by \[X ~ ... A* ... B ...\] and all inactive arc Arc1 denoted by \[B --+ ...\] such that the end point of Area is the same as the start point of Arc1, Operation B is executed only if there is det)endency information W,, ~ Wb where 144~ is a word matching the RHS term A of AreA, and Wv is a word matching the LItS terln B of Arc1.</Paragraph>
<Paragraph position="15">  this type of active arc implies that a word lnatching the LIIS term of the inactive arc nmst modi~ a word matching the head tcrin of the active arc. Condition B3 (when the head term is on the right side of the leftlnost active RItS term of an active arc): Given an actiw; arc Area denoted by \[X ~ A. B ... C* ...\] and an inactive arc Arc1 denoted by \[/3 -+ ...\] such that the end point of Area is the same as the start point of Arc,, Operation B is executed only if there is dependency infof  nmtion Wb ~ 14~ where Wf, is a word matching the. LItS term B of Arcl, and l'14: is a word on the right side of the, end point of Arci.</Paragraph>
<Paragraph position="16"> Wb ,. I,&amp;quot; Wc  Figure 5 shows the above condition. In this case, this type of active arc implies that a word matching the. LHS term of tile inactive arc must modify a word after the end point of tile inactive arc. The dependency information is not necessarily given to all words. If there is any source word except for the root word of a sentence such that there  is no del)endency information originating fl:om it: then a set of such del)endeney inibrmation is called partial, otherwise, it is called total. If the given de1)endency informatioll is partial, the A\] condition can not be used, since, even if there is no det)endency information targeting I.V,,, we eanllot know if such del)endency information does not really (,xist, or if such delmndency inlbrmation is llot Sul)plied. For other conditions, we check them only when all source words for dependency checking have dependency information. On the other hand, if the given dependency information ix total, all conditions are checked.</Paragraph>
</Section>
</Paper>

