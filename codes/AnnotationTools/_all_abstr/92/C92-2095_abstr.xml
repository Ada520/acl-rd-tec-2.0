<?xml version="1.0" standalone="yes"?>

<Paper uid="C92-2095">
<Title>Isolating Cross-linguistic Parsing Complexity with a Principles-and-Parameters Parser: A Case Study of Japanese and English *</Title>
<Section position="1" start_page="0" end_page="0" type="abstr">
<SectionTitle>
1 Introduction
</SectionTitle>
<Paragraph position="0"> As parsing models and linguistic theories have broad ened to encorapass a wider range of non-English languages, a particularly uscfifl &amp;quot;stress test&amp;quot; is to buikl a single theory/parser pair that can work for multiple languages, in the best case with minor variation, perhaps restricted to the lexicon. This paper reports on the resuits of just such a test applied to a fully operational (Prolog) implementation of a so-called principles-and-parameters model of syntax, for the case of Japanese and English. This paper has two basic aims: (1) to show how an implemented model tbr an entire principles-and-parameters model (essentially all of the linguistic theory in Lasnik &amp; Uriagereka (1988)), see figure 2 for a computer snapshot, leads directly to both a parser for nmltiple languages and a useful &amp;quot;computational linguistics workbench&amp;quot; in which one can easily experiment with alternative linguistic theoretical tormulations of grammarital principles as well as alternative computational strategies; (2) to use this system to uncover sources of parsing complexity in Japanese as opposed to English. In particular, we examine the &amp;quot;null hypothesis&amp;quot; that a single parsing design suffices for efficient processing of both/lead-first and Ilead-final languages, in contrast to approaches that posit, e.g., a right-corner or other mirror-image strategy for parsing Japanese as compared to English (e.g., BUP; Mazuka (1990)). In this case we can confirm computationally and precisely, in accordance with nmch current psychollnguisitic work (l'~razier and Raynert (1988); lnoue and J.1). Fodor (1991); Nagai (1991)) that it is not the lien&amp;final character of Japanese that results in processing difficulty so mudl as the possibility of scrambling and free deletion of NPs (so-called &amp;quot;super Pro Drol)&amp;quot; ). We do this by empirically investigating the effects of 3 t)ossible &amp;quot;optimizations&amp;quot; of the parsing system for Japanese: (1) the use of right-context information via automatic source transformations, using a l,rogramming language compiler technique to introduce dummy nonterminals and corresponding semantic actions; (2) modification of the Japanese grammar to put the specitier of CP *Tiffs research ltas been supported by NSF (~raltt DCR85552543 under a Presidential Young fnvestiglttor Award to Professor Robert C. Berwiek, and a grant front the Kapor Family Foundation. We would like to thank linward Lasnik, Alec Marantz, Shigeru Miyagawa, David Pesetsky, and Mamoro Saito for valuable discussions and valiant attempts to tell us about Japanese.</Paragraph>
<Paragraph position="1"> (= S) on tile right and so eliminate unnecessary centerembedding; and (3) eliminating of scrambling and NP drop to isolate tile separate effects of llead-final (e.g., Verb-final) l)hrase structure in Japanese.</Paragraph>
<Paragraph position="2"> By explicit construction, the implementation demom stratcs that it is possible to build an efficient principleand-parameters parser lbr multiple languages, using 25 principles titat are expressed in a language quite close in form to that of the original linguistic theory. '\].'he English-Japanese dilt~rences handled include the basic Suhjeet-Objcct-.Verb (SOV) order of Japanese; free &amp;quot;scrambling&amp;quot; of Japancsc noun phrases; topic-comment structurc; ,mnappearauee of noun phrases that are discourse recoverable; and lack of wh-word movemcnt in Japanese questions. No rule reprogrammingis required to accommodate these differences, but changes to only 4 binary switches and a ininimally distinct lexicon with different thematic grids in some cases. The parser couples several already-known parsing design strategies to ol)tain efficient parsing times, e.g., type-checking; nmltitdc~entry canonical LR(1) parsing; and automatic (source-to-source) grammar transformations. 1</Paragraph>
</Section>
</Paper>

