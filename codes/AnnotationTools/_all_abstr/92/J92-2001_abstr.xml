<?xml version="1.0" standalone="yes"?>

<Paper uid="J92-2001">
<Title>Inheritance in Word Grammar</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> Since the scientific study of language first began, a central concern of linguists has been the identification of linguistic generalizations and, where necessary, the stating of exceptions to these generalizations. 1 However, it is only within the last few years that linguists have begun to think of this process in terms of the construction of default inheritance hierarchies. This new way of envisaging old problems is attractive for at least three reasons. Firstly, it encourages linguists to be explicit not just about the relations that hold between individuals and classes, but also about the relations that hold between different classes. For example, where the nouns of a language have traditionally been assigned to some number of distinct morphological paradigms, the default inheritance approach encourages the morphologist to pay attention to generalizations that cut across paradigms. If these generalizations are inherited, then there must be some shared super class to inherit from, and the system of word classes and paradigms must be designed accordingly.</Paragraph>
<Paragraph position="1"> Secondly, whereas generalizations have traditionally been class-based, in the inheritance approach they are based on typical cases and their features, any of which may be overridden. Thus the shading from core members of a class to peripheral members can be accommodated---indeed, the existence of peripheral members is predicted by the mechanism for overriding defaults. The third and more pragmatic reason why it is useful to recast well-known linguistic problems in terms of default inheritance is that there is a fairly well-developed--though by no means conclusive--body of knowledge on the subject in the artificial intelligence field of knowledge representation (e.g. Etherington and Reiter 1983; Brachman 1985; Touretzky 1986; Etherington 1988). Nearer the computer science mainstream, work in object-oriented programming languages (Cook 1989) offers an interesting range of relevant insights and inheritance-based tools.</Paragraph>
<Paragraph position="2">  with participants at the Workshop on Inheritance in Natural Language Processing, Tilburg, August 1990.</Paragraph>
<Paragraph position="3"> (~) 1992 Association for Computational Linguistics Computational Linguistics Volume 18, Number 2 In recent years, linguists and computational linguists in particular have begun to explore problems at most linguistic levels within inheritance frameworks. For example, Gibbon and Reinhard have proposed inheritance-based solutions to problems of phonology and prosody (Gibbon 1990; Reinhard and Gibbon 1991). Most work to date has centered on morphology (e.g. De Smedt 1984; Flickinger, Pollard, and Wasow 1985; Daelemans 1987; Calder 1989). A certain amount has also been achieved in syntax (e.g. De Smedt 1984; Flickinger 1987), where inheritance is used to construct subcategorization frames for words. As for semantics, there has been a great deal of work on inheritance in so-called 'semantic networks,' but much of this work relates only loosely to the semantics of natural language. The work we present in this paper differs from all previous work in natural language processing (NLP) in at least two respects. Firstly, it is distinctive in the extent to which inheritance is used. Within our framework knowledge at all levels (morplhology, syntax, semantics, world knowledge) is integrated in a single inheritance hierarchy. Indeed, given the extent of integration, some of these level distinctions must be regarded as arbitrary. Secondly, it is distinctive in the purposes for which inheritance is used. The canonical application of inheritance in NLP is lexicon construction. Our system uses inheritance for this purpose but it also makes inheritance play a vital role in the building of structure during parsing.</Paragraph>
<Paragraph position="4"> What we describe is part of a theory of language (knowledge and processing) called Word Grammar (WG) (Hudson 1984; 1990). Section 2 introduces the knowledge representation language used in WG. Section 3 outlines the use of inheritance in WG to describe the facts of syntax and semantics. Concluding observations are drawn in Section 4. An Appendix sets out a fragment of English grammar and a simple sentence analysis.</Paragraph>
</Section>
</Paper>

