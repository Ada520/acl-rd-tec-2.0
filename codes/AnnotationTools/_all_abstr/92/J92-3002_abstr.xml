<?xml version="1.0" standalone="yes"?>

<Paper uid="J92-3002">
<Title>Hewlett-Packard Laboratories John Nerbonne t Deutsches Forschungszentrum ffir Kfinstliche Intelligenz</Title>
<Section position="2" start_page="0" end_page="270" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> The lexicon is a large and complex set of information about the words used in a grammar or natural language processing system. Its importance has become more central in the research of the past decade, which has seen the rise of radically lexicalized theories such as head-driven phrase structure grammar (HPSG), in which phrase structure rules play a vestigial role. Newer theories place increasingly high demands on lexical representation. A simple calculation may illustrate the quandary of lexical representation: feature systems for contemporary systems normally distinguish at least 30 features (while 40 or 50 is not rare). The number of values a feature takes ranges from 2 to the number of categories (more exactly, to the number of sequences or sets of a small size, where all the members of the sequence, etc. are categories). Under the undoubtedly optimistic assumption that feature value ranges could be reduced to booleans, we still are faced with 230 -=- 109 feature combinations--whose individual  representation is clearly to be avoided, not &amp;quot;solved. ''1 The natural tack is certainly to represent just the categories actually used in the vocabulary, but this could incur a good deal of redundancy if it meant that each feature combination were represented separately on each word.</Paragraph>
<Paragraph position="1"> The structured or hierarchical lexicon solves this difficulty (cf. Flickinger, Pollard, and Wasow 1985 and Flickinger 1987). In structured lexicons, word classes may stand in a relationship of inheritance to one another, in which case the properties of the bequeathing class accrue automatically to the inheriting class. Once we allow that a single class may be heir to more than one bequeathing class, we allow, in principle, that no word class property ever need be examined more than once. Thus we eliminate one central source of redundancy in lexical specification. One of the goals of this paper is to motivate the use of inheritance in lexical specification. To do this, we take a narrowly circumscribed phenomenon in English grammar--that of vp-complementtaking adjectives, as in hard + to deliver--and spell out the lexical specifications a thorough treatment demands. The sheer complexity of these specifications cries out for a redundancy-eliminating approach, and we propose a structured lexicon treatment.</Paragraph>
<Paragraph position="2"> The grammatical analysis not only serves to motivate the general approach, it also illustrates several key issues in the design of structured lexicons, such as the use of default inheritance, the need for lexical rules, and the range of phenomena amenable to this sort of treatment.</Paragraph>
<Paragraph position="3"> The goals of this paper are to introduce the structured lexicon in a fairly simple form, to motivate its basic theoretical device, that of inheritance, with a real example taken from an existing system, and finally to show how the elimination of redundancy achieved with the structured lexicon aids in maintaining the lexicon. We argue for improved maintainability by examining concrete extensions and potential modifications of the grammatical description provided. We turn now to a brief characterization of this phenomenon.</Paragraph>
<Paragraph position="4"> The rich collection of syntactic and semantic phenomena exhibited by a familiar group of adjectives such as tough and easy present a challenge to those who seek to provide explicit formal characterizations of linguistic properties. We offer here a detailed description of the properties of these adjectives, involving optional and obligatory complementation, control, long-distance dependence, optional modification, and specification. The purpose of this description here is not the linguistic analysis itself (which we find interesting nonetheless), but rather its use in demonstrating the practical utility of inheritance as a tool for linguistic description, and also the predictive analytical power that inheritance affords in the study of the lexicon. In illustration of the latter, we extend our analysis of easy adjectives to a similar group of nouns such as pleasure, and then to the unusual adverbs too and enough, which function as specifiers in adjectival gradation.</Paragraph>
<Paragraph position="5"> The fundamental data are illustrated in (1); examples such as these have not attracted attention in computational linguistics, even if they have often appeared in studies within the generative framework. An early discussion of them is found in Miller and Chomsky (1963), with a score and more of additional studies published in the years since. Most of the salient properties of these adjectives have already been brought to light, but in piecemeal fashion and most often as part of a larger debate about the nature of unbounded dependencies, where detailed syntactic and semantic characterizations of these missing object constructions proved less important. 2 We  Dan Flickinger and John Nerbonne Inheritance and Complementation return to the characteristic properties of these adjectives in Section 3, where they are catalogued and given formal representation.</Paragraph>
<Paragraph position="6"> (1) a. Bill is easy to talk to.</Paragraph>
<Paragraph position="7"> b. It is easy to talk to Bill.</Paragraph>
<Paragraph position="8"> c. Bill is easy for Mary to talk to.</Paragraph>
<Paragraph position="9"> d. It is easy for Mary to talk to Bill.</Paragraph>
<Paragraph position="10"> We chose this phenomenon as a vehicle to recommend lexical inheritance because it illustrates a wide range of grammatical phenomena, aH of which make demands on lexical resources (at least in the lexicalized grammar in which the analysis is framed). In addition to the grammatical demands, the data justify the use of a lexical rule (derivational rule) to relate pairs such as (a) and (b) in (1)--so we shall argue at any rate--thus illustrating a further inheritance-like relationship in the lexicon.</Paragraph>
<Paragraph position="11"> The remainder of the paper is structured as follows: Section 2 summarizes the aspects of HPSG that are important to our proposal, and Section 3 develops the fundamental analysis that Section 4 illustrates in a series of analytical &amp;quot;snapshots&amp;quot; of a single example. Section 5 suggests extensions of the fundamental analysis, especially to further lexical classes (developing the argument that structured lexicons are easily maintained and extended), and a final section summarizes and suggests directions for future work. Appendix A presents the framework for lexical description developed in Flickinger et al. (1985) and Flickinger (1987). The framework is convenient for feature-based grammars, but it allows the specification of other lexical properties as well. This Appendix presents a notation that is precise while avoiding redundancy, e.g., in characterizing the kinds of complements that these adjectives permit, and in expressing the relationships that hold between pairs like the easy of (la) and that of (lb). Since a fundamental claim of hierarchical lexicons is that they eliminate redundancy and thus improve modifiability, there is a second appendix, Appendix B, which demonstrates the modifiability of the structured lexicon.</Paragraph>
</Section>
</Paper>

