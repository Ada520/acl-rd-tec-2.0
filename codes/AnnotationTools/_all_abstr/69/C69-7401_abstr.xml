<?xml version="1.0" standalone="yes"?>

<Paper uid="C69-7401">
<Title>s -deg Computerized Linguistics ,A~commentary</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
IR
</SectionTitle>
<Paragraph position="0"> Modeling of linguistic system Data- pr oc e s sing Something else or more than one area One-time run or continuous production ~mt language (machine, etc) was used? (Please note that when I say language I really mean language / haxdware / system.) Was batch processing, time sharing, or conversation used? Why this choice? Were other languages available? Suitable? How did the choice of language influence the definition of the problem? the prog r axnming ? About how much time (thinking, physical, machine) was required for - and how did the choice of language influence - the following:  How large is the program in source form? What percent commentary? If you used time sharing, did it help? How did the software &amp;quot;bureaucracy&amp;quot; (for example, Job Control Language on th~ IBIVt 360) affect the programming for better or worse? Can the program be easily implemented on a different machine or system? (Was this one of the objectives?) If this was tried, how painful was the experience of transferring the program? If you were to start all over again, would you use the same language? Have you been teaching programming to linguistics students? If so, what has been their experience? Yours? Should linguists learn programming? Why? KVAL-is beginning to plan a fairly large computer system for translation from Swedish to &amp;quot;condensed&amp;quot; Braille. This requires a large dictionary, fairly sophisticated character manipulation routines, and the ability to perform purely linguistic operations on the input text (to recognize syllables, morphemes, etc). Additionally, the input-output problems are not at all trivial. We also want to produce a systemwhich can be moved easily - both to different computers within Sweden, and even, if possible, to other languages, The program should also b O self-documenting and permit easy modification in a modular fashion as new words, new syntactic transformations, etc prove useful. It would also be nice if the &amp;quot;linguistic work&amp;quot; could be written by linguists with only a little programming training, rather than the other way around. We wouldn't even mind if it was cheap and fast. g Suggestions please: What language, machine, type, etc? How should the dictionary be stored (assume any random-accesss device you are familiar wit'h)? Discuss'the goals, ranking them in t~,~ light of your own experience.</Paragraph>
<Paragraph position="1"> - 3-There is much to criticize in the choice and form of the above questions. The naivety is obvious - to a certain extent it is due to my own inexperience in this field (KVAL&amp;quot; s problem has surely been faced - if not solved - by every IR project, for example). To a greater extent, however, the naivety is present to prevent the questions from containing their own answers. By all means, criticize the questions. If you do not feel they are pertinent to your own experience, or to the problem itself, ask your own, and answer them.</Paragraph>
<Paragraph position="2"> Please inform me if you would be interested in taking part in a panel discussion during the conference.</Paragraph>
</Section>
</Paper>

