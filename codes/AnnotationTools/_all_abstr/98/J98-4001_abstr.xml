<?xml version="1.0" standalone="yes"?>

<Paper uid="J98-4001">
<Title>A Collaborative Planning Model of Intentional Structure</Title>
<Section position="2" start_page="0" end_page="528" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> People engage in dialogues for a reason. Their intentions guide their behavior and their conversational partners' recognition of those intentions aids in the latter's understanding of their utterances (Grice 1969; Sidner 1985; Grosz and Sidner 1986). In this paper, we present a computational model for recognizing the intentional structure of a discourse and utilizing it in discourse processing.</Paragraph>
<Paragraph position="1"> The embedded subdialogues in Figures 1 through 3 illustrate a variety of intentions that a person or computer system must recognize to respond effectively to its conversational partner. These dialogues are drawn from the computational linguistics literature and will be used throughout the paper. We have chosen to use these dialogues, rather than constructing or collecting new ones, in order to elucidate the differences between our theory and previous ones.</Paragraph>
<Paragraph position="2"> The dialogue in Figure 1 contains two subtask subdialogues; the dialogue in Figure 2 a correction subdialogue (Litman 1985; Litman and Alien 1987); and the dialogue in Figure 3 two knowledge precondition subdialogues. The names of the subdialogue types are suggestive of a conversational participant's reason for engaging in them. Although these reasons are diverse, the dialogues all exhibit a common structural regularity; the recognition of this structure is crucial for discourse processing. null Intuitive analyses of the sample dialogues serve to illustrate this point. Before presenting these analyses, however, we first introduce some terminology that will be used throughout the paper. A discourse is composed of discourse segments much as a sentence is composed of constituent phrases (Grosz and Sidner 1986). The segmental structure of the sample dialogues is indicated by the bold rule grouping utterances into segments. Whereas the term discourse segment applies to all types of discourse, the term subdialogue is reserved for segments that occur within dialogues. All of the examples in this paper are subdialogues. For expository purposes, we will take the initiator of a discourseto be female and the other participant to be male, thus affording the use of the pronouns she and he in analyzing the sample dialogues. We will also  (1) User: Show me the genetic concept called &amp;quot;employee&amp;quot;.</Paragraph>
<Paragraph position="3"> (2) System: OK. &lt;system displays network&gt; ES User: I can't fit ic below it. a new Can you move it up? ystem: Yes. &lt;system displays network&gt; (6) User: OK, now make an individual employee concept whose first name is ...</Paragraph>
<Paragraph position="4">  A sample correction subdialogue (Sidner 1983; Litman 1985).</Paragraph>
<Paragraph position="5"> use the terms agent and it in more abstract discussions and will apply them to both people and computer systems, both individually as well as in groups* A subtask subdialogue, then, occurs within a task-oriented dialogue and is concerned with a subtask of the overall act underlying the dialogue. 1 An agent initiates a subtask subdialogue to support successful execution of the subtask: communicating about the subtask enables the agent to perform it, as well as to coordinate its actions with its partner's. In the dialogue of Figure 1, the Apprentice (participant &amp;quot;A&amp;quot;) initiates the first subdialogue for two reasons: (i) because he believes that removing the belt of the air compressor plays a role in replacing its pump and belt and (ii) because he wants to enlist the Expert's help in removing the belt. Reason (ii) underlies the sub-dialogue itself, while reason (i) is reflected in the relationship of the subdialogue to the preceding discourse* The Expert must recognize both of these reasons to respond effectively to the Apprentice. For example, suppose that the Expert believes that the Apprentice's belief in (i) is incorrect; that is, she believes that the proposed subtask does not play a role in performing the overall task. The Expert should then communicate that information to the Apprentice (Pollack 1986b). If we were to design a system 1 In some sense, all dialogues are task oriented. The task simply varies from the physical (e.g., removing a pump) to the more intellectual (e.g., satisfying a knowledge precondition).</Paragraph>
<Paragraph position="6">  Lochbaum A Collaborative Planning Model (1) NM: It looks like we need to do some maintenance on node39.</Paragraph>
<Paragraph position="7"> (2) NP: Right.</Paragraph>
<Paragraph position="8"> How shall we proceed? (4) NM: Well, first we need to divert the traffic to another node.</Paragraph>
<Paragraph position="9"> (5) NP: Okay.</Paragraph>
<Paragraph position="10"> (6) Then we can replace node39 with a higher capacity switch.</Paragraph>
<Paragraph position="11"> (7) NM: Right.</Paragraph>
<Paragraph position="12"> (8) NP: Okay good.</Paragraph>
<Paragraph position="13"> FNM: we the traffic to? Which nodes could divert (10! NP: \[puts up diagram\] I (11_) ode41 looks like it could temporarily handle the extra load. (I~NM: I agree. (13) Why don't you go ahead and divert the traffic to node41 and then we can do the replacement.</Paragraph>
<Paragraph position="14"> (14) NP: Okay.</Paragraph>
<Paragraph position="15"> (15y \[NP changes network traffic patterns\] (16) That's done.</Paragraph>
<Paragraph position="16">  Figure 3 Sample knowledge precondition subdialogues. (Adapted from Lochbaurn, Grosz, and Sidner \[1990\].) to play the role of the Expert in this scenario and that system were not designed to recognize the relationship of an embedded subdialogue to the previous discourse, then it would not attribute reason (i) to the Apprentice. It thus would not recognize that the Apprentice mistakenly believes that the proposed subtask contributes to the overall task. As a result, the system would fail to recognize that it should inform the Apprentice of his mistaken belief.</Paragraph>
<Paragraph position="17"> Correction subdialogues provide an even more striking example of the importance of recognizing discourse structure. An agent initiates a correction subdialogue when it requires help addressing some problem. For example, the dialogue in Figure 2 is concerned with modifying a KL-ONE network (Brachman and Schmolze 1985). The User produces utterance (3) of the dialogue because she is unable to perform the next act that she intends, namely adding a new concept to the displayed portion of the network. As with the subtask example, the System must recognize this intention to respond appropriately. In particular, it must recognize that the User is not continuing to perform the subtasks involved in modifying the KL-ONE network, but rather is addressing a problem that prevents her from continuing with them. For the System to recognize the User's intention, it must recognize that the User has initiated a new segment of the discourse and also recognize the relationship of that new segment to the preceding discourse.</Paragraph>
<Paragraph position="18"> If the System does not recognize that the User has initiated a new discourse segment with utterance (3), then it will not interpret the User's subsequent utterances in the proper context. For example, it will take the User's utterance in (4) to be a request that the System perform an act in support of further modifying the network, rather than in support of correcting the problem. If the System does not believe that the act of raising up a displayed subnetwork is part of modifying a network, then it will conclude that the User has mistaken beliefs about how to proceed with the mod- null Computational Linguistics Volume 24, Number 4 ification. In its response, the System may then choose to correct the User's perceived misconception, rather than to perform the act requested of it.</Paragraph>
<Paragraph position="19"> Even if the System does recognize the initiation of a new discourse segment with utterance (3), i.e., it recognizes that the User is talking about something new, if it does not recognize the relationship of the new segment to the preceding discourse, then it may also respond inappropriately. For example, if the System does not recognize that the act the User cannot perform, i.e., &amp;quot;fitting a new ic below it,&amp;quot; is part of modifying the network, then the System may respond without taking that larger context into account. In particular, the System might clear the screen to give the User more room to create the new concept. Such a response would be counterproductive to the User, however, who needs to see the employee concept to create a new instantiation of it. The last sample dialogue contains a third type of subdialogue, a knowledge pre-condition subdialogue. Whereas an agent initiates a correction subdialogue when it is physically unable to perform an action, it initiates a knowledge precondition sub-dialogue when it is &amp;quot;mentally&amp;quot; unable to perform it, i.e., when it lacks the proper knowledge. The dialogue in Figure 3 contains two types of knowledge precondition subdialogues. The first type is concerned with determining a means of performing an act, while the second type is concerned with identifying a parameter of an act. As with the other types of subdialogues discussed above, an agent may respond inappropriately if it does not recognize the relationship of these subdialogues to the preceding discourse. For example, prior to the second subdialogue in Figure 3, agents NM (the Network Manager) and NP (the Network Presenter) have agreed to maintain node39 of a local computer network, in part by diverting traffic from node39 to some other node. To perform the divert traffic act, however, the agents must identify that other node. Agent NM initiates the second subdialogue for this purpose. If agent NP does not recognize the context in which the node is to be identified, i.e., for the purpose of diverting network traffic, then it may respond with a description that will not serve that purpose. For example, it may respond with a description like &amp;quot;the node with the lightest traffic,&amp;quot; rather than with a name like &amp;quot;node41.&amp;quot; Thus, although the sample dialogues include a variety of subdialogue types, the type of processing required to participate in the dialogues is the same. In each case, an agent must recognize both the purpose of an embedded subdialogue and the relationship of that purpose to the purposes associated with the preceding discourse. These purposes and their interrelationships form the intentional structure of the discourse (Grosz and Sidner 1986). In this paper, we present a computational model for recognizing intentional structure and utilizing it in discourse processing. Our model is based on the collaborative planning framework of SharedPlans (Grosz and Sidner 1990; Lochbaum, Grosz, and Sidner 1990; Grosz and Kraus 1993, 1996).</Paragraph>
<Paragraph position="20"> In the first part of this paper, we describe the SharedPlan model in general. In Section 2, we summarize its concepts and definitions and then in Section 3 discuss the model of discourse processing that it imposes, Contrasting it with more traditional approaches to planning and plan recognition. In the second part of the paper, we turn to Grosz and Sidner's theory of discourse structure. We first describe their theory and then show how SharedPlans may be used to model its intentional component. Next, we demonstrate how the process for reasoning with SharedPlans presented in Section 3 may be mapped to the problem of recognizing and reasoning with intentional structure. In this paper, we focus on the, theory of using SharedPlans to model intentional structure; however, the theory has also been implemented in a working system (Lochbaum 1994). In the third part of the paper we evaluate our approach against previous ones. We first return to Grosz and Sidner's theory and evaluate our model against the constraints that it imposes. We then compare our approach to discourse  Lochbaum A Collaborative Planning Model processing with previous plan-based approaches (Litman 1985; Litman and Allen 1987; Lambert and Carberry 1991; Ramshaw 1991) and show that our approach is aimed at recognizing and reasoning with a different type of intention. Whereas our approach is concerned with discourse-level intentions, previous approaches have been concerned with utterance-level intentions.</Paragraph>
</Section>
</Paper>

