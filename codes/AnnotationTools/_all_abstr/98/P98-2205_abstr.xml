<?xml version="1.0" standalone="yes"?>

<Paper uid="P98-2205">
<Title>FIRST RETRIEVED DOCUMENT (TITLE): Arab Hijackers' Demands Similar To Those of Hostage- Takers in Lebanon SUMMARIZER TOPIC: Evidence of Iranian support For Lebanese hostage takers</Title>
<Section position="1" start_page="0" end_page="1262" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> We discuss a seml-interactive approach to information retrieval which consists of two tasks performed in a sequence. First, the system assists the searcher in building a comprehensive statement of information need, using automatically generated topical summaries of sample documents. Second, the detailed statement of information need is automatically processed by a series of natural language processing routines in order to derive an optimal search query for a statistical information retrieval system. In this paper, we investigate the role of automated document summarization in building effective search statements. We also discuss the results of latest evaluation of our system at the annual Text</Paragraph>
<Section position="1" start_page="0" end_page="1261" type="sub_section">
<SectionTitle>
Retrieval Conference (TKEC).
Information Ret~rieval
</SectionTitle>
<Paragraph position="0"> Information retrieval (IR) is a task of selecting documents from a database in response to a user's query, and ranking them according to relevance. This has been usually accomplished using statistical methods (often coupled with manual encoding) that (a) select terms (words, phrases, and other units) from documents that are deemed to best represent their content, and (b) create an inverted index file (or files) that provide an easy access to documents containing these terms. A subsequent search process attempts to match preprocessed user queries against term-based representations of documents in each case determining a degree of relevance between the two which depends upon the number and types of matching terms.</Paragraph>
<Paragraph position="1"> A search is successful if it can return as many as possible documents which are relevant to the query, with as few as possible non-relevant documents. In addition, the relevant documents should be ranked ahead of non-relevant ones. The quantitative tex~ representation methods, predominant in today's leading information retrieval systems 1 limit II~epresentations anchored on words, word or charthe system's ability to generate a successful search because they rely more on the ,form of a query than on its content in finding document matches. This problem is particularly acute in ad-hoc retrieval situations where the user has only a limited knowledge of database composition and needs to resort to generic or otherwise incomplete search statements. IrI order to overcome this limitation, marIy IR systems allow varying degrees of user interaction that facilitates query optimization and calibration to closer match user's information seeking goals. A popular technique here is relevance feedback, where the user or the system judges the relevance of a sample of resuits returned from an initial search, and the query is subsequently rebuilt to reflect this information. Automatic relevance feedback techniques can lead to a very close mapping of known relevant documents, however, they also tend to overflt, which in turn reduces their ability of finding new documents on the same subject. Therefore, a serious challenge for information retrieval is to devise methods for building better queries, or in assisting user to do so.</Paragraph>
<Paragraph position="2"> Building effective search queries We have been experimenting with manual and automatic natural language query (or topic, in TREC parlance) building techniques. This differs from most query modification techniques used in IR in that our method is to reformulate the user's state~ ment of information need rather than the search system's internal representation of it, as relevance feed-back does. Our goal is to devise a method of full-text expansion that would allow for creating exhaustive search topics such that: (1) the performance of any system using the expanded topics would be significantly better than when the system is run using the original topics, and (2) the method of topic acter sequences, or some surrogates of these, along with significance weights derived from their distribution in the database.</Paragraph>
<Paragraph position="3">  expansion could eventually be automated or semi-automated so as to be useful to a non-expert user. Note that the first of the above requirements effectively calls for a free text, unstructured, but highly precise and exhaustive description of user's search statement. The preliminary results from TI~EC evaluations show that such an approach is indeed very effective.</Paragraph>
<Paragraph position="4"> One way to view query expansion is to make the user query resemble more closely the documents it is expected to retrieve. This may include both content, as well as some other aspects such as composition, style, language type, etc. If the query is indeed made to resemble a &amp;quot;typical&amp;quot; relevant document, then suddenly everything about this query becomes a valid search criterion: words, collocations, phrases, various relationships, etc. Unfortunately, an average search query does not look anything like this, most of the time. It is more likely to be a statement specifying the semantic criteria of relevance. This means that except for the semantic or conceptual resemblance (which we cannot model very well as yet) much of the appearance of the query (which we can model reasonably well) may be, and often is, quite misleading for search purposes. Where can we get the right queries? In today's information retrieval, query expansion usually is typically limited to adding, deleting or re-weighting of terms. For example, content terms from documents judged relevant are added to the query while weights of all terms are adjusted in order to reflect the relevance information. Thus, terms occurring predominantly in relevant documents will have their weights increased, while those occurring mostly in non-relevant documents will have their weights decreased. This process can be performed automatically using a relevance feedback method, e.g., (Rocchio 1971), with the relevance information either supplied manually by the user (Harman 1988), or otherwise guessed, e.g. by assuming top 10 documents relevant, etc. (Buckley, et al. 1995). A serious problem with this term-based expansion is its limited ability to capture and represent many important aspects of what makes some documents relevant to the query, including particular term co-occurrence patterns, and other hard-tomeasure text features, such as discourse structure or stylistics. Additionally, relevance-feedback expansion depends on ~he inherently partial relevance information, which is normally unavailable, or unreliable. Other types of query expansions, including general purpose thesauri or lexical databases (e.g., WordneQ have been found generally unsuccessful in information retrieval, (Voorhees 1994).</Paragraph>
<Paragraph position="5"> An alternative to term-only expansion is a full-text expansion described in (Strzalkowski et al.</Paragraph>
<Paragraph position="6"> 1997). In this approach, search topics are expanded by pasting in entire sentences, paragraphs, and other sequences directly from any text document. To make this process efficient, an initial search is performed with the unexpanded queries and the top N (10-30) returned documents are used for query expansion. These documents, irrespective of their overall relevancy to the search topic, are scanned for passages containing concepts referred to in the query. The resulting expanded queries undergo further text processing steps, before the search is run again. We need to note that the expansion material was found in both relevant and non-relevant documents, benefiting the final query all the same.</Paragraph>
<Paragraph position="7"> In fact, the presence of such text in otherwise non-relevant documents underscores the inherent limRafions of distribution-based term reweighting used in relevance feedback.</Paragraph>
<Paragraph position="8"> In this paper, we describe a method of full-text topic expansion where the expansion passages are obtained from an automatic text summarizer. A preliminary examination of Tt{EC-6 results indicate that this mode of expansion is at least as effective as the purely manual expansion which requires the users to read entire documents to select expansion passages. This brings us a step closer to a fully automated expansion: the human-decision factor has been reduced to an accept/reject decision for expanding the search query with a summary.</Paragraph>
<Paragraph position="9"> Summarization-6ased query expansion We used our automatic text summarizer to derive query-specific summaries of documents returned from the first round of retrieval. The summaries were usually 1 or 2 consecutive paragraphs selected from the original document text. The initial purpose was to show to the user, by the way of a quick-read abstract, why a document has been retrieved. If the summary appeared relevant and moreover captured some important aspect of relevant information, then the user had an option to paste it into the query, thus increasing the chances of a more successful subsequent search. Note again that it wasn't important if the summarized documents were themselves relevant, although they usually were.</Paragraph>
<Paragraph position="10"> The query expansion interaction proceeds as follows: null 1. The initial natural language statement of information need is submitted to SMART-based NLIK retrieval engine via a Query Expansion Tool (QET) interface. The statement is converted into an in- null ternal search query and run against the TREC database. 2  2. NEIR returns top N (=30) documents from the database that match the search query.</Paragraph>
<Paragraph position="11"> 3. The user determines a topic for the summarizer.</Paragraph>
<Paragraph position="12"> By default, it is the title field of the initial search statement (see below).</Paragraph>
<Paragraph position="13"> 4. The summarizer is invoked to automatically summarize each of the N documents with respect to the selected topic.</Paragraph>
<Paragraph position="14"> 5. The user reviews the summaries (spending approx. 5-15 seconds per summary) and de-selects these that are not relevant to the search statement. null 6. All remaining summaries are automatically attached to the search statement.</Paragraph>
<Paragraph position="15"> 7. The expanded search statement is passed through  a series of natural language processing steps and then submitted for the final retrieval.</Paragraph>
<Paragraph position="16"> A partially expanded TREC Topic 304 is shown below. The original topic comprises the first four fields, with the Expanded field added through the query expansion process. The initial query, while somewhat lengthy by IR standards (though not by TREC standards) is still quite generic in form, that is, it supplies few specifics to guide the search. In contrast, the Expanded section supplies not only many concrete examples of relevant concepts (here, names of endangered mammals) but also the language and the style used by others to describe them.  Compile a list of mammals that are considered to be endangered, identify their habitat and, if possible, specify what threatens them.</Paragraph>
<Paragraph position="17"> &lt;narr &gt; Narrative: Any document identifying a mammal as endangered is relevant. Statements of authorities disputing the endangered status would also be relevant. A document containing information on habitat and populations of a mammal identified elsewhere as endangered would also be relevant even if the document at hand did not identify the species as endangered. Generalized statements about endangered species without reference to specific mammals would not be relevant. null &lt; expd &gt; Expanded: ~TFtEC-6 database consisted of approx. 2 GBytes of documents from Associated Press newswire, Wall Street Journal, Financial Times, Federal Keglster, FBIS and other sources (Haxman &amp; Voorhees 1998).</Paragraph>
<Paragraph position="18"> The Service is responsible \[or eight species ot&amp;quot; marine mammals under the jurisdiction of the Department of the Interior, as assigned by the Marine Mammal Protection Act of 1972. These species are polar bear, sea and marine otters, walrus, manatees (three species) and dugong. The report reviews the Service's marine mammal-related activities daring the report period.</Paragraph>
<Paragraph position="19"> The U.S. Fish and Wildlife Service had classified the primate as a &amp;quot;threatened&amp;quot; species, but officials said that more protection was needed in view of recent studies documenting a drastic decline in the populations of wild chimps in AFrica.</Paragraph>
<Paragraph position="20"> The Endangered Species Act was passed in 1973 and has been used to provide protection to the bald eagle and grizzly bear, among other animals.</Paragraph>
<Paragraph position="21"> Under the law, a designation ot&amp;quot; a threatened species means it is likely to become extinct without protection, whereas extinction is viewed as a certainty for an endangered species.</Paragraph>
<Paragraph position="22"> The bear on California's state flag should remind us oF what we have done to some or our species, It is a grizzly. And it is extinct in California and in most other states where it once roamed.</Paragraph>
<Paragraph position="23"> &lt; /~op &gt; In the next section we describe the summarization process in detail.</Paragraph>
<Paragraph position="24"> Robust text summarization Perhaps the most difficult problem in designing an automatic text summarization is to define what a summary is, and how to tell a summary from a nonsummary, or a good summary from a bad one. The answer depends in part upon who the summary is intended for, and in part upon what it is meant to achieve, which in large measure precludes any objective evaluation. For most of us, a summary is a brief synopsis of the content of a larger document, an abstract recounting the main points while suppressing most details. One purpose of having a summary is to quickly learn some facts, and decide what you want to do with the entire story. Therefore, one important evaluation criterion is the tradeoff between the degree of compression afforded by the summary, which may result in a decreased accuracy of information, and the time required to review that information. This interpretations is particularly useful, though it isn't the only one acceptable, in summarizing news and other report-like documents. It is also well suited for evaluating the usefulness of summarization in context of an information retrieval system, where the user needs to rapidly and efficiently review the documents returned from search for an indication of relevance and, possibly, to see which aspect of relevance is present.</Paragraph>
<Paragraph position="25"> Our early inspiration, and a benchmark, have been the Quick Read Summaries, posted daily off the front page of New York Times on-line edition (htip://www.nytimes.com). These summaries, produced manually by NYT staff, are assembled out of  passages, sentences, and sometimes sentence fragments taken from the main article with very few, if any, editorial adjustmergs. The effect is a collection of perfectly coherent tidbits of news: the who, the what, and when, but perhaps not why.</Paragraph>
<Paragraph position="26"> This kind of summarization, where appropriate passages are extracted from the original text, is very efficient, and arguably ei~ective, because it doesn't require generation of any new text, and thus lowers the risk of misinterpretation. It is also relatively easier to automate, because we only need to identify the suitable passages among the other text, a task that can be accomplished via shallow NEP and statistical techniques. 3 It has been noted, eg., (Rino &amp; Scott 1994), (Weissberg &amp; Buker 1990), that certain types of tex~s, such as news articles, technical reports, research papers, etc., conform to a set of style and organization constraints, called the Discourse Macro Structure (DMS) which help the author to achieve a desired communication effect. News reports, for example, tend to be built hierarchically out of components which fall roughly into one of the two categories: the what's-the-news category, and the optional background category. The background, if present, supplies the context necessary to understand the central story, or to make a follow up story self-contained. This organization is oiSen reflected in the summary, as illustrated in the example below from NYT 10/15/97, where the highlighted portion provides the background for the main news: Spies Just Wouldn't Come In From Cold War, Files Show Terry Squillaco~e was a Pentagon lawyer who haled her job. Kurt Stand was a union leader wi~h an aging beatnik's slouch. Jim Clark was a lonely private investigator. \[A 200-page affidavit filed last week by\] the Federal Bureau of Investigation says the three were out-oF-work spies \[or East Germany. And alter that state withered away, it says, they desperately reached out for anyone who might want them as secret agents.</Paragraph>
<Paragraph position="27"> In this example, the two passages are non-consecutive paragraphs in the original text; the string in the square brackets at the opening of the second passage has been omitted in the summary.</Paragraph>
<Paragraph position="28"> Here the human summarizer's actions appear relatively straightforward, and it would not be difficult to propose an algorithmic method to do the same.</Paragraph>
<Paragraph position="29"> This may go as follows:  cult method of summarizing text &amp;quot;in your own words.&amp;quot; Computational attempts at such discourse-level and knowledge-level summarization include (Ono, Sumita &amp; Miike 1994), (McKeown &amp; tIadev 1995), (DeJong 1982),  and (I\]ehnert 1981).</Paragraph>
<Paragraph position="30"> 2. Select appropriate passages from the original text and fill the DMS template.</Paragraph>
<Paragraph position="31"> 3. Assemble the summary in the desired order; delete  extraneous words.</Paragraph>
<Paragraph position="32"> We have used this method to build our automated summarizer. We overcome the shortcomings of sentence-based summarization by working on paragraph level instead. 4 The summarizer has been applied to a variety of documents, including Associated Press newswires, articles from the New York Times, Wall Street Journal, Financial Times, San Jose Mercury, as well as documents from the Federal Register, and Congressional Record. The program is domain independent, and it can be easily adapted to most European languages. It is also very robust: we used it to derive summaries of thousands of documents returned by an information retrieval system. It can work in two modes: generic and topical. In the generic mode, it captures the main topic of a document; in the topical mode, it takes a user supplied statement of interest and derives a summary related to this topic. The topical summary is usually different than the generic summary of ihe same document.</Paragraph>
<Paragraph position="33"> Deriving automatic summaries Each component of a summary DMS needs to be instantiated by one or more passages extracted from the original text. Initially, all eligible passages (i.e., explicitly delineated paragraphs) within a document are potential candidates for the summary. As we move through text, paragraphs are scored for their summary-worthiness. The final score for each passage, normalized for its length, is a weighted sum of a number of minor scores, using the following formula: 5</Paragraph>
<Paragraph position="35"> where Sa is a minor score calculated using metric h; wh is the weight reflecting how effective this metric is in general; l is the length of the segment.</Paragraph>
<Paragraph position="36"> The following metrics are used to score passages considered for the main news section of the summary DMS. We list here only the criteria which are the</Paragraph>
<Paragraph position="38"> sentence-based summarization approaches.</Paragraph>
<Paragraph position="39"> SThe weights w~ are trainable in a supervised mode, given a corpus of texts and their summaries, or in an unsupervised mode as described in (Strzalkowski &amp; Wang 1996). For the purpose of the experiments described here, these weights have been set manually.</Paragraph>
<Paragraph position="40">  most relevant for generating summaries in contex~ of an information retrieval system.</Paragraph>
<Paragraph position="41">  1. Words and phrases frequergly occurring in a tex~ are likely to be indicative of its content, especially if such words or phrases do not occur olden elsewhere in the database. A weighted frequency score, similar to tf~df used in automatic tex~ indexing is applicable. Here, idf stands for the inverted document frequency of a term.</Paragraph>
<Paragraph position="42"> 2. Title of a tex~ is often strongly related to its content. Therefore, words and phrases from the title repeated in text are considered as important indicators of content concentration within a documen&amp; null 3. Noun phrases occurring in the opening sentences of multiple paragraphs tend to be indicative of the content. These phrases, along with words from the title receive premium scores.</Paragraph>
<Paragraph position="43"> 4. In addition, all significant terms in a passage (i.e.,  other than the common stopwords) are ranked by a passage-level inverted frequency distribution, e.g., N/pf, where pf is the number of passages containing the term and N is the total number of passages contained in a document.</Paragraph>
<Paragraph position="44"> 5. For generic-type summaries, in case of score ties ~he passages closer to the beginning of a text are preferred to those located towards the end.</Paragraph>
<Paragraph position="45"> The process of passage selection as described here resembles query-based document retrieval. The &amp;quot;documents&amp;quot; here are the passages, and the &amp;quot;query&amp;quot; is a set of words and phrases found in the document's title and in the openings of some paragraphs. Note that the summarizer scores both single- and multi-paragraph passages, which makes it more independent from any particular physical paragraph structure of a document.</Paragraph>
<Paragraph position="46"> Supplying the lSacl~ground passage The background section supplies information that makes the summary self-contained. For example, a passage selected from a document may have significant links, both explicit and implicit, to the surrounding context, which if severed are likely to render the passage uncomprehensible, or even misleading. The following passage illustrates the point: &amp;quot;Once again this demonstrates the substantial influence Iran holds over terrorist kidnapers,&amp;quot; Redman said, adding that it is not yet clear what prompted Iran to take the action it did.</Paragraph>
<Paragraph position="47"> Adding a background paragraph makes this a far more informative summary: Both the French and Iranian governments acknowledged the Iranian role in the release ot&amp;quot; the three French hostages, Jean-Paul Kauffmann, Marcel Carton and Marcel Fontaine. &amp;quot;Once again this demonstrates the substantial influence Iran holds over terrorist kidnapers,&amp;quot; Redman said, adding that it is not yet clear what prompted Iran to take the action it did.</Paragraph>
<Paragraph position="48"> Below are three main criteria we consider to decide if a background passage is required, and if so, how to get one.</Paragraph>
<Paragraph position="49">  1. One indication that a background information  may be needed is the presence of outgoing references, such as anaphors. If an anaphor is detected within the first N (=6) items (words, phrases) of the selected passage, the preceding passage is appended to the summary. Anaphors and other references are identified by the presence of pronouns, definite noun phrases, and quoted expressions.</Paragraph>
<Paragraph position="50"> . Initially the passages are formed from single physical paragraphs, but for some texts the required information may be spread over multiple paragraphs so that no clear &amp;quot;winner&amp;quot; can be selected. Subsequently, multi-paragraph passages are scored, starting with pairs of adjacent paragraphs.</Paragraph>
<Paragraph position="51"> . If the selected main summary passage is shorter than 15 characters, then the passage following it is added to the to the summary. The value of E depends upon the average length of the documents being summarized, and it was set as 100 characters for AP newswire articles. This helps avoiding choppy summaries from texts with a weak paragraph structure.</Paragraph>
</Section>
<Section position="2" start_page="1261" end_page="1262" type="sub_section">
<SectionTitle>
Implernen~afion and evaluation
</SectionTitle>
<Paragraph position="0"> The summarizer has been implemented as a demonstration system, primarily for news summarization.</Paragraph>
<Paragraph position="1"> In general we are quite pleased with the system's performance. The summarizer is domain independent, and can effectively process a range of types of documents. The summaries are quite informative with excellent readability. They are also quite short, generally only 5 to 10% of the original text and can be read and understood very quickly.</Paragraph>
<Paragraph position="2"> As discussed before, we have included the summarizer as a helper application within the user interface to the natural language information retrieval system. In this application, the summarizer is used to derive query-related summaries of documents returned from database search. The summarization method used here is the same as for generic summaries described thus far, with the following exceptions: null  1. The passage-search &amp;quot;query&amp;quot; is derived from the user's document search query rather than from the document title.</Paragraph>
<Paragraph position="3"> 2. The distance of a passage from the beginning  of the document is not considered towards its summary-worthiness.</Paragraph>
<Paragraph position="4"> The topical summaries are read by the users to quickly decide their relevance to the search topic and, if desired, to expand the initial information search statement in order to produce a significantly more effective query. The following example shows a topical (query-guided summary) and compares it to the generic summary (we abbreviate SGML for brevity).</Paragraph>
<Paragraph position="5">  Mugniyeh, 36, is a key figure in the security apparatus of Hezbollah, or Party of God, an Iranian-backed SMite movement believed to be the umbrella For Factions holding most of the 22 foreign hostages in Lebanon.</Paragraph>
<Paragraph position="6"> GENERIC SUMMARY (for comparison): The demand made by hijackers of a Kuwaiti jet is the same as that made by Moslems holding Americans hostage in Lebanon - freedom \['or 17 pro-lranian extremists jailed in Kuwait \['or bombing U.S. and French embassies there in 1983.</Paragraph>
</Section>
</Section>
</Paper>

