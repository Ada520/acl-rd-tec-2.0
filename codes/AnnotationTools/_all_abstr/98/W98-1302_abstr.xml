<?xml version="1.0" standalone="yes"?>

<Paper uid="W98-1302">
<Title>Context-Free Parsing through Regular Approximation</Title>
<Section position="2" start_page="0" end_page="13" type="abstr">
<SectionTitle>
1 Introduction
</SectionTitle>
<Paragraph position="0"> A recent publication \[15\] presented a novel way of transforming a context-free grammar into a new grammar that generates a regular language. This new language is a superset of the orighal language. It was argued that this approach has advantages over other methods of regular approximation \[16, 7\].</Paragraph>
<Paragraph position="1"> Our method of approximation is the following. We define a condition on context-free grammars that is a suiBcient condition for a grammar to generate a regular language. We then give a transformation that turns an arbitrary grammar into another grammar that satisfies this condition. This transformation is obviously not language-preserving; it adds strings to the language generated by the original grammar, in such a way that the language becomes regular.</Paragraph>
<Paragraph position="2"> In the present communication we show how this procedure needs to be extended so that context-free parsing can be realised by a 2-phase process. For the first phase, the approximated grammar is turned into a finite transducer. This transducer processes the input in linear time and produces a table. In the second phase, this table is processed to obtain the set of all parses according to the original grammar.</Paragraph>
<Paragraph position="3"> The order of the time complexity of the second phase is cubic, which corresponds to the time complexity of most context-free parsing algorithms that are used in practice. However, the first phase filters out many parses that are inconsistent with respect to the regular approximation.</Paragraph>
<Paragraph position="4"> This may reduce the effort needed by the second phase.</Paragraph>
<Paragraph position="5"> It is interesting to note that the work presented here is conceptually related to use of regular lookahead in context-free parsing \[5\]. ' The structure of this paper is as follows. In Section 2 we recall some standard definitions from language theory. Section 3 investigates a sut~cient condition for a context-free grammar to generate a regular language, We also present the construction of a finite transducer from such a grammar.</Paragraph>
<Paragraph position="6"> How this transducer reads input and how the output of the transducer can be turned into a representation of all parse trees is discussed in Sections 4 and 5, respectively.</Paragraph>
<Paragraph position="7"> An algorithm to transform a grammar if the sufficient condition mentioned above is not satisfied is given in Section 6. Section 7 explains how this transformation can be incorporated into the construction of the transducer and how the output of such a transducer is then to be interpreted in order to obtain parse trees according to the original grammar.</Paragraph>
<Paragraph position="8"> Some preliminary conclusions drawn from empirical results are given in Section 8.</Paragraph>
<Paragraph position="10"></Paragraph>
</Section>
</Paper>

