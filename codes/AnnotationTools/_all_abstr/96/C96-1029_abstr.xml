<?xml version="1.0" standalone="yes"?>

<Paper uid="C96-1029">
<Title>mentals. Center for the Study of Language and Information</Title>
<Section position="1" start_page="0" end_page="163" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> Horizontal redundancy is inherent to lexica consisting of descriptions of fnlly formed objects. This causes an unwelcome expansion of the lexical database and increases parsing time. To eliminate it, direct relations between descriptions of fnlly formed objects are often defined.</Paragraph>
<Paragraph position="1"> These are additional to the (Typed Multiple) Inheritance Network which already structures the lexicon. Many implementations of horizontal relations, however, fail to generate lexieal entries on a needs-driven basis, so eliminate neither the problem of lexicon expansion nor that of inefficient parsing. Alternatively, we propose that lexical entries are descriptions of objects open to contextnal specification of their properties on the basis of constraints defined within the type system. This guarantees that only those grammatical lexical entries are infered that are needed for efficient parsing. The proposal is extremely modest, making use of only basic inference power and expressivity. null 1 Lexical Rules: what are they? Within the strongly lexical framework of HPSG, lexi('al rules are used to express relations among descriptions ..... a kind of indirect &amp;quot;horizontal relatedness&amp;quot; (Pollard &amp; Sag 1987, 209) which can be contrasted with the vertical relations between the type(s) of lexical elements. Type relations are, of course, captured directly as the monotonic (typed) multiple inheritance network itself, which structures the lexicon.</Paragraph>
<Paragraph position="2"> Typical examples of horizontal redundancy in the hierarchical lexicon thus conceived arc the Alternation phenomena (e.g. Dative Shift, the Locative Alternation, ctc) and word formation phenomena (inflectional and derivational morphology). In fact, Pollard and Sag also refer to declension class membership and similar facts as horizontM relations, and as we shall see, the boundary between vertical and horizontal relations is not immutably fixed once and for all.</Paragraph>
<Paragraph position="3"> The notion of lexical rule is often given some status at the level of linguistic or psychological theory. (Pollard &amp; Sag 1987) make reference to a generative or procedural interpretation of lexicM rules as a deductive mechanism which can be deployed on a needs only basis, for example, to generate words from a single base form. The conception of lexical rules as essential generative devices (rather than static statements expressing (sub-) regularities), is shared in much in:llnential work (e.g. (Bresnan 1982), (Pinker 1989)), although it is by no means universM, even within tIPSG.</Paragraph>
<Paragraph position="4"> Viewed from an implcmentational perspective, on-the-fly application of lexicM rules brings with it a number of distinct advantages which follow from the drastic reduction in the size of the lexicM data-base (lexical construction is less time consmning and parsing time should be reduced as lexical look up is less ambiguous, etc). At first sight then it appears that the benefit of adding an external Lexical l(ule component outweighs the disadvantages (external powerNl mechanisms). We will first show that their role is less clear than this suggests and certainly more problematic, before suggesting in Section 2 an alternative which eschews any extra mechanisms.</Paragraph>
<Section position="1" start_page="0" end_page="163" type="sub_section">
<SectionTitle>
1.1 Horizontal and Vertical Redundancy
</SectionTitle>
<Paragraph position="0"> The parallel drawn above between vertical relatedness (expressed with the type system) and horizontM relatedness among descriptions of fully formed objects is however rather misleading.</Paragraph>
<Paragraph position="1"> Monotonic multiple inheritance networks are most naturally used to represent generalisations over the properties that (groups of) linguistic objects  share - inspection of any network will eonfirin that they are usually deployed to express what is essentially a componential analysis of objects and of the relationship between them (defined on the basis of this analysis). On the other hand, horizontal relations among descriptions (very often lnodelled by means of lexical rules) are essentially relations holding directly between objects themselves. While this intuition is clear, this is much less adequate an approach for morphological relatedness, where a componential approach may often appear just as natural as an object relatedness view, especially if the formalism includes fimctionally dependent values, permitting the expression of allomorphic wtriation and the like. In fact, many putatively horizontal relations may be simply re-expressed within a type hierarchy by viewing them Dom a compouential perspective, obviating the need for expressing them on the %orizontal&amp;quot; dimension which may lead 6o the use of lexical rules. 13ut this is only possible once one frees oneself from a view of lexical relatedness as something which holds essentially between words (objects which correspond to maximal types, that is types at the bottom of the type hierarchy).</Paragraph>
<Paragraph position="2"> llorizontal relations are perhaps most naturally captm:ed by an extra device (Ll{s) external to the lexical network and associated inference mechanism-- see (Krieger gc Nerbonne 1993) and (Calcagno 1995) for recent ItPSG proposals. Some recent work ((Mem'ers 1995) and (l{iehemann 1994:)) partly departs fl:orn this view by expressing relations between objects using the vertical axis (that is, using the type system), but again tile starting point is 'complete' lexical objects.</Paragraph>
</Section>
<Section position="2" start_page="163" end_page="163" type="sub_section">
<SectionTitle>
1.2 Why avoid Horizontal RelationsY
</SectionTitle>
<Paragraph position="0"> Horizontal relations have a number of undesirable features as well as requiring an external meclmnism. HorizontM relations (between objects) are in principle pretty much unconstrained. Vertical relations are more constrained becmlse they are based on componential analysis, starting out Dora the set of properties that objects have. On the other hand, any object can be related to any other object by stipulation in an external mechanism. In architectural terms, it is simply accidental (if fortuitous) that lexical rules are often used to relate minimMly different objects -- they are capable of much more promiscious behaviour.</Paragraph>
<Paragraph position="1"> This state of,affairs is amply demonstrated in the literature, which abounds with attempts to constrain horizontal relations by appeal to subsidiary principles (predicate locality in LFG, constraints of a psycholinguistic nature in the work of (Pinker 1989), etc). Horizontal relations must be constrained to account for 'exceptional' behaviour, that is, for those words which do not participate to a given horizontal relation despite the fact that their description makes them appropriate candidares for the relation (verb alternations offer several examples of these situtation, for instance, 'giving' verbs which do not exhibit the so-called 'dative shift' phenomenon).</Paragraph>
<Paragraph position="2"> Modelling of'exceptional' behaviour leads either to an extreme complexity of the type system or to non-lnonotonic solutions (Flickinger 1987) b(&gt; cause it turns out that certain horizontM relations, usually defined over types, nmst be blocked for individuM objects.</Paragraph>
</Section>
<Section position="3" start_page="163" end_page="163" type="sub_section">
<SectionTitle>
1.3 hnplementing Horizontal Relations
</SectionTitle>
<Paragraph position="0"> Several different implementations of horizontal relations exist. All of them add extra machinery and some add extra expressive power to the core mechanism.</Paragraph>
<Paragraph position="1"> Most frequently, horizontM relations are implemented as unary rules operating at parsing time within a dcrivationM component. Such a component is tided to the inheritance machinery fbr independent reasons, mainly because of' the limited expressivity of the type systeul. With Ll/.s, some lexical entry is considered as 'basic' and all other lexical entries are derived fl:om it introducing otherwise unjustified directionality to the grammar.</Paragraph>
<Paragraph position="2"> In addition, the derivational implementation of horizontal relations fails to produce lexical entries a.s needed, instead, it produces lexica.l entries according to the system's internM algorithm of searching the rule space. Considerable ambiguity is introduced with unpleasant results for parsing time.</Paragraph>
<Paragraph position="3"> Extra machinery for blocking these rules in order to account for exceptional behaviour is also necessary.</Paragraph>
<Paragraph position="4"> Alternatively, Lt{s may be compiled out bat, nnder this approach too, problems like directionality and the blocking of Ll{s as well as expensive ambiguity at parsing time remain unsolved.</Paragraph>
</Section>
</Section>
</Paper>

