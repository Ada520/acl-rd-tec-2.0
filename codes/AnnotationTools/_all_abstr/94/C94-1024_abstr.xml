<?xml version="1.0" standalone="yes"?>

<Paper uid="C94-1024">
<Title>Disambiguation of Super Pint, of Speech (or Supertags) Ahnost Parsing</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
1 Introduction
</SectionTitle>
<Paragraph position="0"> l&gt;art-of-spee&lt;:h disanll&gt;iguation techni&lt;lues (taggers) are often used to eliminat&lt;, (or sul&gt;sl;antlally reduce) the lm.rt-of-spee,&lt;;h anil&gt;iguity prior to parsing. The ta.ggel's are all local hi the sense that they use inform~tion front a limited context in deciding which tag(s) to choose for each word.</Paragraph>
<Paragraph position="1"> As is well known, these taggers are quil;e, successful. null In a lexicalized grammar such its the I,exicMized &amp;quot;Dee-Adjoining Grammar (13~AG), each lexical item is associated with at least one elementary structure (tree). The elementary structures of I'PAG localize dependencies, including long distance dependencies, by requiring that M1 and only the dependent elements be present within the saute structnre. As a result of this localization, a IoxicM item may be (a.nd, in general, a,1most alwa,ys is) associa,ted with more. than one elementary structure. ~Ve will cMl these ele.mentary structures supertags, in order to distinguish them l'rom the standard part-of-speech tags. Note that even when a word has a unique standard part-of-speech, say a verb (V), there will usually lie more than one superta.g associated with this word. Since when the parse is complete, there is only one supertag for each word (assuming there is no global ambiguity), an L'\['AC, parser (SchMms, 1988) nee.ds to search a large space o1&amp;quot; supertags to select the right one lbr each word before combining them for the parse of a. sentence. It is this 1)roblem of supertag dis;unbiguation that we address in I, his paper.</Paragraph>
<Paragraph position="2"> Since l,'l.'A(',s are lexlcalized, we are. presented with a novel opportunil;y to elimill;tte or substantially reduce the supertag assignnmnt ambiguity by using local information such a.s local lexical dependencies, prior to parsing. As in standard lmrt-ofslieech disambiguatioii, we can use local statistical iufortnatiot~ in the term o\[n-gt'anl models based Oil the distril)ution of stiperl;ags hi a I,'I'A(I liarsed corpus. Moreover, since the slil)erta.gs elicode depemde, ncy hfl'ornlal;k)n~ we can also use informa.tion about the distribution of distances between a, given superi;ag and its dependent su perl;ags.</Paragraph>
<Paragraph position="3"> Note that its ill sta,ndard part-of-speech disaunbiguation, superl;ag disambiguation could have been done by a parser, lloweveG carrying out part-of-speech disaml)igua.tion prior to pamsing lnMces the job o1' the. parser much easier and therefore, speeds it np. Stlpertag disalnl)iguation a.s proposed in this paper reduces the work of the parser even further. After snpertag disainbiguation, we have effectively completed the  parse *rod the p~u'ser need 'only' (:omhine the indivi(hlM structures; hence the term--ahnost parsing. This method can a.lso be used go i)~v'se senten(:e fragments in cases where the snpertag sequence after the disambiguation may not combine into :L single structure.</Paragraph>
<Paragraph position="4"> The ma.in tom of this paper is to present te.chniques for dis~unbiguating Sul)erta.gs , and to (wahu~te their pe\]'formm~ce a.nd their impa.ct on I;I'AG parsing. Although presented with resl)ect to Ill'A(',, these techniques are a l)plica.bD to lexicalized gl'aitltlla.rs ill generM. Section 2 I)rovi(h,~ ~m introduction to l,exi('.~dized '\['ree Adjoining Gr~mlmaa's. The objective of supertag (lisa.m1)iguation is illustrated through an example in Section 3. Section 4 l)rielly deseril)es the system used to collect the data, needed for Sul)ert~tg disambiguation. Various methods and their i)erformance results for superta.g (tisambigua.tion are discussed in (let~dl in Section 5.</Paragraph>
<Section position="1" start_page="0" end_page="0" type="sub_section">
<SectionTitle>
Lexicalized 'lS'ee Adjoining
Grammars
</SectionTitle>
<Paragraph position="0"> l,exicalized '.lYee Adjoining (\]r~mmla~r (I:t'AC) is ~ lexicMized tree rewriting grammar lbrm~dism.</Paragraph>
<Paragraph position="1"> The primary structures of ILFAG ~u'e I'~LI,;MI,;N-TALLY 'PII.FI,IS. l'~wh elementary tree has a lexiea.l item (a,nchor) on its fi'ontier and l)rovides a,n extended (lomain of /ocMity over which the au('hor specifies syntactic a.nd semantic (pre(lica.te argument) constra.ints, l'~lementary trees a.re of two ldnds: INITIAl, TRI,H,:S a~rtd AUXILIARY TI/I,~,:s. Examples of initial trees (~ts) ~ul(I a.uxilia,ry trees (fls) are shown in I,'igure I. Nodes (m the frontier ofinitiM trees are, ma, rke(I a,s sul)stil, ution sites 1)y a 'J', while exa.ctly one node on the fl'ontier of an a.uxili~ry tree. whose la, h(q m:~tches the hal}el of the root of the tree, is ula.rked as ;~ foot node 1)y ~L ','. The other nodes on the frontier of an mlxiliary tree ~u'e marked as sul)stit, ution sites, lfl!A(l \['actors recursion \['rom the sta, tement of the syntactic dependencies, l!',lementary trees (initiM and ~mxiliary) are the domain for specifying dependencies. Recursion in specilied via the auxili~u'y trees. \];'Jementa.ry trees ~Lre coml)ined by the Substitution and Adjunetion operi~tions. Substitution inserts element;u'y tre.es a,t the substitution nodes of other elementa.ry trees.</Paragraph>
<Paragraph position="2"> Adjunction inserts :mxili~ry trees into elementary trees at the node whose la.bel in the same as the rout lM)el of tile auxilia,ry tree. An ~Ln exampie, the (:Oml)onent trees ( ~s, me, n,.% n.4, fls, (~s, n's), shown in Figure l c~m be combined to form the sentence John saw a man with lhe telescope l as follows:  /t.</Paragraph>
<Paragraph position="3"> n's substitutes at the NP0 node. in (~.</Paragraph>
<Paragraph position="4"> n,:~ sul)stitutes a.t the \])etl ) node in e~4, the res~llt of which is sul)stituted :~1: the NPl node in r~2.</Paragraph>
<Paragraph position="5"> ~:~ substitutes :LI, the I)etl ) node in ~(;, the result of which is sul)sl, ituted a,L the NI ) node hl 138.</Paragraph>
<Paragraph position="6"> The result of step (3) a.bove a.djoins to the VP node of the result of step (2). Tim resurfing pa,rse tree. is shown in Figure 2(:t).</Paragraph>
<Paragraph position="7"> The process of coral)thing tim elementm'y trees resulting in the I)a.rse of the seutel~ce is rel)re.sented by the deriwltion tree, shown in li'igure 2(I)). The nodes of the deriwttion tree are the tree names that a.re anchored by the ~Lppropria.te lexical item. The c.omposition opera.lion is indica.ted by the nature of the a.rcs - (h~shed llne. for sul)stitutiou :uLd bold line. for a.(ljunction, while the ~ul(h'ess of the operation is h~dica.ted as part of the node label. The deriwLtion tree ea, n a.lso I)e iuterpre.ted ,~s :~ dependency gra.l)h with unhd)eled a.rcs I)etweell words o\[&amp;quot; the. sentence as shown in Figure 2((').</Paragraph>
<Paragraph position="8"> We will ca.ll the elementa.ry structures assoei:tted with ea.ch lexi(:a.I item a.s super l)a.rts-of speech (super I'OS) or supertngs.</Paragraph>
</Section>
</Section>
</Paper>

