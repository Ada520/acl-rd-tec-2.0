<?xml version="1.0" standalone="yes"?>

<Paper uid="J94-2002">
<Title>Tree-Adjoining Grammar Parsing and Boolean Matrix Multiplication</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> Among formalisms for the computation of syntactic description of natural language sentences, Tree-Adjoining Grammars (TAG) play a major role. The class of TAG's was first introduced in Joshi, Levy, and Takahashi (1975) and Joshi (1985); since then, formal and computational properties of this class have been extensively investigated, and the linguistic relevance of TAGs has been discussed in the literature as well. The reader who is interested in these topics is referred to some of the most recent works, for example Schabes (1990) and Frank (1992), and to the references therein.</Paragraph>
<Paragraph position="1"> Both in a theoretical vein and in view of possible natural language processing applications, the recognition and parsing problems for TAGs have been extensively studied and many algorithms have been proposed for their solution. On the basis of tabular techniques, the least time upper bound that has been attested is O(I G II w I 6) for the random-access model of computation, I GI being the size of the input grammar and I wl the length of the input string. In recent years, improvement of such a worst-case running time has been a common goal for many researchers, but up to the present time the TAG parsing problem has strongly resisted all such attempts. Because of the record of all these efforts, the task of improving the above upper bound is actually regarded as a difficult one by many researchers.</Paragraph>
<Paragraph position="2"> In support of such a common feeling, in this paper we restate the TAG parsing problem as a search problem and relate it to the well-known computational problem of Boolean matrix multiplication. This is done in such a way that time upper bounds for TAG parsing can be transferred to time upper bounds for the latter problem. More precisely, we show that any algorithm for TAG parsing that improves the O(IGIJwl 6) time upper bound can be converted into an algorithm for Boolean matrix multiplication running in less than O(m 3) time, m being the order of the input  * Universita di Venezia, Scienze dell'Informazione, via Torino, 155, 30172 Mestre-Venezia, Italy. E-mail: satta@moo.dsi.unive.it. t This research was done while the author was a post-doctoral fellow at the Institute for Research in Cognitive Science, University of Pennsylvania, 3401 Walnut Street, Philadelphia, PA 19104~228, USA. (~) 1994 Association for Computational Linguistics  Computational Linguistics Volume 20, Number 2 matrices. Crucially, Boolean matrix multiplication has been the object of ~nvestigation for many Years: methods that are asymptotically faster than O(m 3) are known, but the more considerable the improvement turned out to be, the more complex the involved computation was found to be. At the present time, the asymptotically fastest algorithms for Boolean matrix multiplication are considered to be only of theoretical interest, because the huge constants involved in the running time of these methods render prohibitive any practical application, given current computer hardware.</Paragraph>
<Paragraph position="3"> As a matter of fact, the design of practical algorithms for Boolean matrix multiplication that considerably improve the cubic time upper bound is regarded as a very difficult enterprise. A consequence of the results presented in this paper is that TAG parsing should also be considered as having the status of a problem that is &amp;quot;hard to improve,&amp;quot; and there is enough evidence to think that methods for TAG parsing that are asymptotically faster than O(\] G I\[w \]6) are unlikely to be of any practical interest, i.e., will involve very complex computations.</Paragraph>
<Paragraph position="4"> The remaining part of this paper is organized as follows. The next section presents the definition of tree-adjoining grammar and introduces the two computational problems that are to be related. Section 3 establishes the main result. Section 4 draws on the computational consequences of such a result and reports some discussion. Finally, Section 5 concludes by indicating how similar results can be found for variants of the TAG parsing problem that have been recently discussed in the literature.</Paragraph>
</Section>
</Paper>

