<?xml version="1.0" standalone="yes"?>

<Paper uid="P94-1033">
<Title>A Corpus-based Approach to Automatic Compound Extraction</Title>
<Section position="2" start_page="0" end_page="244" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> An automatic compound retrieval method is proposed to extract compounds within a text message. It uses n-gram mutual information, relative frequency count and parts of speech as the features for compound extraction. The problem is modeled as a two-class classification problem based on the distributional characteristics of n-gram tokens in the compound and the non-compound clusters. The recall and precision using the proposed approach are 96.2% and 48.2% for bigram compounds and 96.6% and 39.6% for trigram compounds for a testing corpus of 49,314 words. A significant cutdown in processing time has been observed.</Paragraph>
<Paragraph position="1"> Introduction In technical manuals, technical compounds \[Levi 1978\] are very common. Therefore, the quality of their translations greatly affects the performance of a machine translation system. If a compound is not in the dictionary, it would be translated incorrectly in many cases; the reason is: many compounds are not compositional, which means that the translation of a compound is not the composite of the respective translations of the individual words \[Chen and Su 1988\]. For example, the translation of 'green house' into Chinese is not the composite of the Chinese ~anslations of 'green' and 'house'. Under such circumstances, the number of parsing ambiguities will also increase due to the large number of possible parts of speech combinations for the individual words.</Paragraph>
<Paragraph position="2"> It will then reduce the accuracy rate in disambiguation and also increase translation time.</Paragraph>
<Paragraph position="3"> In practical operations, a computer-translated * manual is usually concurrently processed by several posteditors; thus, to maintain the consistency of translated terminologies among different posteditors is very important, because terminological consistency is a major advaatage of machine translation over human translation. If all the terminologies can be entered into the dictionary before translation, the consistency can be automatically maintained, the translation quality can be greatly improved, and lots of postediting time and consistency maintenance cost can be saved.</Paragraph>
<Paragraph position="4"> Since compounds are rather productive and new compounds are created from day to day, it is impossible to exhaustively store all compounds in a dictionary. Also, it is too costly and time-consuming to inspect the manual by people for the compound candidates and update the dictionary beforehand. Therefore, it is important that the compounds be found and entered into the dictionary before translation without much human effort; an automatic and quantitative tool for extracting compounds from the text is thus seriously required.</Paragraph>
<Paragraph position="5"> Several compound extracting approaches have been proposed in the literature \[Bourigault 1992, Calzolari and Bindi 1990\]. Traditional rule-based systems are to encode some sets of rules to extract likely compounds from the text. However, a lot of compounds obtained with such approaches may not be desirable since they are not assigned objective preferences. Thus, it is not clear how likely one candidate is considered a compound.</Paragraph>
<Paragraph position="6"> In LEXTER, for example, a text corpus is analyzed and parsed to produce a list of likely terminological units to be validated by an expert \[Bourigault 1992\]. While it allows the test to be done very quickly due to the use of simple analysis and parsing rules, instead of complete syntactic analysis, it does not suggest quantitatively to what extent a unit is considered a terminology and how often such a unit is used in real text. It might therefore extract many inappropriate terminologies with high false alarm. In another statistical approach by \[Calzolari and Bindi 1990\], the association ratio of a word pair and the dispersion of the second word are used to decide if it. is a fixed phrase (a compound). The drawback is that it does not take the number of occurrences of the word pair into account; therefore, it is not.</Paragraph>
<Paragraph position="7">  known if the word pair is commonly or rarely used.</Paragraph>
<Paragraph position="8"> Since there is no performance evaluation reported in both frameworks, it is not clear how well they work.</Paragraph>
<Paragraph position="9"> A previous framework by \[Wu and Su 1993\] shows that the mutual information measure and the relative frequency information are discriminative for extracting highly associated and frequently encountered n-gram as compound. However, many non-compound n-grams, like 'is a', which have high mutual information and high relative frequency of occurrence are also recognized as compounds. Such n-grams can be rejected if syntactic constraints are applied. In this paper, we thus incorporate parts of speech of the words as a third feature for compound extraction. An automatic compound retrieval method combining the joint features of n-gram mutual information, relative frequency count and parts of speech is proposed. A likelihood ratio test method, designed for a two-class classification task, is used to check whether an n-gram is a compound. Those n-grams that pass the test are then listed in the order of significance for the lexicographers to build these entries into the dictionary. It is found that, by incorporating parts of speech information, both the recall and precision for compound extraction is improved. The simulation result shows that the proposed approach works well. A significant cutdown of the postediting time has been observed when using this tool in an MT system, and the translation quality is greatly improved.</Paragraph>
<Paragraph position="10"> A Two Cluster Classification Model</Paragraph>
<Section position="1" start_page="242" end_page="243" type="sub_section">
<SectionTitle>
for Compound Extraction
</SectionTitle>
<Paragraph position="0"> The first step to extract compounds is to find the candidate list for compounds. According to our experience in machine translation, most compounds are of length 2 or 3. Hence, only bigrams and trigrams compounds are of interest to us. The corpus is first processed by a morphological analyzer to normalize every word into its stem form, instead of surface form, to reduce the number' of possible alternatives. Then, the corpus is scanned from left to right with the window sizes 2 and 3.</Paragraph>
<Paragraph position="1"> The lists of bigrams and trigrams thus acquired then form the lists of compound candidates of interest. Since the part of speech pattern for the n-grams (n=2 or 3) is used as a compound extraction feature, the text is tagged by a discrimination oriented probabilistic lexical tagger \[Lin et al. 1992\]. The n-gram candidates are associated with a number of features so that they can be judged as being compound or non-compound. In particular, we use the mutual information among the words in an n-gram, the relative frequency count of the n-gram, and the part of speech patterns associated  with the word n-grams for the extraction task.</Paragraph>
<Paragraph position="2"> Such features form an 'observation vector' PS (to be described later) in the feature space for an input n-gram. Given the input features, we can model the compound extraction problem as a two-class classification problem, in which an n-gram is either classified as a compound or a non-compound, using a likelihood ratio )t for decision making:</Paragraph>
<Paragraph position="4"> where Mc stands for the event that 'the n-gram is produced by a compound model', Mnc stands for the alternative event that 'the n-gram is produced by a non-compound model', and PS is the observation associated with the n-gram consisting of the joint features of mutual information, relative frequency and part of speech patterns. The test is a kind of likelihood ratio test commonly used in statistics \[Papoulis 1990\]. If A &gt; 1, it is more likely that the n-gram belongs to the compound cluster. Otherwise, it is assigned to the non-compound cluster. Alternatively, we could use the logarithmic likelihood ratio In A for testing: if In A &gt; O, the n-gram is considered a compound; it is, otherwise, considered a non-compound.</Paragraph>
</Section>
<Section position="2" start_page="243" end_page="243" type="sub_section">
<SectionTitle>
Features for Compound Retrieval
</SectionTitle>
<Paragraph position="0"> The statistics of mutual information among the words in the n-grams, the relative frequency count for each n-gram and the transition probabilities of the parts of speech of the words are adopted as the discriminative features for classification as described in the following subsections.</Paragraph>
<Paragraph position="1"> Mutual Information Mutual information is a measure of word association. It compares the probability of a group of words to occur together (joint probability) to their probabilities of occurring independently. The bigram mutual information is known as \[Church and Hanks 1990\]:</Paragraph>
<Paragraph position="3"> where x and y are two words in the corpus, and I(x;y) is the mutual information of these two words (in this order). The mutual information of a trigram is defined as \[Su et al. 1991\]:</Paragraph>
<Paragraph position="5"> In general, I(.) &gt;&gt; 0 implies that the words in the u-gram are strongly associated. Ot.herwise, their appearance may be simply by chance.</Paragraph>
<Paragraph position="6"> Relative Frequency Count The relative frequency count for the i th n-gram is defined as:</Paragraph>
<Paragraph position="8"> where fi is the total number of occurrences of the i th n-gram in the corpus, and K is the average number of occurrence of all the entries. In other words, f~ is normalized with respect to K to get the relative frequency. Intuitively, a frequently encountered word n-gram is more likely to be a compound than a rarely used n-gram. Furthermore, it may not worth the cost of entering the compound into the dictionary if it occurs very few times. The relative frequency count is therefore used as a feature for compound extraction.</Paragraph>
<Paragraph position="9"> Using both the mutual information and relative frequency count as the extraction features is desirable since using either of these two features alone cannot provide enough information for compound finding. By using relative frequency count alone, it is likely to choose the n-gram with high relative frequency count but low association {mutual information) among the words comprising the n-gram. For example, if P(x) and P(y) are very large, it may cause a large P(z,y) even though they are not related. However, P(x, y)/P(z) x P(y) would be small for this case.</Paragraph>
<Paragraph position="10"> On the other hand, by using mutual information alone it may be highly unreliable if P(x) and P(y) are too small. An n-gram may have high mutual information not because the words within it are highly correlated but due to a large estimation error. Actually, the relative frequency count and mutual information supplement each other.</Paragraph>
<Paragraph position="11"> A group of words of both high relative frequency and mutual information is most likely to be composed of words which are highly correlated, and very commonly used. Hence, such an n-gram is a preferred compound candidate.</Paragraph>
<Paragraph position="12"> The distribution statistics of the training corpus, excluding those n-grams that appear only once or twice, is shown in Table 1 and 2 (MI: mutual information, RFC: relative frequency count, cc: correlation coefficient, sd: standard deviation). Note that the means of mutual information and relative frequency count of the compound cluster are, in general, larger than those in the non-compound cluster. The only exception is the means of relative frequencies for trigrams. Since almost 86.5% of the non-compound trigrams occur only once or twice, which are not considered in estimation, the average number of occurrence of such trigrams are smaller, and hence a larger  Indegdegf I meandegf I sddegf I tokens MI MI bigram I 862 I 7.49 I 3.08 I trigram 245 7.88 2.51 I I I RFC I covariance cc bigram I 3.18 I -0.71 I-0.0721 trigram 2.18 -0.41 -0.074  relative frequency than the compound cluster, in which only about 30.6% are excluded from consideration. null Note also that mutual information and relative frequency count are almost uncorrelated in both clusters since the correlation coefficients are close to 0. Therefore, it is appropriate to take the mutual information measure and relative frequency count as two supplementary features for compound extraction.</Paragraph>
<Paragraph position="13"> Parts of Speech Part of speech is a very important feature for extracting compounds. In most cases, part of speech of compounds has the forms: \[noun, noun\] or \[adjective, noun\] (for bigrams) and \[noun, noun, noun\], \[noun, preposition, noun\] or \[adjective, noun, noun\] (for trigrams). Therefore, n-gram entries which violate such syntactic constraints should be filtered out even with high mutual information and relative frequency count.</Paragraph>
<Paragraph position="14"> The precision rate of compound extraction will then be greatly improved.</Paragraph>
</Section>
<Section position="3" start_page="243" end_page="244" type="sub_section">
<SectionTitle>
Parameter Estimation and
Smoothing
</SectionTitle>
<Paragraph position="0"> The parameters for the compound model Mr and non-compound model M,c can be evaluated form a training corpus that is tagged with parts of speech and normalized into stem forms. The cor- null pus is divided into two parts, one as the training corpus, and the other as the testing set. The n-grams in the training corpus are further divided into two clusters. The compound cluster comprises the n-grams already in a compound dictionary, and the non-compound cluster consists of the n-grams which are not in the dictionary. However, n-grams that occur only once or twice are excluded from consideration because such n-grams rarely introduce inconsistency and the estimation of their mutual information and relative frequency are highly unreliable.</Paragraph>
<Paragraph position="1"> Since each n-gram may have different part of speech (POS) patterns Li in a corpus (e.g., Li = \[n n\] for a bigram) the mutual information and relative frequency counts will be estimated for each of such POS patterns. Furthermore, a particular POS pattern for an n-gram may have several types of contextual POS's surrounding it. For example, a left context of 'adj' category and a right context of 'n' together with the above example POS pattern can form an extended POS pattern, such as Lij = \[adj (n n) n\], for the n-gram. By considering all these features, the numerator factor for the log-likelihood ratio test is simplified in the following way to make parameter estimation feasible: P(aT\]Mc) x P(Mc) Hi:I \[P(it,, RL \[Mc) n, P(Mc) &amp;quot; , I-Ij=l P(Lij IMc)\] x where n is the number of POS patterns occuring in the text for the n-gram, rt i is the number of extended POS patterns corresponding to the i th POS pattern, Li, Lij is the jth extended POS pattern for Li, and MLI and RL~ represent the means of the mutual information and relative frequency count, respectively, for n-grams with POS pattern Li. The denominator factor for the non-compound cluster can be evaluated in the same way.</Paragraph>
<Paragraph position="2"> For simplicity, a subscript c (/nc) is used for the parameters of the compound (/noncompound) model, e.g., P(~.IMc) ~- Pc(Z). Assume that ML. and RL~ are of Gaussian distribution, then the bivariate probability density function Pc(ML,,RL,) for MLi and RL~ can be evaluated from their estimated means and standard deviations \[Papoulis 1990\]. Further simplification on the factor Pc(Lij) is also possible. Take a bigram for example, and assume that the probability density function depends only on the part of speech pattern of the bigram (C1, C2) (in this order), one left context POS Co and one right lookahead POS C3, the above formula can be decomposed as:</Paragraph>
<Paragraph position="4"> A similar formulation for trigrams with one left context POS and one right context POS, i.e., Pc(Co, C1, C2, C3, C4), can be derived in a similar way.</Paragraph>
<Paragraph position="5"> The n-gram entries with frequency count _ &lt; 2 are excluded from consideration before estimating parameters, because they introduce little inconsistency problem and may introduce large estimation error. After the distribution statistics of the two clusters are first estimated, we calculate the means and standard deviations of the mutual information and relative frequency counts. The entries with outlier values (outside the range of 3 standard deviations of the mean) are discarded for estimating a robust set of parameters. The factors, like Pc(C2\[C1), are smoothed by adding a flattening constant 1/2 \[Fienberg and Holland 1972\] to the frequency counts before the probability is estimated. null</Paragraph>
</Section>
</Section>
</Paper>

