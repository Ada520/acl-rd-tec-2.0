<?xml version="1.0" standalone="yes"?>

<Paper uid="J04-2005">
<Title>c(c) 2004 Association for Computational Linguistics Squibs and Discussions Comments on &amp;quot;Incremental Construction and Maintenance of Minimal Finite-State Automata,&amp;quot; by Rafael C. Carrasco and Mikel</Title>
<Section position="2" start_page="0" end_page="228" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> Carrasco and Forcada (2002) present two algorithms: one algorithm for incremental addition of strings into a minimal, cyclic, deterministic, finite-state automaton, and another for removal of strings from such an automaton. The algorithm for addition of strings can be seen as an extension to cyclic automata of the algorithm for unsorted data, the second algorithm in Daciuk et al, (2000). It turns out that not only the algorithm for unsorted data (the second algorithm in Daciuk et al. [2000]), but also the algorithm for sorted data (the first one in that article) can be extended in the same way. That extension is presented in Section 3 of this article.</Paragraph>
<Paragraph position="1"> Carrasco and Forcada emphasize on-line maintainance of dictionaries. Their dictionaries are constantly updated. In a different model, dictionaries are mostly consulted and are updated much less frequently. In such a model, it is more convenient to rebuild the dictionary off-line each time it is updated. By taking the process off-line, one saves much memory, as certain structures needed for construction are not needed for consultation, and other structures can be very efficiently compressed (Kowaltowski, Lucchesi, and Stolfi 1993; Daciuk, 2000). The data for dictionaries can be kept sorted; adding a few new (sorted) entries can be done in linear time. Although Carrasco and Forcada's string addition algorithm can be used in this particular model, an algorithm specialized for sorted data can perform the construction process faster than its more general equivalent.</Paragraph>
<Paragraph position="2"> The rest of the article is organized as follows. Section 2 introduces mathematical preliminaries. Section 3 presents an incremental algorithm for addition of sorted strings to a cyclic automaton. First, the role of a data structure called the register is explained in detail in Section 3.1, then necessary modifications to the algorithm in Carrasco and [?] Deptartment of Knowledge Engineering, Ul. G. Narutowicza 11/12, 80-952 Gda'nsk, Poland. E-mail: jandac@eti.pg.gda.pl.</Paragraph>
<Paragraph position="3">  Computational Linguistics Volume 30, Number 2 Forcada (2002) are introduced in Section 3.2, and the final algorithm is presented in Section 3.3. The algorithm is then analyzed in Section 4 and evaluated in Section 5.</Paragraph>
<Paragraph position="4"> Section 6 gives conclusions.</Paragraph>
</Section>
</Paper>

