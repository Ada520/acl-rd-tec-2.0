<?xml version="1.0" standalone="yes"?>

<Paper uid="H86-1012">
<Title>Sentence Direct Object Subject Objects of Prepositional Phrases Subsequent Sentences (update FocusList):</Title>
<Section position="1" start_page="0" end_page="115" type="abstr">
<SectionTitle>
ABSTRACT
</SectionTitle>
<Paragraph position="0"> This paper describes the use of focusing in the PUNDIT text processing system. 1 Focusing, as discussed by \[Sidner1979\] (as well as the closely related concept of centering, as discussed by \[Grosz1983\] ), provides a powerful tool for pronoun resolution.</Paragraph>
<Paragraph position="1"> However, its range of application is actually much more general, in that it can be used for several problems in reference resolution. Specifically, in the PUNDIT system, focusing is used for one-anaphora, elided noun phrases, and certain types of definite and indefinite noun phrases, in addition to its use for pronouns. Another important feature in the FUNDIT reference resolution system is that tile focusing algorilJnn is based on syntactic constituents, rather than on thematic roles, as in Sidner's system. This feature is based on considerations arising from the extension of focusing to cover oneanaphora. These considerations make syntactic focusing a more accurate predictor of the interpretation of one-anaphoric noun phrases without decreasing the accuracy for  Focusing and Reference Resolution in PUNDIT 1. Background 1.1. Focusing  Linguistically reduced forms, such as pronouns, are typically used in texts to refer to the entity or entities with which the text is most centrally concerned. 2 Thus, keeping track of this entity, (the topic, of \[Gundel1974\], the focus of \[Sidner1979\], and the backward-looking center of \[Grosz1983, Kameyama1985\] ) is clearly of value in the interpretation of pronouns. However, while 'pronoun resolution' is generally presented as a problem in computational linguistics to which focusing can provide an answer (See for example, the discussion in \[Hirst1981\]), it is useful to consider focusing as a problem in its own right. By looking at focusing from this perspective, it can be seen that its applications are more general than simply finding referents for pronouns. Focusing can in fact play a role in the interpretation of several different types of noun phrases. In support of this position, I will show how focus is used in the PUNDIT (Prolog UNDerstander of Integrated Text) text processing system to interpret a variety of forms of anaphoric reference; in particular, pronouns, elided noun phrases, oneanaphora, and context-dependent full noun phrase references.</Paragraph>
<Paragraph position="2"> A second position advocated in this paper is that surface syntactic form can provide an accurate guide to determining what entities are in focus. Unlike previous focusing algorithms, such as that of \[Sidner1979\], which used thematic roles (for example, theme, agent, instrument as described in \[Gruber1976\] ), the algorithm used in this system relies on surface syntactic structure to deternfine which entities are expected to be in focus. The extension of the focusing mechanism to handle one-anaphora has provided the major motivation for the choice of syntactic focusing.</Paragraph>
<Paragraph position="3"> The focusing mechanism in this system consists of two parts--a FocusList, which is a list of entities in the order in which they are to be considered as loci, and a focusing algorithm, which orders the FocusList. The implementation is discussed in detail in Section 5.</Paragraph>
<Paragraph position="4"> 1.2- Overview of the PUNDIT System I will begin with a brief overview of the PUNDIT system, currently under development at SDC. PUNDIT is written in Quintus Prolog 1.5. It is designed to integrate syntax, semantics, and discourse k1~owledge in text processing for limited domains. The system is implemented as a set of distinct interacting components which communicate with each other in clearly specified and restricted ways.</Paragraph>
<Paragraph position="5"> The syntactic component, Restriction Grammar,\[Hirschman1982, Hirschman1985\], performs a top-down parse by interpreting a set of context-free BNF definitions and enforcing context-sensitive restrictions associated with the BNF definitions. The grammar is generally modelled after that developed by the NYU Linguistic String Project \[Sager1981\]. Restrictio~s which enforce context-sensitive constraints on the parse are associated with the bnf rules I am grateful for the helpfnl comments of Lynette Hirschman, Marcia Linebarger, Martha Palmer, and Rebecca Schiffman on this paper. John Dowding and \[3onnie Webber also provided useful comments and suggestions on an earlier version.  Focusing and Reference Resolution in PUNDIT Some semantic filtering of the parse is done at the noun phrase level. That is, alter a noun phrase is parsed, it is passed t~o the noun phrase semantics component, which determines if there is an acceptable semantics associated with that parse. If the noun phrase is acceptable, the semantics component constructs a semantic represents-Lion. If the noun phrase is not semantically acceptable, another parse is sought. At the conclusion of parsing, the sentence-level semantic interpreter is called. This interpreter is based on Pahner's Inference Driven Semantic Analysis system, \[Palmer1985\], which analyzes verbs into their component meanings and fills their thematic roles. In the process of filling a thematic role the semantic analyzer calls reference resolution for a specific syntactic constituent in order to find a referent to fill the role. Reference resolution instantiates the referent, and adds to the discourse representation any information inferred during reference resolution.</Paragraph>
<Paragraph position="6"> Domain-specific information is available for both the noun phrase and clause level semantic components through the knowledge base. The domain currently being modelled by SDC is that of computer maintenance reports. Currently the knowledge base is implemented as a semantic net containing a part-whole hierarchy and an iua hierarchy of the components and entities in the application domain.</Paragraph>
<Paragraph position="7"> Following the semantic analysis, a discourse component is called which updates the discourse representation to include the information from the current sentence and which runs the focusing algorithm.</Paragraph>
</Section>
</Paper>

