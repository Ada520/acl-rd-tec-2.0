<?xml version="1.0" standalone="yes"?>

<Paper uid="C86-1141">
<Title>Synthesis of Spoken Messages from Semantic Representations (Semantlc-Representat Ion--to-Speech System)</Title>
<Section position="1" start_page="0" end_page="604" type="abstr">
<SectionTitle>
22301 LANNION CEDEX
Abstract
</SectionTitle>
<Paragraph position="0"> A semantic-representation-to-speech system communicates orally the information given in a semantic representation. Such a system must Integrate a text generation module, a phonetic conversion module, a prosodic module and a speech synthesizer We will see how the syntactic information elaborated by the text generatlon module is used for both phonetic conversion and prosody, so as to produce the data that must be supplied to the speech synthesizer, namely a phonetic chain Including prosodic Information.</Paragraph>
<Paragraph position="1"> Introduction A spoken message can be produced either to utter a written text (text-to-speech system), or to communicate orally the information given in a semantic representation (semantic-representation-to-speech system). In both cases, the speech synthesizer must be provided with a phonetic chain including prosodic Information In order to reconstruct the acoustic signal. As we will recall in 1., syntactic knowledge is necessary to compure the phonetic transcription of a written text and to include prosodlc Information in It. Hence a text-to-speech system must Include a parsing module to get this syntactic knowledge. On the other hand, a semantic-representation-to-speech system can take advantage of the syntactic information elaborated when expressing the semantic representation in natural language. Therefore, we design a semantic-representation-to-speech system that generates directly from the semantic representation a phonetic string with prosodic markers, without a written stage. Our system has been designed for French but It could be extended to other languages.</Paragraph>
<Paragraph position="2">  1. tn French, semantic features ore needed to distinguish only o few non-homophonic homographs, mostly technical words, I. Knowledge needed In a text-to-speech system !.1. Spelling-to-sound conversion  The first problem encountered in synthesizing speech from written text is that of spelling-to-sound conversion. Certain languages are much easier than others in this respect. For example, about 50 rules are sufficient for tl~e conversion of written Spanish into phonetic symbols, with a virtually zero error rate (,Santos &amp; Nombela 1982). For other languages, such as French or English, the problem is much greater A phoneme does not generally correspond to only one grapheme, and the reverse ls also true For instance, the word o/seau is pronounced /wazo/ : none of its graphemes Is pronounced as would be expected (ie. /o/ for o, /i/for /~ /s/ for 5, schwa for e, /a/for a and/y/ for u).</Paragraph>
<Paragraph position="3"> Spelling-to-sound conversion is further complicated by the existence of' non-homophonic homographs, ie. words spelled the same but pronounced differently.</Paragraph>
<Paragraph position="4"> The distinction between two homographs requires to know their grammatical categories (record Is pronounced \['reko:d\] If it is a noun and \[rl'ko:d\] if It is a verb), their Inflexional features (read Is pronounced \[ri:d\] in the infinitive form and \[red\] in the preterite), or their semantic features (lead Is pronounced tied\] when It is a noun or a verb related to the metal and \[li:d\] otherwise) i, In French, words in context raise the additional problem of liaison. A liaison occurs between a word ending in a mute consonant and a word beginning with a vowel. For example, the n in mon is pronounced in mon arrivEe but mute in /non depart, However, a liaison Is made only if this phonological condition is accompanied with syntactic conditions. For example, a liaison is made between a determiner and a noun as in rno/~ arrivEe (my arrival), but not between a subject and a verb as in Le limonarrive (The silt is coming).</Paragraph>
<Paragraph position="5">  To sum up, the phonetic conversion of French texts relies on syntactic knowledge to deal with homographs and liaisons.</Paragraph>
<Section position="1" start_page="599" end_page="604" type="sub_section">
<SectionTitle>
1.2. Prosody
</SectionTitle>
<Paragraph position="0"> A text-to-speech system supposes the storage of minimum acoustic units that allow the reconstruction of the acoustic signal for any sentence. One solution consists In the choice of diphones as acoustic units. A diphone is defined as a segment (about 1,200 for French) that goes from the steady state of a phonetic segment to the steady state of the following segment and that contains In its heart all the transitional part between two consecutive sounds.</Paragraph>
<Paragraph position="1"> Furthermore, the issue of increasing the naturalness of synthetic speech requires to take into account prosodic factors, namely, stress, timing (structuring of the utterance by pauses) and intonation. Intonation is characterized by the interaction of three parameters: evolution of intensity and laryngeal frequency as functions of duration.</Paragraph>
<Paragraph position="2"> The prosodic behavior of one speaker was therefore subjected to a systematic study. An acceptable model was extracted from this behaviour. The prosodic processing (Emerard 1977) is based on the allocation of prosodic markers (e.g. \[=\], \[#\]) at different points in a sentence. Fifteen prosodic markers were considered to be sufficient for determining suitable prosodic contours for the synthesis of French. Each marker assigns a melody and a rhythm to each syllable of the preceding word. More precisely, each marker may - cause an interruption in the dlphone concatenation, -introduce a pause, - affect to varying degrees the amplitude of laryngeal frequency (F o) on the last vowel of the word, - determine rising or falling F o movements.</Paragraph>
<Paragraph position="3"> The choice of a marker after a constituent is determined both by the syntactic category of the constituent (verbal syntagm, subordinate clause) and by its location inside the sentence, especially by the existence of a more or less complex right context. In the simple enunciative sentence Jean part (John is leaving), the prosodic processing has to give the following results: Jean \[#\] part \[.\]. Nevertheless, it is not possible to conclude with the following prosodic rules: \[#} is the marker assigned to \[end of subject noun phrase\] \[.\]is the marker assigned to \[end of verbal syntagm\] because in the enunciative sentence Jean part etMar/~;  vl~nt (John is going away and Mary is coming), the prosodic processing has to propose: Jean \[:\] part \[,\] et Marie \[#\] v1~nt \[.\]. A comparison of these two sentences clearly shows that it is not possible to assign a specific marker after a constituent only on the basis of its syntactic category. It is necessary to take its right context into account, Moreover, placing prosodic markers must be carried out in a hierarchical manner. For example, the marker between the preverbal phrase and the verbal syntagm depends on the marker assigned at the end of the clause containing them; this last marker depends in turn on the marker assigned at the end of the sentence containing the clause.</Paragraph>
<Paragraph position="4"> To sum up, the issue of prosody is handled by placing appropriate markers in appropriate locations.</Paragraph>
<Paragraph position="5"> This can only be done when precise syntactic information is available.</Paragraph>
<Paragraph position="6"> 2. Production of a phonetic chain with prosodic markers The system which translates a semantic representation into a phonetic chain with prosodic markers has been built from a written text generation system (Danlos 1986) that has been modified and completed. Let us start with a brief description of this generator.</Paragraph>
<Paragraph position="7"> 2.1. The generator The generator Is modularized into a strategic component and a syntactic component. From a semantic representation such as</Paragraph>
<Paragraph position="9"> the strategic component makes conceptual decisions (e.g. the decision about the order of the informations) and linguistic decisions (e.g. the decision about the number of sentences)(Danlos 1984 a and b). The output of this component is a &amp;quot;text template&amp;quot; (TT) that indi- null A text template is turned Into a text by the syntactic component. This component applies grammar rules (e.g.</Paragraph>
<Paragraph position="10"> reduction of a subordinate clause to an Infinitive form), synthesizes the tokens and performs the morphological routines. For these operations to be carried out, a text template includes, for each sentence, syntactic Information that Is represented in a tree whose nodes are syntacti~ categories such as S (sentence), CL (clause), SUBJECT or VERB. A text template may be made up of several sentences, however we wlll give an example with a single sentence because the operations of phonetic conversion and entering prosodic markers are performed within a sentence, independently of the other sentences. From the semantic representation (I), the text template may be:</Paragraph>
<Paragraph position="12"> The erasing of the auxiliary vocabulary leads to: Jean a offert des anemones ~ Mar/e pour la rendr~ iveureuse.</Paragraph>
<Paragraph position="13"> (John offered anemones to Mary to make her happy.) The syntactic component contains a morphological module (Courtois 1984) that works out an inflected form (e.g. heureuse, the feminine singular of heureuxJ given a baslc form (e.g. heureux) and Inflexlonal features (e.g. feminine, singular). Thls module Is based on a dictionary that indicates an inflexlon mode for each basic form. Each inflexlon mode is associated with a rule that computes inflected forms.</Paragraph>
<Paragraph position="14"> The only modification made to the text generation system was to replace the morphologlcal module wlth a morpho-phonetic module that proceeds to both inflexlon and speIllng-to-sound conversion. With thls modification, the syntactic component produces a tree whose leaves are phonetic words.</Paragraph>
<Paragraph position="15"> 2.2. Inflexlon and phonetic conversion A French morpho-phonetlc system has been built to compute an Inflected phonetic form given an orthographic basic word and Inflexlonal features (Laporte 1986). This system uses an intermediate phonological representation devised to optimize not only word Inflexion and phonetic conversion but also liaison processing. The system works In the following way: given a basic orthographic form (e.g. heureux), its syntactic category and Inflexlonal features (e.g. adjective, feminine, singular), a phonological dictionary works out its phonological representation (e.g. ~r~z). The word is then inflected (e.g. ~r~z) by means of a set of rules. These rules for phonologlcal Inflexlon are much simpler than those that would be required for Inflecting orthographic or phonetic words. By way of Illustration, the feminine of the following adjectlves: z)on, grand, gros, Igger, pet/t, pr/s, sot, vu can be obtained from their phonological representatlon wlth only I rule, whereas 3 would be required when starting from their orthographic representation and 8 from their phonetic representation (Laporte 1984). The shift from phonological words to phonetic words entails knowing where liaisons should take place. Recall that a llalson takes place when both syntactic and phonological conditions are satisfied. In the semantlc-representatlon-to-speech system, the syntactlc tree of the sentence allows us to place liaison markers at the points where a liaison is syntactically allowed. The conversion of phonological words Into phonetic words Is then performed by a set of straight-forward rules that check the phonologlcal conditions of liaisons at the points wher'e a lialson marker Is present. Laporte's system Is represented In Fig. I.</Paragraph>
<Paragraph position="16"> From the text template (2), the syntactic component with the morpho-phonetic module outputs the following tree:  All the segmental phenomena have been taken into account and the next operation consists In entering prosodic markers in such a tree.</Paragraph>
<Paragraph position="17"> 213, The prosodic component 2 Our prosodic system is based on syntax. However, there is not an isomorphic relation between the syntax and the prosody of a sentence. For example, the syntactic structures of Jean est part/a Paris (John went to Paris) and //estpartia Parts (He went to Paris) are nearly identical, whereas there is a prosodic marker after the noun Jean and none after the pronoun il Conversely, the syntactic representations of Jean a parle de ce prob/eme ~ Marie (John spoke about this problem to Mary) et Jean a parle de ce probl~me ~ Paris (John spoke about this problem in Paris) are different although their prosodic markers are identical. As a consequence, we had to build a complete syntactlco-prosodic grammar for French ~. This grammar enables us to obtain a structure of a sentence that is Isomorphic to its prosodic structure and computable from its syn- null tactic structure. A syntactico-prosodic category corresponds null - either to a syntactic category (e.g. the syntactlco-prosodic category S is equivalent to the syntactic category S), - or to a sequence of syntactic categories (e.g. the prosodic category POV \[post-verbal phrase\] groups together all the complements which appear after the 2. This work w~ supported by CNET under contract no. 857B068 with LADL 3. This solution was also considered by Martin (1979).  verbal syntagm \[VS\], and the prosodic category PRV \[pre-verbal phrase\] groups all the complements which appear before the VS), - or to several syntactic categories (e.g. the prosodic category VC \[verbal complement\] corresponds to the following syntactic categories: SUBJECT, OBJECT, A-OBJECT and ATTRIBUTE).</Paragraph>
<Paragraph position="18"> The first operation performed In the prosodic component thus consists in transforming the syntactic tree produced by the syntactic component into a syntactico-prosodic tree. From (3), this operation produces the following tree, in which the leaves are written in spelling representation for readability:  Besides the syntactico-prosodic grammar, a function SEG-C has been designed for each syntactlco-prosodic category C. Such a function takes two arguments: a constituent IX\] of the category C and the prosodic marker x that Is to appear to the right of \[X\]. It computes the prosodic markers that have to be entered In \[X\]. More precisely, If the syntactlco-prosodic analysis of IX\] Is: \[x\] = (Ix 1\] \[x d ... \[xn\]) then: (SEG-C \[X\] x) = (\[X 1\] x 1 \[X 2\] x 2 .. \[Xn_ 1\] xn_ I \[X n\] x) where x 1, x2, ... Xn_ 1 are the appropriate markers. As an Illustration, the grammar lays down that \[CL\] = (CL \[CONJ\]I \[PRV\]I \[V5\] \[POV\]I) where the sign &amp;quot;r' following an element means that the element ls either absent or present once. The function  (SEG-CL \[CL\] x) indicates that - when \[PRV\] is present, a marker f(x) must be entered after it; - when \[POV\] is present, a marker g(x) must be entered after \[VS\]; - in any case, x is after the last constituent, i.e. \[POV\] when present, \[VS\] otherwise.</Paragraph>
<Paragraph position="19">  The algorithm for entering the markers works in a recursive manner by means of a function SEG. Given a constituent \[X\] and the marker x that is to appear to the right of IX\], this function figures out the category C of \[X\] and calls (SEG-C \[X\] x). Next, the functions (SEG-C1 \[X~\] xl), (SEG-C 2 \[X 2\] x 2) .... (SEG-C n \[X n\] x) are called. For example, after (SEG-CL \[CL\] x) has been called, the entering of the markers into \[PRV\] when present is executed by (SEG \[PRV\] f(x)) = (SEG-PRV (PRV\] f(x)).</Paragraph>
<Paragraph position="20"> When \[POV\] is present, the functions (SEG \[VS\] g(x)) and (SEG \[POV\] x) are called, otherwise the function (SEG \[VS\] x) is called. The function 5EG is first applied to the root of the arborescent syntactico-prosodic structure of the sentence involved and to its final punctuation mark (&amp;quot;.&amp;quot; &amp;quot;,&amp;quot; &amp;quot;?&amp;quot; &amp;quot;;&amp;quot; &amp;quot;:&amp;quot;) which corresponds to a prosodic marker. When the recurslon Is over, the auxiliary vocabulary is erased, leaving a phonetic chain wlth prosodic markers. As an example, the function SEG applied to (4) leads to the following result:  The phonetic chain with prosodic markers produced by the system are forwarded to the speech synthesizer developed at CNET (Courbon &amp; Emerard 1982). The chart in Fig. 2 depicts the whole algorithm for generatlng spoken messages from semantic representations. An implementation of the system has been developed in COMMON-LISP in the domain of terrorism crime newspaper reports. It produces phonetic chains wlth prosodic markers such as the ones shown below.</Paragraph>
<Paragraph position="21"> Again, orthographic word5 replace phonetic symbols for readability. The syntactic conditioning of liaisons is  marked wlth the sign \[-\],We present three syntactically different versions of the same terrorism crime to emphasize the robustness of the syntactic component and the entering of appropriate prosodic markers according to syntax.</Paragraph>
<Paragraph position="22"> Version I. Ind/ra Gandhi'\[ #\] a 6t6 assasslnGe \[$\] mercredi ~ New-Dehli \[.\] Des \[-\] extrGmlstes sikhs \[=\] ont t#'6 \[@\] sur \[-\] le premier ministre indlen \[,\] a/ors que \[-\] elle \[-\] partait \[$\] de \[-\] son domicile \[=\] ~pied\[*\] pour se rendre \[$\] ~ \[-\] son bureau \[.\] (Indira Gandhi was assassinated Wednesday in New-Dehli. Sikh extremists shot the Indian Prime Minister as she was leaving her home on foot to go to her office.) Version 2. Des \[-\] extrGmistes slkhs \[#\] ont assassin6 \[@\] Indira Gandhi \[*\] mercred! ~ New-DehN \[.\] lls \[-\] ont tI~'6 \[@\] sur \[-\] le premier mlnistre indien \[,\] a/ors que \[-\] elle \[-\] parfait \[$\] de \[-\] son domicile \[=\] apied \[*\] pour se rendre \[$\] a \[-\] son bureau \[.\] (Sikh extremists assassinated Indira Gandhi Wednesday in New-Dehli. They shot the Indian Prime Minister as she was leaving her home on foot to go to her office.) Version 3. Mercredi a New-DehN \[,\] des \[-\] extrGmistes sikhs \[=\] Grit assass/n~ \[@\] Indira Gandhi \[,\] en tirant \[@\] sur \[-\] le premier m/nistre indien \[*\] a/ors que \[-\] elle \[-\] partait \[$\] de \[-\] son domicile \[=\] a pied \[*\] pour se rendre \[$\] ~ \[-\] son bureau \[.\] (Wednesday in New-Dehli, Slkh extremists assassinated Indira Gandhi by shooting the Indian Prime Minister as she was leaving her home on foot to go to her office.) Conclusion The semantic-representation-to-speech system developed in COMMON-LISP produces a spoken message of about 35 words in less than 1 second.</Paragraph>
<Paragraph position="23"> In our system, only the strategic component is domain dependent. The lexicon and discourse structures used to build the text templates are domain dependent linguistic data. The rest of the system is domain independent. Let us recapitulate the data and rules integrated in It: - a syntactic component which can apply the French grammar rules whatever the structure of the texts and the syntax of the sentences; - a complete phonological dlctionaryof the 50,000 basic forms of French and a set of rules for obtaining a phonetic text from a phonological text;  - a complete syntactico-prosodic grammar of French and a set of rules that enable us to enter prosodic markers in a sentence whatever the syntax of the sentence; - a speech synthesizer and a synthesis software.</Paragraph>
<Paragraph position="24"> Of course, these data and rules are only valid for French but it must be clear that the same kind of data is required for other languages and that the algorithm should be similar.</Paragraph>
</Section>
</Section>
</Paper>

