<?xml version="1.0" standalone="yes"?>

<Paper uid="C86-1053">
<Title>Conceptual Lexicon Using an Object-Oriented Language</Title>
<Section position="1" start_page="0" end_page="226" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> This paper describes the construction of a lexicon representing abstract concepts.</Paragraph>
<Paragraph position="1"> This lexicon is written by an object-oriented language, CTALK, and forms a dynamic network system controlled by object-oriented mechanisms. The content of the lexicon is constructed using a Japanese dictionary. First, entry words and their definition parts are derived from the dictionary. Second, syntactic and semantic information is analyzed from these parts.</Paragraph>
<Paragraph position="2"> Finally, superconcepts are assigned in the superconcept part in an object, static parts to the slot values, and dynamic operations to the message parts, respectively. One word has one object in a world, but through the superconcept part and slot part this connects to the subconcept of other words and worlds. When relative concepts are accumulated, the result will be a model of human thoughts which have conscious and unconscious parts.</Paragraph>
<Paragraph position="3"> 1.Introduction Semantic relations among words or concepts have been represented as a slot filler definition in the lexicon \[Bobrow 77\]. These relations are usually represented as frame lists in LISP or Prolog. When the representation of a large-scale lexicon is needed, it is difficult to make and maintain the lexicon because the relation of super/subconcepts dramatically increases.</Paragraph>
<Paragraph position="4"> An object-oriented language has a strong inference mechanism. It has already been used for parsing sentences \[Hayes 84, Nishida 84\]. It can also describe the representation of semantic relations more simply than LISP. CTALK is such an object-oriented language and can dynamically handle the network using the concept of a world a group of objects -- and an object.</Paragraph>
<Paragraph position="5"> Now the systematization of semantic relations is made for the words which represent concrete objects. However, the organization of abstract words is difficult because it is not so clear how to obtain and deal with abstract concepts. On the other hand, research is being conducted to computerize or categorize the common dictionary \[Yokoyama 77, Tsurumaru 84\].</Paragraph>
<Paragraph position="6"> This paper describes a trial of systematization and categorization of abstract words. The procedure is as follows: first, the definition parts of abstract words in the dictionary are semantically analyzed, and the semantic relations are derived. Second, an object is established for an abstract word. Third, the super/subeoncepts of these words are assigned to a father-son relation among the objects corresponding to the semantic network. Then the slot definitions are assigned to the object. From these slot values, new objects are made under the relative objects. Finally, the network is constructed from these abstract words.</Paragraph>
<Paragraph position="7"> The network formed by this method is considered to be a model of human consciousness. That is, when a human is reminded of a concept, other concepts relative to it are simultaneously extracted from the memory and stay beneath the main memory. This approach is considered to be an implementation of interactive activation model \[Rumelhart 82\] in abstract concept level.</Paragraph>
<Paragraph position="8"> 2.Object-oriented language CTALK The object oriented language, CTALK, was developed at Universitat Stuttgart \[Hanakata 84\]. In this section, a simple summary of CTALK is described.</Paragraph>
<Paragraph position="9"> The main elements of CTALK are worlds and objects. A world is a set of objects, and some active worlds stay in the main memory. When the number of worlds exceeds the constant defined by the system, the least recent worlds are gradually swapped into the secondary memory. The hierarchy or the network among the objects, that is, the father son relation of the objects is simply set to every object, independent of the world structure.</Paragraph>
<Paragraph position="10"> An object consists of four parts, SUPERC, SONS, SLOTS, and METHODS. SUPERC means the superconcepts, that is, the fathers of the object. SONS, literally, means the sons of the object. Actually, in the input of the object, the names of sons are not specified explicitly. The control of these father-son relations are performed on the bit table.</Paragraph>
<Paragraph position="11"> The use of this bit table enables the fast operation of creating and removing these relations, and also of treating inheritance mechanisms. The inheritance usually works inside a world, and can also be spread to other worlds. The direction of inheritance can be specified by VIEWED AS operator \[Selbmann 85\], with which an object inherits the features of specified father(s).</Paragraph>
<Paragraph position="12"> SLOTS is a static property of an object.</Paragraph>
<Paragraph position="13"> The form of SLOTS is as follows:</Paragraph>
<Paragraph position="15"> The restriction and default value are optional, and slot value must fill the restriction in the same slotname in the antecedent object. If a conflict occurs at value assignment, no value can be assigned when the restriction is violated. When there is no restriction or the restriction is filled, another default-value can be assigned in a descendant object.</Paragraph>
<Paragraph position="16"> METHODS is the message part of the object. Sending the message invokes the operation written in the METHODS part. Of course, logical functions such as ~if deg ,  &amp;quot;then&amp;quot;, and &amp;quot;else&amp;quot;, and numerical functions such as &amp;quot;equal&amp;quot;, &amp;quot;greq&amp;quot; (greater than or equal) can be written in the METHODS part.</Paragraph>
<Paragraph position="17"> User functions can be defined using system functions and other user functions.</Paragraph>
<Paragraph position="18"> 3.Construction of the conceptual network 3.1.Procedure The procedure to make the conceptual network is as follows:  I. The definition part for an abstract word is derived from the corresponding entry word in a dictionary \[Kindaichi 74\], and semantically analyzed.</Paragraph>
<Paragraph position="19"> 2. A new world is made for an entry word. 3. The top level object named TOP is made. This is the control object for message passing and slot handling. The father object of TOP is now CTALK_IN_CTALK (default highest object in the whole world). All objects in the same world are the sons of TOP.</Paragraph>
<Paragraph position="20"> 4. An object corresponding to the entry word is made as a son of TOP.</Paragraph>
<Paragraph position="21"> 5. If the evident superconcept is derived, it is explicitly written in SUPERC part. In the case of an isa relation (a change to another word), the slot value &amp;quot;isa&amp;quot; is filled for the corresponding word. 6. Objects of the words written in the  definition part of the entry words are made in the world of the entry word. These objects have an object with the same name as the father object in another world, that is, a superconcept.</Paragraph>
<Paragraph position="22"> 7. The arc relations relative to the son object are assigned to the slot name, and the slot value is the corresponding word at the other side of the arc.</Paragraph>
<Paragraph position="23"> Finally, one world is formed for one entry word as a &amp;quot;lump&amp;quot; of the concepts. In the following sections, the details of this procedure is described.</Paragraph>
<Paragraph position="24"> 3.2.Making the objects Fig.l (a) shows the top-level object TOP in the world &amp;quot;mokuteki&amp;quot; (object or aim). Its superconcept is now CTALK_IN CTALK, but if two or more conceptual words can be sublated (&amp;quot;aufhebendeg), the integrated concept becomes a new superconcept. The sons are the entry word itself and the objects (words) which are derived from the definition part of the entry word. These form the components in the semantic network. In the slot &amp;quot;mean&amp;quot;, the literal meaning cited from the dictionary is written, and used as a normal search (i.e. consultation) of the dictionary. In order to consult the dictionary, the following message should be sent to CTALK IN CTALK: (CTALK mean mokuteki\].</Paragraph>
<Paragraph position="25"> The operation written in METHODS part in</Paragraph>
<Paragraph position="27"> is invoked. The variable x is connected to &amp;quot;mokuteki&amp;quot;, and the literal meaning is output. &amp;quot;* do:&amp;quot; is a PROGN-Iike function in LISP, and the return value is the evaluation of the last part of the following functions.</Paragraph>
<Paragraph position="28"> &amp;quot;Chw:&amp;quot; is a system function changing a world, and &amp;quot;gv:&amp;quot; takes a slot-value.</Paragraph>
</Section>
</Paper>

