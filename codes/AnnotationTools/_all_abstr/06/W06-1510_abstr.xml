<?xml version="1.0" standalone="yes"?>

<Paper uid="W06-1510">
<Title>Quantifier Scope in German: An MCTAG Analysis</Title>
<Section position="2" start_page="0" end_page="74" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> Relative quantifier scope in German depends, in contrast to English, very much on word order. The scope possibilities of a quantifier are determined by its surface position, its base position and the type of the quantifier. In this paper we propose a multicomponent analysis for German quantifiers computing the scope of the quantifier, in particular its minimal nuclear scope, depending on the syntactic configuration it  occurs in.</Paragraph>
<Paragraph position="1"> 1 Introduction: The data (1) A man loves every woman.</Paragraph>
<Paragraph position="2"> [?] &gt; [?], [?] &gt; [?]  In English, in sentences with several quantificational NPs, in principle all scope orders are possible independent from word order. (1) for example has two readings, the [?] &gt; [?] reading and the inverse scope [?] &gt; [?] reading. This is different in German where word order is crucial for scope possibilities. null (2) a. Viele Manner haben mindestens eine many mennom have at least one Frau hofiert.</Paragraph>
<Paragraph position="3"> womanacc flattered.</Paragraph>
<Paragraph position="4"> 'Many men have flattered at least one woman.' viele &gt; eine, [?]eine &gt; viele b. Mindestens eine Frau haben viele at least one womanacc have many Manner hofiert.</Paragraph>
<Paragraph position="5"> mennom flattered.</Paragraph>
<Paragraph position="6"> 'Many men have flattered at least one woman.' viele &gt; eine, eine &gt; viele In German, for quantifiers in base order, the surface order determines scope.1 (2a) has only the scope order viele &gt; eine corresponding to surface order, that is, the inverse order eine &gt; viele is not available. In contrast to this, if the word order differs from the base order, ambiguities are possible. (2b) for example displays both scope orders, viele &gt; eine and eine &gt; viele.</Paragraph>
<Paragraph position="7"> In the literature, the following generalizations have been noticed for German: For two quantifiers Q1, Q2 with Q1 preceding Q2 in the surface order of a sentence, the scope order Q1 &gt; Q2 is always possible. Furthermore, the inverse reading Q2 &gt; Q1 is possible if (Q1) Q1 has been moved so that Q2 c-commands the trace of Q1 ((Frey, 1993)), and (Q2) Q1 is a weak quantifier (e.g., irgendein 'some', viele 'many', cardinals) ((Lechner, 1998)).</Paragraph>
<Paragraph position="8"> Evidence for (Q2) -and further evidence for (Q1)- are the examples in (3)-(4). In (3), the (a)example is in base order and thus has only surface scope, but moving the weak quantifier over the dative quantifier in the (b)-version results in scope ambiguity. This contrasts with (4). In (4), the (a)version with base order has only surface scope, as before. But now we move the strong quantifier over the dative quantifier, and this does not yield ambiguity. That is, even though the dative quantifier c-commands the trace of the moved quantifier both in (3b) and in (4b), only when the moved 1Throughout the paper we assume an unmarked intonation. With a different intonation, other scope orders become available because of the change in information structure. But this lies outside the scope of this paper.</Paragraph>
<Paragraph position="9"> The base order depends on the verb; in most cases it is Sub-ject - (Indirect Object) - Direct Object.  element is a weak quantifier do we obtain scope ambiguity.</Paragraph>
<Paragraph position="10"> (3) a. ... dass er [fast jedem Verlag] ... that he almost every publisher [mindestens ein Gedicht] anbot.</Paragraph>
<Paragraph position="11"> at least one poem proposed_to.</Paragraph>
<Paragraph position="12"> '... that he proposed some poem to almost every publisher.' jedem &gt; ein, [?]ein &gt; jedem b. ... dass er [mindestens ein Gedicht]1 ... that he some poem [fast jedem Verlag] t1 anbot.</Paragraph>
<Paragraph position="13"> almost every publisher proposed_to.</Paragraph>
<Paragraph position="14"> jedem &gt; ein, ein &gt; jedem (4) a. ... dass er [mindestens einem Verleger]  ... that he at least one publisher [fast jedes Gedicht] anbot.</Paragraph>
<Paragraph position="15"> almost every poem proposed_to '... that he proposed almost every poem to at least one publisher.' jedes &gt; einem, [?]einem &gt; jedes b. ... dass er [fast jedes Gedicht]1 ... that he almost every poem [mindestens einem Verleger] t1 at least one publisher anbot.</Paragraph>
<Paragraph position="16"> proposed_to.</Paragraph>
<Paragraph position="17"> jedes &gt; einem, [?]einem &gt; jedes (Kiss, 2000) claims that if two quantifiers have been moved such that among themselves they remain in base order, inverse scope is not possible between them. Because of this, he argues for a non-movement-based theory of German quantifier scope. However, Kiss' claim is not true as can be seen with the example (5) from (Frey, 1993): (5) a. weil der freundliche Museumsdirektor because the friendly curatornom [mindestens einer Frau]1 at least one womandat [fast jedes Gemalde]2 gezeigt hat almost every paintingacc has shown 'because the friendly curator has shown almost every painting to at least one woman'</Paragraph>
<Paragraph position="19"> b. weil [mindestens einer Frau]1 [fast jedes</Paragraph>
<Paragraph position="21"> In both cases, (5a) and (5b), the two quantifiers are in base order. According to Kiss there should be, contrary to fact, no ambiguity in (5b).</Paragraph>
<Paragraph position="22"> The difference between the two is that in (5a) the quantifiers are in base position while in (5b) both of them have been scrambled with the result that Q2 c-commands the trace of Q1. We assume with (Frey, 1993) that this is why the inverse scope order becomes available.</Paragraph>
<Paragraph position="23"> We therefore stick to the above-mentioned generalizations (Q1) and (Q2) and try to capture them in our LTAG analysis. This means that, in order to capture (Q1), we need a syntactic analysis of German NPs that takes into account movement and base positions.</Paragraph>
<Paragraph position="24"> 2 English quantifier scope in LTAG We use the LTAG semantics framework from (Kallmeyer and Romero, 2004; Kallmeyer and Romero, 2005). Semantic computation is done on the derivation tree. Each elementary tree is linked to a semantic representation (a set of Ty2 formulas and scope constraints). Ty2 formulas (Gallin, 1975) are typed l-terms with individuals and situations as basic types. The scope constraints of the form x [?] y specify subordination relations between Ty2 expressions. In other words, x [?] y indicates that y is a component of x.</Paragraph>
<Paragraph position="25"> A semantic representation is equipped with a semantic feature structure description. Semantic computation consists of certain feature value identifications between mother and daughter nodes in the derivation tree. The feature structure descriptions do not encode the semantic expressions one is interested in. They only encode their contributions to functional applications by restricting the argument slots of certain predicates in the semantic representations: They state which elements are contributed as possible arguments for other semantic expressions and which arguments need to be filled. They thereby simulate lambda abstraction and functional application. A sample feature for this simulation of functional application is the feature I that serves to pass the individual contributed by an NP to the predicate taking it as an argument. Besides this functional application aspects, the feature structure descriptions also contain features that determine the scope semantics, i.e., features specifying boundaries for the scope of different operators. Sample features for scope are MINS and MAXS encoding the minimal and  maximal scope of attaching quantifiers.</Paragraph>
<Paragraph position="26"> Features can be global (feature GLOBAL, here abbreviated with GL) or they can be linked to specific node positions (features S, VP, . . . ). The latter are divided into top (T) and bottom (B) features.</Paragraph>
<Paragraph position="27"> The equations of top and bottom features linked to specific node positions in the elementary trees are parallel to the syntactic unifications in FTAG (Vijay-Shanker and Joshi, 1988). The global features that are not linked to specific nodes can be passed from mothers to daughters and vice versa in the derivation tree.</Paragraph>
<Paragraph position="28"> (6) Everybody laughs.</Paragraph>
<Paragraph position="29"> As a sample derivation let us sketch the analysis of quantificational NPs in English from (Kallmeyer, 2005). Fig. 1 shows the LTAG analysis of (6). More precisely, it shows the derivation tree with the semantic representations and feature structure descriptions of laughs and everybody as node labels. The feature identifications are depicted by dotted lines. The semantic representation of the NP everybody contains the generalized quantifier every that binds the variable x and that has a restrictive scope 4 and a nuclear scope 5. Furthermore, it contains the proposition person(x) that must be part of the restrictive scope (constraint 4 [?] l3). Concerning functional application, the NP provides the individual variable x in the global feature I as a possible argument for the verb predicate laugh.</Paragraph>
<Paragraph position="30">  Quantificational NPs in English can in principle scope freely; an analysis of quantifier scope must guarantee only two things: 1. the proposition corresponding to the predicate to which a quantifier attaches must be in its nuclear scope, and 2. a quantifier cannot scope higher than the first finite clause. (Kallmeyer and Romero, 2005) model this by defining a scope window delimited by some maximal scope (global feature MAXS and some minimal scope (global feature MINS) for a quantifier. In Fig. 1, the nuclear scope 5 of the quantifier is delimited by the maximal and minimal scope boundaries provided by the verb the quantifier attaches to (constraints 6 [?] 5, 5 [?] 7 ). The feature identifications in Fig. 1 lead then to the constraints 2 [?] 5, 5 [?] l1.</Paragraph>
<Paragraph position="31"> Applying the assignments following from the feature identifications and building the union of the semantic representations leads to the under-specified representation (7):</Paragraph>
<Paragraph position="33"> tics every(x,person(x),laugh(x)).</Paragraph>
</Section>
</Paper>

