<?xml version="1.0" standalone="yes"?>

<Paper uid="W99-0803">
<Title>Autosegmental Phonology in Pronunciation</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> We introduce a notion of training methodology space (TM space) for specifying training methodologies in tile different disciplines and teaching traditions associated with computational linguistics and the human language technologies, and pin our approach to the concept of operational model; we also discuss different general levels of interactivity. A number of operational models are introduced, with web interfaces for lexical databases, DFSA matrices, finite-state phonotactics development, and  tistical classification.</Paragraph>
<Paragraph position="1"> Correspondingly, teachers' expectations and teaching styles vary widely, and, likewise, students' expectations and accustomed styles of learning are very varied. Teaching methods and philosophies fluctuate, too, between more behaviouristic styles which are more characteristic of practical subjects, and the more rationalistic styles of traditional mathematics training; none, needless to say, covers the special needs of all subjects.</Paragraph>
<Paragraph position="2"> Without specifying the dimensions in detail, let us call this complex field training method space (TM space). The term training is chosen because it is neutral between teaching and learning, and implies the intensive acquisition of both theoretical and practical abilities. Let us assume, based on the variations outlined above, that we will need to navigate this space in sophisticated ways, but as easily as possible. What could be at the centre of TM space? As the centre of TM space, let us postulate a model-based training method, with the following properties:  stod by different users from several different perspectives: from the point of view of the mathematician, the programmer, the software user etc., like 'real life programmes'. null 4. Typical lingware and software models are grammars, lexica, annotated corpora, operationalised procedures, parsers, compilers; more traditional models are graphs, slides, blackboards, three-dimensional block or ball constructions, calculators.</Paragraph>
<Paragraph position="3"> Why should operational models, in the sense outlined here, be at the centre of TMi null space? There are several facets to the answer: First, the use of operational models permits practice without succumbing to the naiveti@s of stimulus-response models. Second, this notion of model is integrative, that is, they are on the one hand mathematical, in that they are structures which are involved in the interpretation of theories, and at the same time they are empirical, in representing chunks of the world, and operational, in that they map temporal sequences of states on to real time sequences. But, third, working with operational models is more fun. Ask our kids. This paper describes and motivates a range of such models: fbr arithmetic, for manipulating databases, for experimenting with finite state devices, for writing phonological (or, analogously, orthographic) descriptions, for developing sophisticated inheritance lexica. null</Paragraph>
</Section>
</Paper>

