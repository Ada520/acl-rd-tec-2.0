<?xml version="1.0" standalone="yes"?>

<Paper uid="J99-4001">
<Title>Ritchie Completeness Conditions for Mixed Strategy Bidirectional Parsing Consider the annotated grammar (see Section 3 for a definition of grammar): S ~ NP VP NP --* Art N VP ~ runs</Title>
<Section position="2" start_page="0" end_page="0" type="abstr">
<SectionTitle>
1. Overview
</SectionTitle>
<Paragraph position="0"> Many methods have been explored for parsing context-free grammars; some of these methods are loosely categorized as &amp;quot;top-down&amp;quot; (e.g., recursive descent), some as &amp;quot;bottom-up&amp;quot; (e.g., shift-reduce), and some could be seen as a mixture of these two varieties (e.g., left-corner). All of the well-explored methods assume that the rules in the grammar are handled in a fairly uniform way. In particular, it is not usual for the rules to be separated into two classes--those to be used bottom-up and those to be used top-down. Steel and de Roeck (1987) argue (giving credit to Henry Thompson for some of the ideas) that the performance of a parser could be improved by allowing the grammar writer to do exactly this. The motivation comes from linguistic phenomena where it is intuitively clear that one symbol (linguistic category) in the rule is noticeably more distinctive than others, so that a parser should not waste time trying to match the rule unless that distinctive element is there. For example, a rule such as NP --* NP CONJ NP (where CONJ indicates a conjunction, such as and) should not be invoked simply because a noun phrase (NP), or the start of a noun phrase, has been found. The proposal is that if the linguist is allowed to mark the CONJ element as a &amp;quot;trigger,&amp;quot; and the parser introduces the rule, bottom-up, only if the trigger has been matched, then parsing would proceed more efficiently.</Paragraph>
<Paragraph position="1"> Steel and de Roeck describe semi-formally a system they have implemented, which they claim benefits from this labeling of rules. The current paper does not take a position on the wisdom or effectiveness of such labeling. Instead, we explore the * Division of Informatics, 80 South Bridge, Edinburgh EH1 1HN, Scotland.</Paragraph>
<Paragraph position="2"> (~) 1999 Association for Computational Linguistics Computational Linguistics Volume 25, Number 4 formal consequences of this proposal. We show that, although the idea may seem superficially plausible, it still has certain formal limitations in the area of completeness and decidability. The proofs may be of some theoretical interest from a formal language viewpoint.</Paragraph>
<Paragraph position="3"> The central ideas are as follows: A conventional context-free grammar is &amp;quot;annotated&amp;quot; by marking at least one symbol in each rule as a trigger. Marking the left-hand-side (LHS) symbol as a trigger indicates that the rule can be used top-down; marking a right-hand-side (RHS) symbol as a trigger means that the rule can be used bottom-up whenever a constituent labeled with that symbol is found by the parser. 1 Using a method of parsing known as active chart parsing, it is straightforward to give a precise meaning to this labeling of rules, since a chart parser can operate either bottom-up or top-down. The scheme examined here is similar to, but different in important ways from, head-driven parsing (see Section 7.2).</Paragraph>
<Paragraph position="4"> It is simple to construct an annotated grammar in which there are some analyses that are valid according to the original (unannotated) grammar but that would not be parsed by a chart parser following the annotations. This establishes that not all annotated grammars allow complete parsing.</Paragraph>
<Paragraph position="5"> The main substance of this paper is as follows: A property of annotated grammars (direct analyzability) is defined, which is decidable, and it is proven that any annotated grammar with this property will also allow the parser to produce all the valid analyses licensed by the original grammar. However, some annotated grammars are not directly analyzable, but nevertheless lead to complete parsing. A characteristic of (a subset of) this wider class of annotated grammars (indirect analyzability) is defined, and it is proven that any annotated grammar with this property will allow complete parsing.</Paragraph>
<Paragraph position="6"> However, indirect analyzability can be shown to be undecidable.</Paragraph>
</Section>
</Paper>

