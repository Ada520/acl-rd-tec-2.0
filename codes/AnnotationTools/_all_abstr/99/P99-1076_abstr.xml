<?xml version="1.0" standalone="yes"?>

<Paper uid="P99-1076">
<Title>Parsing preferences with Lexicalized Tree Adjoining Grammars : exploiting the derivation tree</Title>
<Section position="1" start_page="0" end_page="588" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> Since Kimball (73) parsing preference principles such as &amp;quot;Right association&amp;quot; (RA) and &amp;quot;Minimal attachment&amp;quot; (MA) are often formulated with respect to constituent trees. We present 3 preference principles based on &amp;quot;derivation trees&amp;quot; within the framework of LTAGs. We argue they remedy some shortcomings of the former approaches and account for widely accepted heuristics (e.g.</Paragraph>
<Paragraph position="1"> argument/modifier, idioms...).</Paragraph>
<Paragraph position="2"> Introduction The inherent characteristics of LTAGs (i.e. lexicalization, adjunction, an extended domain of locality and &amp;quot;mildly-context sensitive&amp;quot; power) makes it attractive to Natural Language Processing : LTAGs are parsable in polynomial time and allow an elegant and psycholinguistically plausible representation of natural language 1. Large coverage grammars were developed for English (Xtag group (95)) and French (Abeille (91)). Unfortunately, &amp;quot;large&amp;quot; grammars yield high ambiguity rates : Doran &amp; al. (94) report 7.46 parses / sentence on a WSJ corpus of 18730 sentences using a wide coverage English grammar. Srinivas &amp; al. (95) formulate domain independent heuristics to rank parses.</Paragraph>
<Paragraph position="3"> But this approach is practical, English-oriented, not explicitly linked to psycholinguistic results, and does not fully exploit &amp;quot;derivation&amp;quot; i e.g. Frank (92) discusses the psycholinguistic relevance of adjunction for Children Language Acquisition, Joshi (90) discusses psycholinguistic results on crossed and serial dependencies.</Paragraph>
<Paragraph position="4"> information. In this paper, we present 3 disambiguation principles which exploit derivation trees.</Paragraph>
<Paragraph position="5"> 1, Brief presentation of LTAGs A LTAG consists of a finite set of elementary trees of finite depth. Each elementary tree must &lt;&lt;anchor&gt;&gt; one or more lexical item(s). The principal anchor is called daead&gt;&gt;, other anchors are called &lt;&lt;co-heads&gt;&gt;. All leaves in elementary trees are either &lt;&lt;anchor&gt;&gt;, &lt;&lt;foot node&gt;&gt; (noted *) or &lt;&lt;substitution node&gt;&gt; (noted $). These trees are of 2 types * auxiliary or initial 2. A tree has at most 1 foot-node, such a tree is an auxiliary tree. Trees that are not auxiliary are initial. Elementary trees combine with 2 operations : substitution and adjunetion. Substitution is compulsory and is used essentially for arguments (subject, verb and noun complements). It consists in replacing in a tree (elementary or not) a node marked for substitution with an initial tree that has a root of same category. Adjunction is optional (although it can be forbidden or made compulsory using specific constraints) and deals essentially with determiners, modifiers, auxiliaries, modals, raising verbs (e.g. seem). It consists in inserting in a tree in place of a node X an auxiliary tree with a root of same category. The descendants of X then become the descendants of the foot node of the auxiliary tree. Contrary to context-free rewriting rules, the history of derivation must be made explicit since the same derived tree can be obtained using different derivations. This is why parsing LTAGs yields a derivation tree, from 2 Traditionally initial trees are called o~, and auxiliary trees 13  which a derived tree (i.e. constituent tree) can be obtained. (Figure 1) 3 . Branches in a derivation tree are unordered.</Paragraph>
<Paragraph position="6"> Moreover, linguistic constraints on the well-formedness of elementary trees have been  formulated : * Predicate Argument Cooccurence Principle : there must be a leaf node for each realized argument of the head of an elementary tree.</Paragraph>
<Paragraph position="7"> * Semantic consistency : No elementary tree is semantically void * Semantic minimality : an elementary tree corresponds at most to one semantic unit 2. Former results on parsing preferences  A vast literature addresses parsing preferences. Structural approaches introduced 2 principles : RA accounts for the preferred reading of the ambiguous sentence (a) : &amp;quot;yesterday&amp;quot; attaches to &amp;quot;left&amp;quot; and not to &amp;quot;said&amp;quot; (Kimball (73)). MA accounts for the preferred reading of (b) :  &amp;quot;for Sue&amp;quot; attaches to &amp;quot;bought&amp;quot; and not to &amp;quot;flowers&amp;quot; (Frazier &amp; Fodor (78)) (a) Tom said that Joe left yesterday (b) Tom bought the flowers for Sue  These structural principles have been criticized though : Among other things, the interaction between these principles is unclear. This type of approach lacks provision for integration with semantics and/or pragmatics (Schubert (84)), does not clearly establish the distinction between arguments and modifiers (Ferreira &amp; Clifton (86)) and is English-biased : evidence against RA has been found for Spanish (Cuetos &amp; Mitchell (88)) and Dutch (Brysbaert &amp; Mitchell (96)).</Paragraph>
<Paragraph position="8"> Some parsing preferences are widely accepted, though: The idiomatic interpretation of a sentence is favored over its literal interpretation (Gibbs &amp; Nayak (89)).</Paragraph>
<Paragraph position="9"> Arguments are preferred over modifiers (Abney (89), Britt &amp; al. (92)).</Paragraph>
<Paragraph position="10"> Additionally, lexical factors (e.g. frequency of subcategorization for a given verb) have been shown to influence parsing preferences (I-Iindle &amp; Rooth (93)).</Paragraph>
<Paragraph position="11"> It is striking that these three most consensual types of syntactic preferences tum out to be difficult to formalize by resorting only to &amp;quot;constituent trees&amp;quot; , but easy to formalize in terms of LTAGs.</Paragraph>
<Paragraph position="12"> Before explaining our approach, we must underline that the examples 4 presented later on are not necessarily counter-examples to RA and or MA, but just illustrations : our goal is not to further criticize RA and MA, but to show that problems linked to these &amp;quot;traditional&amp;quot; structural approaches do not automatically condemn all structural approaches.</Paragraph>
<Paragraph position="13"> 3 Three preference principles based on derivation trees For sake of brevity, we will not develop the importance of &amp;quot;lexical factors&amp;quot;, but just note that LTAGs are obviously well suited to represent that type of preferences because of strong lexicalization 5.</Paragraph>
<Paragraph position="14"> To account for the &amp;quot;idiomatic&amp;quot; vs &amp;quot;literal&amp;quot;, and for the &amp;quot;argument&amp;quot; vs &amp;quot;modifier&amp;quot; preferences, we formulate three parsing preference principles based on the shape of derivation trees :  1. Prefer the derivation tree with the fewer number of nodes 2. Prefer to attach an m-tree low 6 3. Prefer the derivation tree with the fewer number of 13-tree nodes  Principle 1 takes precedence over principle 2 and principle 2 takes precedence over principle 3. 3 Our examples follow linguistic analyses presented in (Abeill6 (91)), except that we substitute sentential complements when no extraction occurs. Thus we use no VP node and no Wh nor NP traces. But this has no incidence on the application of our preference principles.</Paragraph>
<Paragraph position="15"> 4 These examples are kept simple on purpose, for sake of clarity.</Paragraph>
<Paragraph position="16"> Also, &amp;quot;lexical preferences&amp;quot; and &amp;quot;structural preferences&amp;quot; are not necessarily antagonistic and can both be used for practical purpose.</Paragraph>
<Section position="1" start_page="586" end_page="587" type="sub_section">
<SectionTitle>
3.1 What these principles account for
</SectionTitle>
<Paragraph position="0"> Principle 1 accounts for the preference &amp;quot;idiomatic&amp;quot; over &amp;quot;literal&amp;quot;: In LTAGs, all the set elements of an idiomatic expression are present m a single elementary tree. Figure 1 shows the 2 derivation trees obtained when parsing &amp;quot;Yesterday John kicked the bucket&amp;quot;. The preferred one (i.e. idiomatic interpretation) has fewer nodes.</Paragraph>
<Paragraph position="1"> lSf_yesterday (z_John (z.bucket 13.the ~'~X\  for French (Abeill6 &amp; Candito (99)). We kept the1074 grammatical ones (i.e. noted &amp;quot;1&amp;quot; in the TSNLP terminology) of category S or augmented to S (excluding coordination ) that were accepted. A human picked one or more &amp;quot;correct&amp;quot; derivations for each sentence parsed 8. Principle 1, and then Principles 1 &amp; 2 were applied on the derivation trees to eliminate some derivations.</Paragraph>
<Paragraph position="2"> Table 1 shows the results obtained.</Paragraph>
</Section>
<Section position="2" start_page="587" end_page="588" type="sub_section">
<SectionTitle>
4.1 Comments on the results
</SectionTitle>
<Paragraph position="0"> ARer disambiguating with principles 1 and 2, the proportion of sentences with at least one parse judged correct by a human only marginally decreased while the average number of parses per s More than one derivation was deemed &amp;quot;correct&amp;quot; when non spurious ambiguity remained in modifier attachment (e.g. He saw the man with a telescope) sentence went down from 2.85 to 2.17 (i.e. -24 %).</Paragraph>
<Paragraph position="1"> Since &amp;quot;strict modifier attachment&amp;quot; is orthogonal to our concem, a sentence such as (f) still yields 5 derivations, partly because of spurious ambiguity, partly because of adverbial attachment (i.e. 'qaier&amp;quot; attached to S or to V). 1l a travailld hier (He worked yesterday) Therefore most sentences aren~ disambiguated by principles 1 or 2, especially those anchoring an intransitive verb. For sentences that are affected by at least one of these two principles, the average number of parses per sentence goes down from 6.76 to 2.94 after applying both principles (i.e. - 56.5 %). (Table 2).</Paragraph>
<Paragraph position="2">  Surprisingly, Principle 1 was used in only one case to prefer an idiomatic interpretation, but proved very useful in preferring arguments over modifiers : derivation trees with arguments often have fewer nodes because of co-heads. For instance it systematically favored the attachment of &amp;quot;by&amp;quot; phrases as passive with agent, Principle 2 favored lower attachment of arguments as in (g) but proved useful only in conjunction with Principle 1 : it provided further disambiguation by selecting derivation trees among those with an equally low number of nodes.</Paragraph>
<Paragraph position="3">  Principle 2 says to attach an argument low (e.g. to the direct object of the mare verb) rather than high (e.g. to the verb). In (el), &amp;quot;of the demonstration&amp;quot; attaches to &amp;quot;organizer&amp;quot; rather than to &amp;quot;suspect&amp;quot;, while m (c2) &amp;quot;of the crime&amp;quot; can only attach to the verb. Figure 2 shows how principle 2 yields the preferred derivation tree for sentence (cl). Similarly, in sentence (dl) &amp;quot;to whom&amp;quot; attaches to &amp;quot;say&amp;quot; rather than to &amp;quot;give&amp;quot;, while in (d2) it attaches to &amp;quot;give&amp;quot; since &amp;quot;think&amp;quot; can not take a PP complement. This agrees with psycholinguistic results such as &amp;quot;filled gap  effects&amp;quot; (Cram &amp; Fodor (85)).</Paragraph>
<Paragraph position="4"> (cl) John suspects the organizer of the demonstration (c2) John suspects Bill of the crime (dl) To whom does Mary say that John gives flowers.</Paragraph>
<Paragraph position="5"> (d2) To whom does Mary think that John gives flowers.</Paragraph>
<Paragraph position="6">  Principle 3 prefers arguments over modifiers. Figure 3 shows that principle 3 predicts the preferred derivation tree for (e) : &amp;quot;to be honest&amp;quot; argument of &amp;quot;prefer&amp;quot;, ruling out 'to be honest&amp;quot; as sentence modifier (i.e. &amp;quot;To be honest, he prefers his daughter&amp;quot;).</Paragraph>
<Paragraph position="7"> (e) John prefers his daughter to be honest.</Paragraph>
<Paragraph position="8"> These three principles aim at attaching arguments as accurately as possible and do not deal with &amp;quot;strict&amp;quot; modifier attachment for the following reasons : * There is a lack of agreement concerning the validity of preferences principles for &amp;quot;modifier attachment&amp;quot; * Principle 3, which deals the most with modifier attachment, turned out the least conclusive when confronted to empirical data * We wanted to evaluate how attaching arguments correctly affects ambiguity, all other factors remaining unchanged.</Paragraph>
</Section>
</Section>
</Paper>

