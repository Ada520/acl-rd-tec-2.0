<?xml version="1.0" standalone="yes"?>

<Paper uid="C82-2033">
<Title>ON VERBOSITY LEVELS IN COGNITIVE PRO~ SOLVERS</Title>
<Section position="1" start_page="0" end_page="0" type="abstr">
<SectionTitle>
ON VERBOSITY LEVELS IN COGNITIVE PRO~ SOLVERS
</SectionTitle>
<Paragraph position="0"> P. Otrk~ and T. HavrAuek Center of Biomathematics, Czechoslovak Academy of Sciences, 142 20 Prague 4, Vidensk~ 1083, Czechoslovakia The aim of the paper is to discuss several issues that usually occur when computational linguistics comes into interactions with so rapidly growing s~eas of artificial intelligence as it can be seen e.g. in designing expert and consulting systems or in the area of automated programming of knowledge-based problem solving systems. We will mention here problems of communicating knowledge between machine and researcher (a user of a system) which is not an expert in programming techhiquev Since natural lan~a~e is a &amp;quot;natural&amp;quot; form for expresstng knowledge (and most extramathematical knowledge actually exists in this form) it could be seemed that natural language would be also the best support for communicating knowledge through a cognitive process performed on a computer. Is It really so? We want to bring arguments for a rather opposite claim by pointed ou~ several formats for expressing and communtoatin~ scientific knowledge which differs from usual natural language oneso What kinds of data structures for expressing knowledge and for representing it in a computer memory we need? For answering this question we have to disti~p-ish at least two roles of a user in the process of conmmnication with machine.</Paragraph>
<Paragraph position="1"> First of them can be called a speaker t It characterizes the situation in which the user loads knowledge into a machine.</Paragraph>
<Paragraph position="2"> For such a situation there is important that knowledge enter- 142 ing a computer should be precise and exact as much as possible. So the data structures should enable disambtguation of information. Such a requirement leads naturally to hard constraints of input formats. On the other hand, not only for the user convenience, it should be desirable to allow highly free format of input information to avoid any apriori limitations. Thus, the system should be equipped by an effective interpreter transforming various kinds of input information into internal representation suitable for potential reasoning processes. The second role of the user in communication with computer can be called a listener~ This situation is rather different from the first one. Here the user has to understand results of computations and (especially in Oonsulting systems) also various explanations resulting from reasoning processes. These two roles can, of course, infiltrate one into another. Analogous roles can be recognized for a machine, too.</Paragraph>
<Paragraph position="3"> As a teethed for our considerations an AI problem-oriented designed for an automatic data analysis (called GUHA-80) has been chosen. The task of GUHA-80 system is to generate and develop interesting views onto given empirical data (recognize tnterestin~ logical patterns). These views should represent relevant information contained in the data and be useful for formation of hypotheses.</Paragraph>
<Paragraph position="4"> From the point of view of two above mentioned roles of user the following types of information in the GUHA-80 system could be disttn&amp;-tttshed:  1. Information coming into system could contain a) data (observations on objects), b) supporting knowledge (apriort knowledge about the problem in question, answers of questions). 2. Information coming from the system could contain a) trace of computations and reasoning activities, b) results of computations, c) explanations (why such and such operations have been performed), cf. ~CIN.</Paragraph>
<Paragraph position="5"> - 143 - null Let us give a hypothetical example of user's communication with GUHA-80 system: GUHA-80: by a sing~le linkage method using euclidian distance on the set of objects the following dendro~am expressing the similarity between these objects was obtained:</Paragraph>
<Paragraph position="7"> Is the dendogram in accordance with your knowledge? USER: No.</Paragraph>
<Paragraph position="8"> GUHA-80. May I suggest another pattern using different clustering techniques? USER: Yes.</Paragraph>
<Paragraph position="9"> GUHA-SO: Do you prefer some of the following techniques: (a table of relevant techniques follows) It can be easily seen that in such a conversation different levels of understanding language are needed. NL level will be appropriate mainly for user's answers, simple questions etc. But try to express the information oontainqd in the dend~ogram in NL form! Moreover, for oommun~cation process from GUHA-80 to the user it will be typical a ~raphio representation of information (which in many cases is more transparent than ~L one).</Paragraph>
<Paragraph position="10"> Thus the language understanding take place mainly in the case sub lb) i.e. when entering supporting knowledge. But for practical reasons it can be performed in a very simple level as e.g. in very high level programmAng languages. Examples</Paragraph>
<Paragraph position="12"> In each case, such an understandingmuet lead to 1. to the elimination of redundant information and in such a way to the core of a statement! 2. to the possibility to work only with minimal cores of statements.</Paragraph>
<Paragraph position="13"> The reason for a second requirement is that a user experienced with the system tend~to replace syntactic sugar by an appropriate slang to minimize hie effoz~pa/d e.g. to punchin~ or typing statements.</Paragraph>
<Paragraph position="14"> Conclusion, We have distinguished different types of communication of scientific knowledge through a mechanized cognitive process. It leads first to the claim that not only different levels of understanding language but also aifferent levels of verbosity e~e needed. Moreoverp in some c~sesthe ; use of verbal information can be undesirable or even impossible. Horeover, in many cases when understanding lance is ~needed it would be enough to understand only a small relevant fragment of It. -i</Paragraph>
</Section>
</Paper>

