<?xml version="1.0" standalone="yes"?>

<Paper uid="J91-2001">
<Title>Features and Formulae</Title>
<Section position="2" start_page="0" end_page="134" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> Many modern linguistic theories, such as Lexical-Functional Grammar (Bresnan 1982), Functional Unification Grammar (Kay 1985), Generalized Phrase Structure Grammar (Gazdar et al. 1985), Unification Categorial Grammar (Haddock et al. 1987), (Uszkoreit 1986), and Head-Driven Phrase Structure Grammar (Pollard and Sag 1987), replace the atomic categories of a context-free grammar with a &amp;quot;feature structure&amp;quot; that represents the syntactic and semantic properties of the phrase. These feature structures are specified indirectly in terms of constraints that they must satisfy. Lexical entries constrain the feature structures that can be associated with terminal nodes of the syntactic tree, and phrase structure rules simultaneously constrain the feature structures that can be associated with a parent node and its immediate descendants.</Paragraph>
<Paragraph position="1"> That is, lexical entries and syntactic rules used to construct a syntactic phrase structure tree all contribute constraints on the feature structures that appear as the labels on nodes in the syntactic tree. The tree is well formed if and only if all of these constraints are simultaneously satisfiable. Thus for the purposes of recognition a method for determining the satisfiability of such constraints is required; the precise nature of the satisfying feature structures (of which there may be infinitely many) is of secondary importance. 1 A variety of different types of feature structures have been proposed in the literature, but most work on unification-based grammar has centered on a certain type of feature structure known as an attribute-value structure. The elements in an attribute-value structure come in two kinds: constant elements and complex elements. Constant elements are atomic entities with no internal structure: i.e. they have no attributes.</Paragraph>
<Paragraph position="2"> Complex elements have zero or more attributes, whose values may be any other element in the structure, including a complex element. An element can be the value of zero, one or several attributes. Attributes are partial: it need not be the case that every attribute is defined for every complex element.</Paragraph>
<Paragraph position="3"> * Department of Cognitive and Linguistic Sciences, Providence, RI 02912 USA 1 The validity problem is also of interest, since it provides a way of &amp;quot;extracting information&amp;quot; about all of the satisfying feature structures. In the framework developed below, if ~ is a formula representing a system of constraints and ~b --~ 0 is valid, then 0 is a true description of every feature structure satisfying ~b.</Paragraph>
<Paragraph position="4"> (~ 1991 Association for Computational Linguistics Computational Linguistics Volume 17, Number 2 &amp;quot;Mary seems to like John&amp;quot;</Paragraph>
<Paragraph position="6"> Figure 1 An attribute-value structure for Mary seems to like John Example 1 Figure 1 depicts an attribute-value structure. The attribute-value element labeled eo in Figure 1 might be associated with the sentence Mary seems to like John. The attribute-value structure depicted in Figure 1 contains six complex elements eo,..., e5 and eight constant elements seem, like, john, sg, 3rd, mary, none, and pres. The element eo is a complex attribute-value element with four attributes: pred, subj, comp, and tense: the order in which the attributes appear in the diagram is irrelevant. The value of its pred attribute is the constant seem (which abbreviates the relation denoted by the verb seem), and the value of its tense attribute is the constant element pres (which indicates that the clause is in the present tense). The values of the subj and comp attributes are the complex elements e3 and el (which represent the subject and the complement of the verb seem, respectively). The element e3 also appears as the subject of el, indicating that Mary is also the (understood) subject of the verb likes as well. The element el is a complex attribute-value element with four attributes pred, obj, subj, and tense. The value of its pred attribute is the constant element like (which abbreviates the relation denoted by the verb like) and the value of its tense attribute is the constant element none (which indicates that the clause is untensed). The values of the attributes obj and subj of el are the complex elements e2 and e3, respectively (which represent the subject and object of the clause). Both e4 and e5 have the same attributes hum and pets, and the values of these attributes of e4 are identical to the corresponding values of these attributes of e5. Nevertheless, e4 and e5 are distinct elements.</Paragraph>
<Paragraph position="7"> An operation called unification plays an important role in most accounts of feature structures (Kay 1985; Shieber 1986). The unification operation &amp;quot;combines&amp;quot; or &amp;quot;merges&amp;quot; two elements into a single element that agrees with both of the original elements on the values of all of their defined sequences of attributes, so the unification of two complex elements requires the unification of the values of any attributes they have in common. The unification operation fails if it requires the unification of distinct  An example of attribute-value unification constant elements (a constant-constant clash) or the unification of a constant element and a complex element (a constant-complex clash).</Paragraph>
<Paragraph position="8"> Example 2 A grammar might assign the attribute-value structures in Figure 2 to the NP the salmon and the VP swims, respectively. Note that e' does not have a num attribute, since the salmon can be either singular or plural and that e&amp;quot; does not have a pred attribute. The attribute-value structure for the sentence (the) salmon swims is obtained by unifying e' and e', which corresponds to identifying salmon as the subject of swims. The resulting element inherits the value of the pred attribute from e' and the value of the num attribute from e'. The unification of e' and e&amp;quot; requires the unification of f~ and f&amp;quot; as well.</Paragraph>
<Paragraph position="9"> Although it might not be obvious from this simple example, a large number of syntactic constructions from a variety of natural languages can be described in such a unification-based framework (many of the analyses presented in Bresnan 1982 can be expressed in such a &amp;quot;pure&amp;quot; unification-based framework). Nevertheless, it is often convenient and sometimes necessary to extend the basic unification framework to include a wider variety of feature structures.</Paragraph>
<Paragraph position="10"> For example, &amp;quot;negative values&amp;quot; and &amp;quot;disjunctive values&amp;quot; allow grammars and lexical entries to be written much more succinctly, as the following examples show (based on Karttunen 1984).</Paragraph>
<Paragraph position="11">  In German the determiner die must have accusative or nominative case, and agrees with either feminine singular nouns or plural nouns of any gender. In a framework with disjunctive values only one lexical entry for die is required. 2 Example 4 In the basic unification framework described above the tensed verb swim would require multiple lexical entries, since it agrees with first person, second person, and plural third person subjects; i.e., a subject with any agreement features other than third person singular. In a framework with &amp;quot;negative values&amp;quot; it requires only the single lexical entry in Figure 5, where &amp;quot;-~&amp;quot; identifies a &amp;quot;negative value.&amp;quot; As mentioned earlier, other kinds of feature structures besides attribute-value structures have been proposed in the literature. Johnson and Klein (1986) and Johnson and Kay (1990) show how &amp;quot;set-valued&amp;quot; features can be used to express Discourse Representation Theory (Kamp 1981) in a complex-feature based grammar formalism. The highly simplified example below is meant solely to show one way in which set-valued features can be used--no claims are made for its linguistic correctness.</Paragraph>
<Paragraph position="12"> 2 &amp;quot;Disjunctive&amp;quot; features are depicted using angle brackets, since curly brackets are used in this paper to depict &amp;quot;set-valued&amp;quot; features. Below we reinterpret the &amp;quot;disjunctive&amp;quot; and &amp;quot;negative&amp;quot; features depicted in this example and the next as disjunctions and negations of constraints.</Paragraph>
<Paragraph position="13">  Johnson Features and Formulae</Paragraph>
<Paragraph position="15"> Set-values in the lexical entries for she and woman</Paragraph>
<Paragraph position="17"> The result of unifying s' in Figure 6 with the empty set Example 5 A naive theory of anaphoric dependencies between indefinite NPs and anaphoric pronouns can be constructed as follows. Each NP has an index attribute whose value is a &amp;quot;reference marker,&amp;quot; and two NPs are coreferential iff they share the same reference marker. 3 Every feature structure associated with a node in the syntactic tree has attributes refs-in and refs-out, whose values are the sets of discourse entities available preceding and following this node, respectively. The grammar constrains the value of the refs-out attribute of an indefinite NP to be the union of its refs-in attribute and the singleton set containing the value of the NP's index attribute; this adds the NP's index to the set of available indices. Similarly, the grammar requires the values of a pronoun's refs-in and refs-out attributes to be identical, and that its index attribute be a member of the value of its refs-in attribute. This requires that the pronoun refer to an entity previously introduced into the discourse. In a framework with set values the lexical entries for (a) woman and she could be as seen in Figure 6.</Paragraph>
<Paragraph position="18"> Unifying the value s' of the refs-in attribute of the lexical entry for woman with the empty set (which corresponds to the empty discourse context) produces the feature structure depicted in Figure 7.</Paragraph>
<Paragraph position="19"> Further, the unification of the value of the refs-out attribute in Figure 7 with the value of the refs-in attribute of u in Figure 6 (the lexical entry for she), which corresponds to interpreting the pronoun as an anaphor within the context established by the single NP a woman produces the feature structure depicted in Figure 8.</Paragraph>
<Paragraph position="20"> Extending the possible feature structures beyond the basic attribute-value features complicates the basic unification operation, however. For example, Moshier and Rounds (1987) and Pereira (1987) point out that it is not obvious how to extend unification</Paragraph>
</Section>
</Paper>

