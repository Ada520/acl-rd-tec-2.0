<?xml version="1.0" standalone="yes"?>

<Paper uid="J02-3002">
<Title></Title>
<Section position="2" start_page="0" end_page="291" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> Disambiguation of sentence boundaries and normalization of capitalized words, as well as identification of abbreviations, however small in comparison to other tasks of text processing, are of primary importance in the developing of practical text-processing applications. These tasks are usually performed before actual &amp;quot;intelligent&amp;quot; text processing starts, and errors made at this stage are very likely to cause more errors at later stages and are therefore very dangerous.</Paragraph>
<Paragraph position="1"> Disambiguation of capitalized words in mixed-case texts has received little attention in the natural language processing and information retrieval communities, but in fact it plays an important role in many tasks. In mixed-case texts capitalized words usually denote proper names (names of organizations, locations, people, artifacts, etc.), but there are special positions in the text where capitalization is expected. Such mandatory positions include the first word in a sentence, words in titles with all significant words capitalized or table entries, a capitalized word after a colon or open quote, and the first word in a list entry, among others. Capitalized words in these and some other positions present a case of ambiguity: they can stand for proper names, as in White later said ..., or they can be just capitalized common words, as in White elephants are .... The disambiguation of capitalized words in ambiguous positions leads to the identification of proper names (or their derivatives), and in this article we will use these two terms and the term case normalization interchangeably.</Paragraph>
<Paragraph position="2"> Church (1995, p. 294) studied, among other simple text normalization techniques, the effect of case normalization for different words and showed that &amp;quot;sometimes case variants refer to the same thing (hurricane and Hurricane), sometimes they refer to different things (continental and Continental) and sometimes they don't refer to much of anything (e.g., anytime and Anytime).&amp;quot; Obviously these differences arise because some capitalized words stand for proper names (such as Continental, the name of an airline) and some do not.</Paragraph>
<Paragraph position="3"> [?] Institute for Communicating and Collaborative Systems, Division of Informatics, 2 Buccleuch Place, Edinburgh EH8 9LW, UK. E-mail: mikheev@cogsci.ed.ac.uk  Computational Linguistics Volume 28, Number 3 Proper names are the main concern of the named-entity recognition subtask (Chinchor 1998) of information extraction. The main objective of this subtask is the identification of proper names and also their classification into semantic categories (person, organization, location, etc.).</Paragraph>
<Paragraph position="4">  There the disambiguation of the first word in a sentence (and in other ambiguous positions) is one of the central problems: about 20% of named entities occur in ambiguous positions. For instance, the word Black in the sentence-initial position can stand for a person's surname but can also refer to the color. Even in multiword capitalized phrases, the first word can belong to the rest of the phrase or can be just an external modifier. In the sentence Daily, Mason and Partners lost their court case, it is clear that Daily, Mason and Partners is the name of a company. In the sentence Unfortunately, Mason and Partners lost their court case, the name of the company does not include the word Unfortunately, but the word Daily is just as common a word as Unfortunately.</Paragraph>
<Paragraph position="5"> Identification of proper names is also important in machine translation, because usually proper names are transliterated (i.e., phonetically translated) rather than properly (semantically) translated. In confidential texts, such as medical records, proper names must be identified and removed before making such texts available to people unauthorized to have access to personally identifiable information. And in general, most tasks that involve text analysis will benefit from the robust disambiguation of capitalized words into proper names and common words.</Paragraph>
<Paragraph position="6"> Another important task of text normalization is sentence boundary disambiguation (SBD) or sentence splitting. Segmenting text into sentences is an important aspect in developing many applications: syntactic parsing, information extraction, machine translation, question answering, text alignment, document summarization, etc. Sentence splitting in most cases is a simple matter: a period, an exclamation mark, or a question mark usually signals a sentence boundary. In certain cases, however, a period denotes a decimal point or is a part of an abbreviation, and thus it does not necessarily signal a sentence boundary. Furthermore, an abbreviation itself can be the last token in a sentence in which case its period acts at the same time as part of this abbreviation and as the end-of-sentence indicator (fullstop). A detailed introduction to the SBD problem can be found in Palmer and Hearst (1997).</Paragraph>
<Paragraph position="7"> The disambiguation of capitalized words and sentence boundaries presents a chicken-and-egg problem. If we know that a capitalized word that follows a period is a common word, we can safely assign such period as sentence terminal. On the other hand, if we know that a period is not sentence terminal, then we can conclude that the following capitalized word is a proper name.</Paragraph>
<Paragraph position="8"> Another frequent source of ambiguity in end-of-sentence marking is introduced by abbreviations: if we know that the word that precedes a period is not an abbreviation, then almost certainly this period denotes a sentence boundary. If, however, this word is an abbreviation, then it is not that easy to make a clear decision. This problem is exacerbated by the fact that abbreviations do not form a closed set; that is, one cannot list all possible abbreviations. Moreover, abbreviations can coincide with regular words; for example, &amp;quot;in&amp;quot; can denote an abbreviation for &amp;quot;inches,&amp;quot; &amp;quot;no&amp;quot; can denote an abbreviation for &amp;quot;number,&amp;quot; and &amp;quot;bus&amp;quot; can denote an abbreviation for &amp;quot;business.&amp;quot; In this article we present a method that tackles sentence boundaries, capitalized words, and abbreviations in a uniform way through a document-centered approach.</Paragraph>
<Paragraph position="9"> As opposed to the two dominant techniques of computing statistics about the words that surround potential sentence boundaries or writing specialized grammars, our ap- null Mikheev Periods, Capitalized Words, etc.</Paragraph>
<Paragraph position="10"> proach disambiguates capitalized words and abbreviations by considering suggestive local contexts and repetitions of individual words within a document. It then applies this information to identify sentence boundaries using a small set of rules.</Paragraph>
</Section>
</Paper>

