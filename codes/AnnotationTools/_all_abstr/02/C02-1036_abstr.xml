<?xml version="1.0" standalone="yes"?>

<Paper uid="C02-1036">
<Title>Extraposition: A case study in German sentence realization</Title>
<Section position="1" start_page="0" end_page="0" type="abstr">
<SectionTitle>
Abstract
</SectionTitle>
<Paragraph position="0"> We profile the occurrence of clausal extraposition in corpora from different domains and demonstrate that extraposition is a pervasive phenomenon in German that must be addressed in German sentence realization. We present two different approaches to the modeling of extraposition, both based on machine learned decision tree classifiers. The two approaches differ in their view of the movement operation: one approach models multi-step movement through intermediate nodes to the ultimate target node, while the other approach models one-step movement to the target node. We compare the resulting models, trained on data from two domains and discuss the differences between the two types of models and between the results obtained in the different domains.</Paragraph>
<Paragraph position="1"> Introduction Sentence realization, the last stage in natural language generation, derives a surface string from a more abstract representation. Numerous complex operations are necessary to produce fluent output, including syntactic aggregation, constituent ordering, word inflection, etc. We argue that for fluent output from German sentence realization, clausal extraposition needs to be included. We show how to accomplish this task by applying machine learning techniques. A comparison between English and German illustrates that it is possible in both languages to extrapose clausal material to the right periphery of a clause, as the following examples show: Relative clause extraposition: English: A man just left who had come to ask a question.</Paragraph>
<Paragraph position="2"> German: Der Mann ist gerade weggegangen, der gekommen war, um eine Frage zu stellen.</Paragraph>
<Paragraph position="3"> Infinitival clause extraposition: English: A decision was made to leave the country.</Paragraph>
<Paragraph position="4"> German: Eine Entscheidung wurde getroffen, das Land zu verlassen.</Paragraph>
<Paragraph position="5"> Complement clause extraposition: English: A rumor has been circulating that he is ill.</Paragraph>
<Paragraph position="6"> German: Ein Gerucht ging um, dass er krank ist.</Paragraph>
<Paragraph position="7"> Unlike obligatory movement phenomena such as Wh-movement, extraposition is subject to pragmatic variability. A widely-cited factor influencing extraposition is clausal heaviness; in general, extraposition of heavy clauses is preferred over leaving them in place. Consider the following example from the technical domain: German: Es werden Datenstrukturen verwendet, die fur die Benutzer nicht sichtbar sind.</Paragraph>
<Paragraph position="8"> English: Data structures are used which are not visible to the user.</Paragraph>
<Paragraph position="9"> This perfectly fluent sentence contains an extraposed relative clause. If the relative clause is left in place, as in the following example, the result is less fluent, though still grammatical: ? Es werden Datenstrukturen, die fur die Benutzer nicht sichtbar sind, verwendet.</Paragraph>
<Paragraph position="10"> Data structures which are not visible to the users are used.</Paragraph>
<Paragraph position="11"> Table 1 presents a quantitative analysis of the frequency of extraposition in different corpora in both English and German. This analysis is based on automatic data profiling using the NLPWin system (Heidorn 2000). The technical manual corpus consists of 100,000 aligned English-German sentence pairs from Microsoft technical manuals. The Encarta corpora consist of 100,000 randomly selected sentences from the Encarta encyclopedia in both English and German. The output of the parser was post-processed to identify relative clauses (RELCL), infinitival clauses (INFCL), and complement clauses (COMPCL) that have been moved from a position adjacent to the term they modify. According to this data profile, approximately one third of German relative clauses are extraposed in technical writing, while only 0.22% of English relative clauses are extraposed in the corresponding sentence set. The high number of extraposed relative clauses in German is corroborated by numbers from the German hand-annotated NEGRA corpus. In NEGRA, 26.75% of relative clauses are extraposed. Uszkoreit et al. (1998) report 24% of relative clauses being extraposed in NEGRA, but their number is based on an earlier version of NEGRA, which is about half the size of the current NEGRA corpus.</Paragraph>
<Paragraph position="12"> We also used the NEGRA corpus to verify the accuracy of our data profiling with NLPWin. These results are presented in Table 2. We only took into account sentences that received a complete parse in NLPWin. Of the 20,602 sentences in NEGRA, 17,756 (86.19%) fell into that category. The results indicate that NLPWin is sufficiently reliable for the identification of relative clauses to make our conclusions noteworthy and to make learning from NLPWin-parsed data compelling.</Paragraph>
<Paragraph position="13"> Extraposition is so rare in English that a sentence realization module may safely ignore it and still yield fluent output. The fluency of sentence realization for German, however, will suffer from the lack of a good extraposition mechanism.</Paragraph>
<Paragraph position="14">  This evidence makes it clear that any serious sentence realization component for German needs to be able to produce extraposed relative clauses in order to achieve reasonable fluency. In the German sentence realization module, code-named Amalgam (Gamon et al. 2002, Corston-Oliver et al. 2002), we have successfully implemented both extraposition models as described here.</Paragraph>
<Paragraph position="15"> 1 Two strategies for modeling extraposition The linguistic and pragmatic factors involved in clause extraposition are inherently complex. We use machine learning techniques to leverage large amounts of data for discovering the relevant conditioning features for extraposition. As a machine learning technique for the problem at hand, we chose decision tree learning, a practical approach to inductive inference in widespread use. We employ decision tree learning to approximate discrete-valued functions from large feature sets that are robust to noisy data. Decision trees provide an easily accessible inventory of the selected features and some indication of their relative importance in predicting the target features in question. The particular tool we used to build our decision trees is the WinMine toolkit (Chickering et al., 1997, n.d.). Decision trees built by WinMine predict a probability distribution over all possible target values. We consider two different strategies for the machine-learned modeling of extraposition. The two strategies are a series of movements versus a single reattachment.</Paragraph>
<Section position="1" start_page="0" end_page="0" type="sub_section">
<SectionTitle>
1.1 Multi-step movement
</SectionTitle>
<Paragraph position="0"> In the multi-step movement approach, the question to model for each potential attachment site of an extraposable clause is whether the clause should move up to its grandparent (a &amp;quot;yes&amp;quot; answer) or remain attached to its current parent (a &amp;quot;no&amp;quot; answer). In other words, we have cast the problem as a staged classification task. At generation runtime, for a given extraposable clause, the movement question is posed, and if the DT classifier answers &amp;quot;yes&amp;quot;, then the clause is reattached one level up, and the question is posed again. The final attachment site is reached when the answer to the classification task is &amp;quot;no&amp;quot;, and hence further movement is barred. Figure 1 illustrates the multi-step movement of a clause (lower triangle) through two steps to a new landing site (the reattached clause is the upper triangle). Note that in both Figure 1 and Figure 2 linear order is ignored; only the hierarchical aspects of extraposition are represented.</Paragraph>
</Section>
<Section position="2" start_page="0" end_page="0" type="sub_section">
<SectionTitle>
1.2 One-step movement
</SectionTitle>
<Paragraph position="0"> Modeling extraposition as a one-step movement involves a classification decision for each node in the parent chain of an extraposable clause. The classification task can be formulated as &amp;quot;should the extraposable clause move up to this target from its base position?&amp;quot;. Figure 2 shows the one-step movement approach to extraposition in the same structural configuration as in Figure 1.</Paragraph>
<Paragraph position="1"> In this example, out of the three potential landing sites, only one qualifies. At generation runtime, if more than one node in the parent chain qualifies as a target for extraposition movement, the node with the highest probability of being a target is chosen. In the event of equally likely target nodes, the target node highest in the tree is chosen.</Paragraph>
</Section>
</Section>
</Paper>

