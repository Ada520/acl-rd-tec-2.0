<?xml version="1.0" standalone="yes"?>

<Paper uid="J02-1001">
<Title>Binding Machines</Title>
<Section position="2" start_page="0" end_page="2" type="abstr">
<SectionTitle>
1. Introduction
</SectionTitle>
<Paragraph position="0"> Since the so-called integrative approach to anaphor resolution was developed in the late 1980s (Carbonell and Brown 1988; Rich and LuperFoy 1988; Asher and Wada 1989), and its practical viability extensively tested (e.g., Lappin and Leass 1994; Mitkov 1997, 1998), it has been common wisdom that factors determining the antecedents of anaphors divide into filters and preferences. The former exclude impossible antecedents and help to circumscribe the set of antecedent candidates; the latter help to pick the most likely candidate, which will be proposed as the antecedent.</Paragraph>
<Paragraph position="1"> Binding constraints are a significant subset of such filters. As they delimit the relative positioning of anaphors and their possible antecedents in grammatical geometry, these constraints are crucial to restricting the search space for antecedents and enhancing the performance of anaphor resolvers.</Paragraph>
<Paragraph position="2">  From an empirical perspective, they stem from quite robust generalizations and exhibit a universal character, given their parameterized validity across natural languages. From a conceptual point of view, in turn, the relations among binding constraints involve nontrivial symmetry, which lends them a modular nature. Accordingly, they have been considered one of the most robust and intriguing grammar submodules, usually referred to as binding theory. However, in contrast to this, the formal and computational handling of binding constraints has presented considerable resistance.</Paragraph>
<Paragraph position="3"> Anaphor resolution typically builds on many sources of information--among them, information about the grammatical structure of the sentence--so that the different filters and preferences may be used. Consequently, it must in general be regarded as a postgrammatical process, in the sense that it is completed after sentences are parsed. Binding constraints, as a subset of the filters for anaphor resolution, are a special case  convention: anaphors divide into reflexives and nonreflexives; reflexives form a class that includes short-distance (ruled by Constraint A; e.g., himself ) and long-distance reflexives (Constraint Z; e.g., Chinese ziji); nonreflexives include pronouns (Constraint B; e.g., he) and nonpronouns (Constraint C; e.g., the student).</Paragraph>
<Paragraph position="4"> c(c) 2002 Association for Computational Linguistics Computational Linguistics Volume 28, Number 1 in this respect. Given that they form a submodule of grammar, they are specified on a par with other grammatical submodules and constraints, and they are thus expected to be integrated already into the processing of grammar. Nevertheless, this integration cannot be considered to have been adequately achieved.</Paragraph>
<Paragraph position="5"> As we will discuss at length, the original methodology for verifying the compliance of grammatical representations with binding constraints requires extragrammatical processing steps delivering a forest of indexed trees to anaphor resolvers (Chomsky 1981). More recently, constraint-based grammatical frameworks either require special-purpose extensions of the description formalism, though ensuring only a partial handling of these constraints, as in Lexical-Functional Grammar (LFG; Dalrymple 1993), or do not offer a solution yet to integrate them into grammar, as in Head-Driven Phrase Structure Grammar (HPSG; Pollard and Sag 1994).</Paragraph>
<Paragraph position="6">  Our primary goal here is thus to bridge the gap between the grammatical nature of binding constraints and their full integration into grammar processing. In particular, we aim at achieving this in such a way that a lean interface between grammar and reference processing emerges.</Paragraph>
<Paragraph position="7"> In Section 2, we first underline the distinction, seldom taken into account, between specification and verification of binding constraints. We then review advances proposed in the literature concerning the completion of the verification task. We observe that three major lines of progress can be identified: packing of anaphoric ambiguity, packing of nonlocal context, and lexicalization of binding constraints.</Paragraph>
<Paragraph position="8"> Building on these contributions, in Section 3 we argue that the remaining step forward is to harmonize these different advances. We suggest that a more accurate, semantics-driven comprehension of the nature of binding constraints is a relevant move toward this harmonization. On the basis of this revision, we introduce a methodology for verifying these constraints, which rests on the new concept of binding machine, to be defined.</Paragraph>
<Paragraph position="9"> In Section 4, in the light of this new methodology, we show how binding constraints can be given a unification-based specification and can be fully integrated into grammar.</Paragraph>
<Paragraph position="10"> In Section 5, we present an illustrative example and discuss in detail how binding constraints and reference-processing systems are coordinated, and how the previously identified drawbacks are overcome.</Paragraph>
<Paragraph position="11"> 2. Advances in the Verification Task In recent decades, great strides have been made toward an empirically adequate specification of binding constraints, this being an important research issue in theoretical linguistics. Many aspects of this issue--a parameterizable definition of local domain, the existence of a fourth constraint for long-distance reflexives, the possible subjectorientedness of some anaphors, and the degree of universality of binding constraints, to name just a few--have come under intense scrutiny.</Paragraph>
<Paragraph position="12"> In contrast, the verification task has been studied much less extensively. Even though important problems also remain to be solved in this more applied dimension</Paragraph>
</Section>
</Paper>

