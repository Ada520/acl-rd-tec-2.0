<?xml version="1.0" standalone="yes"?>

<Paper uid="P84-1103">
<Title>AMBIGUITY RESOLUTION IN THE HUMAN SYNTACTIC PARSER: AN EXPERIMENTAL STUDY</Title>
<Section position="1" start_page="0" end_page="481" type="abstr">
<SectionTitle>
AMBIGUITY RESOLUTION IN THE HUMAN SYNTACTIC PARSER: AN EXPERIMENTAL STUDY
</SectionTitle>
<Paragraph position="0"> (This paper presents in summary form some major points of Chapter 3 of Kurtzman, 1984.) Models of the human syntactic parsing mechanism can be classified according to the ways in which they operate upon ambiguous input. Each mode of operation carries particular requirements concerning such basic computational characteristics of the parser as its storage capacities and the scheduling of its processes, and so specifying which mode is actually embodied in human parsing is a useful approach to determining the functional organization of the human parser. In Section l, a preliminary taxonomy of parsing models is presented, based upon a consideration of modes of handling ambiguities; and then, in Section 2, psycholinguistic evidence is presented which indicates what type of model best describes the human parser.</Paragraph>
<Paragraph position="1"> I. Parsing Models Parsing models can be initially classified according to two basic binary features. One feature is. whether the model immediately analyzes an ambiguity, i.e., determines structure for the ambiguous portion of the string as soon as that portion begins, or delays the analysis, i.e., determines structure only after further material of the string is received. The other feature is whether the model constructs just a single analysis of the ambiguity at one time, or instead constructs multiple analyses in ~. The following account develops and compITcates this initial classification scheme.</Paragraph>
<Paragraph position="2"> Not every type of model described here has actually been proposed in the literature. The purpose here is to outline the space of possibilities so that a freer exploration and clearer evaluation of types can be made.</Paragraph>
<Paragraph position="3"> An Immediate Single Analysis (ISA) model is characterized by two properties: (1) An ambiguity is resolved as soon as it arises, i.e., on its first word (or morpheme); (2) the analysis that serves as the resolution of the ambiguity is adopted without consideration of any of the other possible analyses. Typically, such models lack the capability to store input material in a form which is not completely analyzed. Pure top-down, depth-first models such as classical ATN's (Woods, 1970) are examples of ISA models.</Paragraph>
<Paragraph position="4"> For certain sentences, Frazier &amp; Fodor's (1978) Sausage Machine also behaves like an ISA model. In explaining their Local Association principle, they claim that in the first stage of parsing, structure can be built for only a small number of words at a time. As a result, in a sentence like &amp;quot;Rose read the note, the memo and the letter to Mary,&amp;quot; the PP &amp;quot;to Mary&amp;quot; is immediately attached into a complex NP with &amp;quot;the letter&amp;quot; without any consideration of the other possible attachment directly into the VP, the head of which (&amp;quot;read&amp;quot;) is many words back.</Paragraph>
<Paragraph position="5"> A Dela_eZay_ed_Single ~ (DSA) model is also characterized by two propertles: (1) When an ambiguity is reached, no analysis is attempted until a certain amount of further input is received; and (2) when an anlysis is attempted, then the analysis that serves as the resolution of the ambiguity is adopted without consideration of any other possible analyses (if any others are still possible--i.e., if the string is still ambiguous). A bottom-up parser is an example of a DSA model. Another example is Marcus's (1980) Parsifal. These models must have some sort of storage buffer for holding unanalyzed material.</Paragraph>
<Paragraph position="6"> It is possible for Single Analysis models to combine Immediate and Delayed determination of structure. Ford, Bresnan, &amp; Kaplan's (1982) version of a GSP does so in a limited way. Their Final Arguments principle permits a delay in the determination of the attachment of particular constituents into the overall structure of the sentence that has been determined at certain points. (The GSP's Chart is what stores the unattached constituents.) However, it must be noted that during the period in which that determination is delayed, other attachment possibilities of the constituent into higher-level structures (which are themselves not yet attached into the overall sentence structure) are considered.</Paragraph>
<Paragraph position="7"> Therefore, it is not the case in their model that there is a true delay in attempting any analysis.</Paragraph>
<Paragraph position="8"> The fundamentally Immediate nature of the GSP requires that some attachment possibility always be tested immedi-ai-e-ly.</Paragraph>
<Paragraph position="9"> More authentic combinations of D- and ISA could be constructed by modifying bottom-up parsers or Parsifal, which are both inherently Delaying, so that under certain conditions auxiliary procedures are called which implement Immediate Analysis.</Paragraph>
<Paragraph position="10"> (There is, though, no real motivation at present for such modifications.) It can be noted that while bottom-up mechanisms are logically capable of only Delayed Analysis, top-down mechanisms are capable of either Immediate or Delayed Analysis.</Paragraph>
<Paragraph position="11"> Another type of model utilizes Delayed Parallel Analysis (DPA). In this type, paralle-T-a-6aTysls--\]-s--6-f~ an ambiguity is commenced only after some delay  beyond the beginning of the ambiguous portion of the string. Such a model requires a buffer to hold input material during the delay before it is analyzed. Also, any model that allows parallelism requires that the parser's representational/storage medium be capable of supporting and distinguishing between multiple analyses of the same input material, and that the parser contain procedures that eventually oversee a decision of which analysis is to be adopted as resolution of the ambiguity. An example of a DPA parser would be a generally bottom-up parser which was adjusted so that at certain points, perhaps at the ends of sentences or clauses, more than one analysis could be constructed. Another example would be a (serious) modification of Parsifal such that when the pattern of more than one production rule is matched, all of those rules could be activated.</Paragraph>
<Paragraph position="12"> There are actually two sorts of parallelism.</Paragraph>
<Paragraph position="13"> One can be called momentary parallelism, in which a choice is made among the possible analyses according to some decision procedure immediately--before the next word is received. The other sort can be called strong parallelism, in which the possible analyses can stay active and be expanded as new input is received. If further input is inconsistent with any of the analyses, then that analysis is dropped.</Paragraph>
<Paragraph position="14"> There might also be a limitation on how long parallel analyses can be held, with some decision procedure choosing from the remaining possibilities once the limiting point is reached. (It would seem that some limitation would be required in order to account for garden-pathing.) In addition, in strong parallelism although multiple analyses are all available, they might still be ranked in a preference order.</Paragraph>
<Paragraph position="15"> A further type of model is characterized by Immediate Parallel Analysis (IPA), in which all of the possib~ analyses of an ambiguity are built as soon as the ambiguous portion of the string begins. Frazier &amp; Fodor's (1978) parser is partially describable as an IPA model with momentary parallelism. In explaining their Minimal Attachment principle, they propose that an attempt is made to build in parallel all the possible available structures, on the first word of an ambiguity. The particular structure that contains the fewest connecting nodes is the one that is then right away adopted.</Paragraph>
<Paragraph position="16"> Fodor, Bever, &amp; Garrett (1974) proposed an IPA with strong parallelism. As soon as an ambiguity arises, the possible analyses are determined in parallel and can stay active until a clause boundary is reached, at which point a decision among them must be made.</Paragraph>
<Paragraph position="17"> There is another design characteristic that a parser might have which has not been considered so far. Instead of the parser, after making a single or parallel analysis of an ambiguity, maintaining the analysis/es as further input is received, one can imagine it just dropping whatever analysis it had determined. This can be called abandonment.</Paragraph>
<Paragraph position="18"> Then analysis would be resumed at some later point, determined by some scheduling principles. Perhaps the most natural form of a parser which utilizes abandonment would be an IPA model. The construction of more than one analysis for an ambiguity would trigger the parser to throw out the analyses and wait until a later point to attempt analysis anew.</Paragraph>
<Paragraph position="19"> Thus, the parser is not forced to make an early decision which might turn out to be incorrect, as in momentary parallelism, nor is it forced to carry the load of multiple analyses, as in strong parallelism. At an implementation level, this abandonment might be realizedas mutual inhibition by the several analyses.</Paragraph>
<Paragraph position="20"> Abandonment is also possible in an ISA model.</Paragraph>
<Paragraph position="21"> Take, for instance, a generally bottom-up model in which constituents can be held free, not yet attached into the overall sentence structure. A constraint could be plced on such a model which forbade such free constituents, forcing the analyses of the constituents to be abandoned if they cannot immediately be fit into the overall sentence structure. (Such a constraint might be implemented as a limit on storage space for free constituents.) Then, at some later point, a new analysis of the constituents and their attachments would be made.</Paragraph>
<Paragraph position="22"> Abandonment is also possible, though less intuitively satisfying, in delayed models. In these models, there would be a delay in beginning analysis, and then another delay as a result of abandonment. null When analysis is begun again following abandonment, it can proceed according to any of the above models, though of course some would seem to be more natural than others.</Paragraph>
</Section>
</Paper>

