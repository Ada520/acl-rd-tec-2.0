<?xml version="1.0" encoding="UTF-8"?><Paper acl-id="H05-2008"><Title>Prague Dependency Treebank as an exercise book of Czech</Title><Section end_page="14" position="1" start_page="0" type="abstr"><SectionTitle>Abstract</SectionTitle><S position="0"> There was simply <term class="other">linguistics</term> at the beginning. During the years, <term class="other">linguistics</term> has been accompanied by various attributes.</S><S position="1"> For example corpus one. While a name <term class="lr">corpus</term> is relatively young in <term class="other">linguistics</term>, its content related to a language - collection of texts and speeches - is nothing new at all. Speaking about <term class="other">corpus linguistics</term> nowadays, we keep in mind collecting of <term class="other">language resources</term> in an electronic form.</S><S position="2"> There is one more attribute that computers together with mathematics bring into <term class="other">linguistics</term> - computational. The progress from working with <term class="lr">corpus</term> towards the computational approach is determined by the fact that electronic data with the unlimited computer potential give opportunities to solve natural language processing issues in a fast way (with regard to the possibilities of human being) on a statistically significant amount of data.</S><S position="3"> Listing the attributes, we have to stop for a while by the notion of <term class="lr">annotated corpora</term>. Let us build a big <term class="lr">corpus</term> including all <term class="other">Czech</term> text data available in an electronic form and look at it as a sequence of characters with the space having dominating status a separator of words. It is very easy to compare two words (as strings), to calculate how many times these two words appear next to each other in a <term class="lr">corpus</term>, how many times they appear separately and so on. Even more, it is possible to do it for every language (more or less). This kind of calculations is language independent it is not restricted by the knowledge of language, its <term class="other">morphology</term>, its <term class="other">syntax</term>. However, if we want to solve more complex language tasks such as <term class="tech">machine translation</term> we cannot do it without deep knowledge of language. Thus, we have to transform language knowledge into an electronic form as well, i.e. we have to formalize it and then assign it to words (e.g., in case of <term class="other">morphology</term>), or to sentences (e.g., in case of <term class="other">syntax</term>). A <term class="lr">corpus</term> with additional information is called an <term class="lr">annotated corpus</term>.</S><S position="4"> We are lucky. There is a real <term class="lr">annotated corpus</term> of <term class="other">Czech</term> <term class="lr-prod">Prague Dependency Treebank</term> (<term class="lr-prod">PDT</term>). <term class="lr-prod">PDT</term> belongs to the top of the world <term class="other">corpus linguistics</term> and its second edition is ready to be officially published (for the first release see (Hajic et al., 2001)). <term class="lr-prod">PDT</term> was born in Prague and had arisen from the tradition of the successful <term class="other">Prague School of Linguistics</term>. The <term class="tech">dependency approach to a syntactical analysis</term> with the main role of <term class="other">verb</term> has been applied. The <term class="other">annotations</term> go from the <term class="other">morphological level</term> to the <term class="other">tectogrammatical level</term> (level of underlying <term class="other">syntactic structure</term>) through the <term class="other">intermediate syntactical-analytical level</term>. The data (2 mil. words) have been annotated in the same direction, i.e., from a more simple level to a more complex one. This fact corresponds to the amount of data annotated on a particular level. The largest number of words have been annotated morphologically (2 mil. words) and the lowest number of words tectogramatically (0.8 mil. words).</S><S position="5"> In other words, 0.8 million words have been annotated on all three levels, 1.5 mil. words on both <term class="other">morphological and syntactical level</term> and 2 mil. words on the lowest <term class="other">morphological level</term>.</S><S position="7"> Besides the verification of 'pre-PDT' theories and formulation of new ones, <term class="lr-prod">PDT</term> serves as <term class="lr">training data</term> for <term class="tech">machine learning methods</term>. Here, we present a system Styx that is designed to be an exercise book of <term class="other">Czech morphology and syntax</term> with exercises directly selected from <term class="lr-prod">PDT</term>.</S><S position="8"> The schoolchildren can use a computer to write, to draw, to play games, to page encyclopedia, to compose music - why they could not use it to parse a sentence, to determine <term class="other">gender</term>, <term class="other">number</term>, <term class="other">case</term>, . . . ? While the Styx development, two main phases have been passed:</S> <S> 1. transformation of an academic version of <term class="lr-prod">PDT</term> into a school one. 20 thousand sentences were automatically selected out of 80 thousand sentences morphologically and syntactically annotated. The complexity of selected sentences exactly corresponds to the complexity of sentences exercised in the current text-books of Czech. A syntactically annotated sentence in <term class="lr-prod">PDT</term> is represented as a <term class="other">tree</term> with the same number of <term class="other">nodes</term> as is the number of the words in the given sentence. It differs from the schemes used at schools (Grepl and Karlik, 1998). On the other side, the linear structure of <term class="other">PDT morphological annotations</term> was taken as it is only <term class="other">morphological categories</term> relevant to school syllabuses were preserved.</S><S position="9"> 2. proposal and implementation of exercises. The general computer facilities of basic and secondary schools were taken into account while choosing a potential programming language to use. The Styx is implemented in Java that meets our main requirements platform-independent system and system stability.</S><S position="10"> At least to our knowledge, there is no such system for any language corpus that makes the schoolchildren familiar with an academic product. At the same time, our system represents a challenge and an opportunity for the academicians to popularize a field devoted to the <term class="tech">natural language processing</term> with promising future.</S><S position="11"> A number of electronic exercises of Czech <term class="other">morphology</term> and <term class="other">syntax</term> were created.</S><S position="12">However, they were built manually, i.e. authors selected sentences either from their minds or randomly from books, newspapers. Then they analyzed them manually. In a given manner, there is no chance to build an exercise system that refects a real usage of language in such amount the Styx system fully offers.</S></Section></Paper>